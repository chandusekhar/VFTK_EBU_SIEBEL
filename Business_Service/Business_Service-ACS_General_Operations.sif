<?xml version="1.0" encoding="UTF-8"?>
<REPOSITORY
   NAME="Siebel Repository"
   UPDATED="08/11/2017 16:02:15"
   UPDATED_BY="SADMIN"
   CREATED="08/11/2017 11:53:44"
   CREATED_BY="SADMIN"
   FIO_PLACEHOLDER_FIO="TRUE">
	<PROJECT
	   ALLOW_OBJECT_LOCKING="Y"
	   INACTIVE="N"
	   LOCKED="N"
	   NAME="ACS NI HLR Logic"
	   UI_FREEZE="N"
	   UPDATED="01/16/2018 14:31:46"
	   UPDATED_BY="IBM_TFERREIRA"
	   CREATED="01/31/2009 12:28:34"
	   CREATED_BY="SADMIN"
	   FIO_PLACEHOLDER_FIO="TRUE">
		<BUSINESS_SERVICE
		   CACHE="N"
		   CLASS="CSSService"
		   COMMENTS="VFTK MC R1.3 20100630 - Updated HandleEAIResponse method for B3 Requirement and created a new method CreateMernisSR for CM2 Requirement.
ACS AD 26-Jul-06: Created. This is a collection of general purpose methods that can be called from any script"
		   EXTERNAL_USE="Y"
		   HIDDEN="N"
		   INACTIVE="N"
		   NAME="ACS General Operations"
		   OBJECT_LANGUAGE_LOCKED="ENU"
		   OBJECT_LOCKED="Y"
		   OBJECT_LOCKED_DATE="01/16/2018 12:23:20"
		   SERVER_ENABLED="N"
		   STATE_MANAGEMENT_TYPE="Stateful"
		   WEB_SERVICE_ENABLED="N"
		   OBJECT_LOCKED_BY_NAME="IBM_TFERREIRA"
		   UPDATED="01/16/2018 14:31:45"
		   UPDATED_BY="IBM_TFERREIRA"
		   CREATED="04/30/2014 20:10:07"
		   CREATED_BY="SADMIN">
			<BUSINESS_SERVICE_LOCALE
			   APPLICATION_CODE="STD"
			   DISPLAY_NAME="ACS General Operations"
			   INACTIVE="N"
			   LANGUAGE_CODE="ENU"
			   NAME="ENU-STD"
			   TRANSLATE="Y"
			   UPDATED="04/30/2014 20:10:07"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:07"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_LOCALE>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CalcExempFlag"
			   UPDATED="04/30/2014 20:10:07"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:07"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Out"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="Out"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:07"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:07"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SubClass"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="SubClass"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:07"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:07"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CalcExempFlag"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method is used to change the date format of the outbound IO to match the ISO 8601 format"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ChangeDateToEAI"
			   UPDATED="04/30/2014 20:10:07"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:07"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Hierarchy"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SiebelMessage"
				   OPTIONAL="N"
				   STORAGE_TYPE="Hierarchy"
				   TYPE="Input / Output"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="SiebelMessage"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:07"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:07"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="ChangeDateToEAI"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 07-03-2007: The script will check if a modify order can be created for the and return a flag indicating this. This script is used in all the asset applets present in the customer portal view, as well as in all web service Modify Order events"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CheckCreateModifyOrder"
			   UPDATED="04/30/2014 20:10:07"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:07"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Asset Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CreateModifyFlag"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CheckCreateModifyOrder"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CheckParams"
			   UPDATED="04/30/2014 20:10:07"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:07"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CheckParams"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 07-03-2007: The script will check if an order can be submitted for the and return a flag indicating this. This script is used in the sales order view, as well as in all web service Modify Order events"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CheckSubmitOrder"
			   UPDATED="04/30/2014 20:10:07"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:07"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CreateModifyFlag"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Order Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CheckSubmitOrder"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CompareDate"
			   UPDATED="04/30/2014 20:10:07"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:07"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Date1"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Greater"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CompareDate"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method create a copy of all Line Items with action Update. The original Line Item will be updated to delete and the new one will be updated to add"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CopyUpdateLineItems"
			   UPDATED="04/30/2014 20:10:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:07"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:07"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:07"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CopyUpdateLineItems"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This Script is used to correct an error in hierarchial IOs caused by Siebel CR - 12-JNXE39."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CorrectProductIO"
			   UPDATED="04/30/2014 20:10:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:08"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FieldName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SiebelMessage"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input / Output"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CorrectProductIO"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="Added for Customer Creation on TaskUI"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CreateAndLoadOnContextNewCustomer"
			   UPDATED="04/30/2014 20:10:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:08"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CreateAndLoadOnContextNewCustomer"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS MC 20100524 - Newly Created for CM2 Requirement."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CreateMernisSR"
			   UPDATED="04/30/2014 20:10:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:08"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Account Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Area"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Asset Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Description"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Order Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Owner Group"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Service Request Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Status"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Sub Area"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Sub Status"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Type"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CreateMernisSR"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method takes an AssetId as input, creates a modify order for this asset and returns the Id of the created Order."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CreateModifyOrder"
			   UPDATED="04/30/2014 20:10:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:08"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AssetId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Method"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CreateModifyOrder"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CreateSR"
			   UPDATED="10/12/2015 11:09:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:08"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Account Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Area"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Asset Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Billing Account Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/01/2014 11:49:09"
				   UPDATED_BY="SADMIN"
				   CREATED="12/01/2014 11:49:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Description"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="MSISDN"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/01/2014 11:49:09"
				   UPDATED_BY="SADMIN"
				   CREATED="12/01/2014 11:49:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Order Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Owner"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/01/2014 11:49:09"
				   UPDATED_BY="SADMIN"
				   CREATED="12/01/2014 11:49:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Owner Group"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   COMMENTS="WA18-MNP:20150323:MS-argument passed by &quot;VFTREBU Convertion Server II BS::Call_BS_Create_SR&quot;. Used in SRs created for MNP PortIn"
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Port Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/02/2015 14:11:41"
				   UPDATED_BY="SADMIN"
				   CREATED="04/02/2015 14:11:41"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Priority"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/01/2014 11:49:09"
				   UPDATED_BY="SADMIN"
				   CREATED="12/01/2014 11:49:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Service Request Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Status"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Sub Area"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Sub Status"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Triplet No"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="10/12/2015 11:09:55"
				   UPDATED_BY="SADMIN"
				   CREATED="10/12/2015 11:09:55"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Type"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="VF Customer GSM Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/01/2014 11:49:09"
				   UPDATED_BY="SADMIN"
				   CREATED="12/01/2014 11:49:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CreateSR"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:08"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:08"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="DateToString"
			   UPDATED="04/30/2014 20:10:09"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:09"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Date"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="dDate"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="DateToString"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method will return the value of a particular attribute from an order."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ExtractAttribValue"
			   UPDATED="04/30/2014 20:10:09"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:09"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AttributeName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AttributeValue"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LineItemName"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="ExtractAttribValue"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method will return the value of a particular attribute from an order based upon Line Item Id."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ExtractAttribValue_Id"
			   UPDATED="04/30/2014 20:10:09"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:09"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AttributeName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AttributeValue"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LineItemId"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="ExtractAttribValue_Id"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method will extract and return an attribute value from an integration object."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ExtractValueFromXML"
			   UPDATED="04/30/2014 20:10:09"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:09"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="ExtractValueFromXML"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 13-02-2007: This method will get a buscomp name and row_id and will move the focus to the selected record in the buscomp. (buscomp should be present in the current BO)"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="FocusOnRecord"
			   UPDATED="04/30/2014 20:10:09"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:09"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="BuscompName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="RecordId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="FocusOnRecord"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetAssetIntegrationId"
			   UPDATED="04/30/2014 20:10:09"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:09"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Asset Integration Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Line Item Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetAssetIntegrationId"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AT 21-08-2006: This method will search code of messages."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetLookupMsg"
			   UPDATED="04/30/2014 20:10:10"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:09"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="Code"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:09"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:09"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Message"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:09"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="Message"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:09"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:09"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="MessageCategory"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:09"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="MessageCategory"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:10"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:10"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetLookupMsg"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS MV 2-8-2007: This methid will retrieve the parameter attributes based on parameter Name"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetParameter"
			   UPDATED="04/30/2014 20:10:10"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:10"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons1"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons3"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Description"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Function"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Value"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetParameter"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS MV 2-8-2007: This methid will retrieve the parameter attributes based on parameter Name"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetParameter_3Inputs"
			   UPDATED="04/23/2015 20:18:23"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:10"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons1"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons3"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Description"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Function"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   COMMENTS="//SANTOSP 04/2015 - VFTRCBU-1769"
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Value"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/23/2015 20:18:23"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetParameter"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS MV 2-8-2007: This methid will retrieve the parameter attributes based on parameter Name"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetPositionType"
			   UPDATED="04/30/2014 20:10:10"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:10"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="PositionType"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetPositionType"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method is used to retrieve the product port id when  the product name is entered"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetProductPortId"
			   UPDATED="04/30/2014 20:10:11"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:10"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ChildProdName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="ChildProdName"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:10"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:10"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ParProdName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="ParProdName"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:10"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:10"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Version"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:10"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:10"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="Version"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:10"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:10"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetProductPortId"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetRaiseErrorMsg"
			   UPDATED="04/30/2014 20:10:11"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:11"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Message"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="MessageCategory"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method will take the EAI response message as input and return the status and error message."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="HandleEAIResponse"
			   UPDATED="04/30/2014 20:10:11"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:11"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ErrorCode"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ErrorMessage"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Hierarchy"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Siebel Message"
				   OPTIONAL="N"
				   STORAGE_TYPE="Hierarchy"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="StatusCode"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="HandleEAIResponse"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="Holidays_Validation"
			   UPDATED="04/30/2014 20:10:11"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:11"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Date"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Result"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="Holidays_Validation"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="IsViewReadOnly"
			   UPDATED="04/30/2014 20:10:11"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:11"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ActiveViewName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="ActiveViewName"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:11"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:11"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Out"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="Out"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:11"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:11"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="IsViewReadOnly"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="KpiLogging"
			   UPDATED="04/30/2014 20:10:12"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:11"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="UserId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="description"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="kpiRef"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="processName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="result"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="rootTransactionId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="status"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:11"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:11"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="task"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="timestampEnd"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="timestampStart"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="KpiLogging"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACN TK: loader grant matrix"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="LoadGrantMatrix"
			   UPDATED="04/30/2014 20:10:12"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:12"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Hierarchy"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="grantMatrix"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Hierarchy"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="LoadGrantMatrix"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="LogInputs"
			   UPDATED="04/30/2014 20:10:12"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:12"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FileName"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Input1"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Input2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Input3"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="LogInputs"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method will log the error message and error code parameters into a file that is maintained as an LOV. It is used in background workflows to log the errors"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="LogWorkflowErrors"
			   UPDATED="04/30/2014 20:10:12"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:12"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ErrorCode"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ErrorMessage"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OtherInputs1"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OtherInputs2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="LogWorkflowErrors"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="LookupName for Script"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="LookupName"
			   UPDATED="04/02/2015 14:11:41"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:12"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Inputs"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/02/2015 14:11:41"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Outputs"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/02/2015 14:11:41"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method will modify the value of a particular attribute from an order."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ModifyAttribValue"
			   UPDATED="04/30/2014 20:10:13"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:12"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AttributeName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AttributeValue"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LineItemName"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:12"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:12"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="ModifyAttribValue"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ModifyOrderFormTaskUI"
			   UPDATED="04/30/2014 20:10:13"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:13"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Account Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Billing Account Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Order Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="ModifyOrderFormTaskUI"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="PopulateModifyOrderId"
			   UPDATED="04/30/2014 20:10:13"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:13"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   PREFERRED_SEQUENCE="1"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="OrderId"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:13"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:13"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Result"
				   OPTIONAL="N"
				   PREFERRED_SEQUENCE="2"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="Result"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:13"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:13"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="PopulateModifyOrderId"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="PopulateModifyOrderId2"
			   UPDATED="04/30/2014 20:10:13"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:13"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   PREFERRED_SEQUENCE="1"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="OrderId"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:13"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:13"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Result"
				   OPTIONAL="N"
				   PREFERRED_SEQUENCE="2"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
					<BUSINESS_SERVICE_METHOD_ARG_LOCALE
					   APPLICATION_CODE="STD"
					   DISPLAY_NAME="Result"
					   INACTIVE="N"
					   LANGUAGE_CODE="ENU"
					   NAME="ENU-STD"
					   TRANSLATE="Y"
					   UPDATED="04/30/2014 20:10:13"
					   UPDATED_BY="SADMIN"
					   CREATED="04/30/2014 20:10:13"
					   CREATED_BY="SADMIN">
					</BUSINESS_SERVICE_METHOD_ARG_LOCALE>
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="PopulateModifyOrderId2"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method will take the attribute values of an asset and populate them into the Previous Text Value of the corresponding orders attributes. It takes the Order Id as input."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="PopulateOrderAttrOldVal"
			   UPDATED="04/30/2014 20:10:13"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:13"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="PopulateOrderAttrOldVal"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="PopulateOrderFieldsBasedOnReason"
			   UPDATED="04/30/2014 20:10:13"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:13"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="PopulateOrderFieldsBasedOnReason"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="RefreshSmartScriptContext"
			   UPDATED="04/30/2014 20:10:13"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:13"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="RefreshSmartScriptContext"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:13"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:13"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="For Customer Creation on TaskUI"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="SearchMainContextOnDB"
			   UPDATED="04/30/2014 20:10:14"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:13"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="SearchMainContextOnDB"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 26-07-2006: This method is used to remove the siebel envelope before sending the outbound message"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="SendMessageToEAI"
			   UPDATED="04/30/2014 20:10:14"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:14"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Datamap Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Object Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Source IO Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Target IO Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="WS Business Service"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="WS Method Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="SendMessageToEAI"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="SendNotificationEmail"
			   UPDATED="04/30/2014 20:10:14"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:14"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CommTemplateName"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FromAddress"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LOVType"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="RowId"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SourceBusObj"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ToAddress"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="WF WP 11"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="SetIemOrganization"
			   UPDATED="04/30/2014 20:10:14"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:14"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Organization Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Service Request Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="SetIemOrganization"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="SetProfileAttr"
			   UPDATED="04/30/2014 20:10:14"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:14"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="PAName"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="PAValue"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="SetProfileAttr"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:14"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:14"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS AD 20-11-2006: This is a common script that takes an order id as input and submits it."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="SubmitOrder"
			   UPDATED="04/30/2014 20:10:15"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:14"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ErrorCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ErrorMessage"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OrderId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="StatusCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="SubmitOrder"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACS MV 12-09-2007: This method translates value stored on Variable"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="TranslateVariable"
			   UPDATED="04/30/2014 20:10:15"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:15"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LIC"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LOVType"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Value"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="TranslateVariable"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="VF GetParameter"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="VFGetParameter"
			   UPDATED="04/30/2014 20:10:15"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:15"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons1"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Cons3"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Description"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Function"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Value"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetParameter"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="04/30/2014 20:10:15"
				   UPDATED_BY="SADMIN"
				   CREATED="04/30/2014 20:10:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CalcExempFlag"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CalcExempFlag(Inputs,Outputs)
{
//Cisoni Luca added for C_MSP00001629 enhancement
 try{
  var SubClass = Inputs.GetProperty(&quot;SubClass&quot;);
  
    if(SubClass == &quot;NULL&quot;) 
      {
      Outputs.SetProperty(&quot;Out&quot;,&quot;N&quot;);
      return;
      }
      
    var BOLOV: BusObject = TheApplication().GetBusObject(&quot;List Of Values&quot;);
    var BCLOV: BusComp = BOLOV.GetBusComp(&quot;List Of Values&quot;);
    
    BCLOV.ClearToQuery(); //instead to use series of LookupValue, in one shot decide or not if the flag has to be Y
    BCLOV.SetViewMode(AllView);
    BCLOV.ActivateField(&quot;High&quot;);
    BCLOV.ActivateField(&quot;Type&quot;);
    BCLOV.ActivateField(&quot;Value&quot;);
    BCLOV.SetSearchSpec(&quot;Type&quot;,&quot;CUSTOMER_SUBCLASS&quot;);
    BCLOV.SetSearchSpec(&quot;Value&quot;,SubClass);
    BCLOV.SetSearchSpec(&quot;High&quot;,&quot;ExFlagON&quot;);
    BCLOV.ExecuteQuery(ForwardOnly);
    if(BCLOV.FirstRecord()) Outputs.SetProperty(&quot;Out&quot;,&quot;Y&quot;);
    else Outputs.SetProperty(&quot;Out&quot;,&quot;N&quot;);    
    return;
   }
  	finally
  	{
  		//IBM_TFERREIRA 20180116 DEF-24990 - Siebel Crash
  		BCLOV = null;
  		BOLOV = null;
  	  /*BOLOV = null;
  	  BCLOV = null;*/
  	}
}"
			   SEQUENCE="1"
			   UPDATED="01/16/2018 13:59:32"
			   UPDATED_BY="IBM_TFERREIRA"
			   CREATED="04/30/2014 20:10:15"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ChangeDateToEAI"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ChangeDateToEAI (Inputs, Outputs)
{
	try
	{
		var psInputs : PropertySet;
		var psOutputs : PropertySet;
		var psInputs1 : PropertySet;
		var psOutputs1 : PropertySet;
		psInputs   = TheApplication().NewPropertySet ();
		psOutputs  = TheApplication().NewPropertySet ();
		psInputs1  = TheApplication().NewPropertySet ();
		psOutputs1 = TheApplication().NewPropertySet ();
		
		var intChildCount = 0;
		var intCounter    = 0;
		
		psInputs  = Inputs.GetChild (0);
		psOutputs = Inputs.GetChild (0);
		
		intChildCount = psInputs.GetChildCount();
		for (intCounter = 0; intCounter &lt; intChildCount; intCounter++)
		{
			psInputs1 = psInputs.GetChild (intCounter);
			psOutputs.RemoveChild (intCounter);
			ChangeDateToEAI (psInputs1, psOutputs1);
			psOutputs.AddChild (psOutputs1);
		}
	}
	/*catch (e)// 11/03/2013 VF TR - Exception errors for Oracle Review
	{
	}*/
	finally
	{
		Outputs.AddChild (psOutputs);
		psOutputs1 		= null;
		psInputs1 		= null;
		psOutputs 		= null;
		psInputs 		= null;
	}
}"
			   SEQUENCE="2"
			   UPDATED="04/30/2014 20:10:15"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:15"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CheckCreateModifyOrder"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CheckCreateModifyOrder (Inputs, Outputs)
{

	try
	{
		var strAssetId        = Inputs.GetProperty (&quot;Asset Id&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		var boAsset : BusObject;
		var bcAsset : BusComp;
		var boOrderLineItems : BusObject;
		var bcOrderLineItems : BusComp;
		inProp.SetProperty(&quot;strAssetId&quot;, strAssetId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		var strAssetSrcExpr   = &quot;[Id] = &apos;&quot;+strAssetId+&quot;&apos;&quot;;
		var strOrderLiSrcExpr = &quot;&quot;;
		var strIntegrationId  = &quot;&quot;;
		var strOrdItemStatus  = &quot;&quot;;
		
		var booRecordExists;
		
		boAsset = TheApplication ().GetBusObject (&quot;Asset Management&quot;);
		bcAsset = boAsset.GetBusComp (&quot;Asset Mgmt - Asset - Header&quot;);
		
		boOrderLineItems = TheApplication ().GetBusObject (&quot;Order Entry - Line Items&quot;);
		bcOrderLineItems = boOrderLineItems.GetBusComp (&quot;Order Entry - Line Items&quot;);
		
		if (strAssetId.length &gt; 0)
		{
			bcAsset.ClearToQuery ();
			bcAsset.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
			bcAsset.ActivateField (&quot;Integration Id&quot;);
			bcAsset.SetSearchExpr (strAssetSrcExpr);
			bcAsset.ExecuteQuery(ForwardOnly);
			
			if (bcAsset.FirstRecord ())
			{
				strIntegrationId = bcAsset.GetFieldValue (&quot;Integration Id&quot;);
				//VFTK Junaid 20120520 - Added for Oracle Review 15
				inProp = TheApplication().NewPropertySet();
				inProp.SetProperty(&quot;strIntegrationId&quot;, strIntegrationId); 
				BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
				//End

				
				strOrderLiSrcExpr = &quot;[Asset Integration Id] = &apos;&quot;+strIntegrationId+&quot;&apos;&quot;;
				
				bcOrderLineItems.ClearToQuery ();
				bcOrderLineItems.ActivateField (&quot;Asset Integration Id&quot;);
				bcOrderLineItems.ActivateField (&quot;Status&quot;);
				bcOrderLineItems.SetViewMode(AllView);
				bcOrderLineItems.SetSearchExpr (strOrderLiSrcExpr);
				bcOrderLineItems.ExecuteQuery(ForwardOnly);
				
				booRecordExists = bcOrderLineItems.FirstRecord ();
				
				while (booRecordExists)
				{
					strOrdItemStatus = bcOrderLineItems.GetFieldValue (&quot;Status&quot;);
					
					if (strOrdItemStatus == &quot;Open&quot; || strOrdItemStatus == &quot;In-transit&quot; || strOrdItemStatus == &quot;Installed&quot;)
					{
						Outputs.SetProperty (&quot;CreateModifyFlag&quot;, &quot;N&quot;);
						break;
					}
					else
					{
						Outputs.SetProperty (&quot;CreateModifyFlag&quot;, &quot;Y&quot;);
					}
					booRecordExists = bcOrderLineItems.NextRecord ();
				}
			}
			else
			{
				TheApplication ().RaiseErrorText (&quot;The Asset Id is blank&quot;);
			}
		}
		else
		{
			TheApplication ().RaiseErrorText (&quot;Asset Id &quot;+strAssetId+&quot; is not valid&quot;);
		}
		
		if (Outputs.GetProperty (&quot;CreateModifyFlag&quot;) == &quot;&quot;)
		{
			Outputs.SetProperty (&quot;CreateModifyFlag&quot;, &quot;Y&quot;);
		}
	}
	catch (e)
	{
		Outputs.SetProperty (&quot;CreateModifyFlag&quot;, &quot;N&quot;);
		throw(e);
	}
	finally
	{
		strAssetId        = null;
		strAssetSrcExpr   = null;
		strOrderLiSrcExpr = null;
		strIntegrationId  = null;
		strOrdItemStatus  = null;
		booRecordExists   = null;
		bcAsset           = null;
		bcOrderLineItems  = null;
		inProp = null;
		outProp = null;
		BS = null;
		boOrderLineItems  = null;
		boAsset           = null;
	}
}"
			   SEQUENCE="3"
			   UPDATED="04/30/2014 20:10:15"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:15"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CheckParams"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CheckParams (Inputs, Outputs)
{
	try
	{
		var strOption = Inputs.GetProperty(&quot;Option&quot;);
		var OrderId = Inputs.GetProperty(&quot;OrderId&quot;);
		var strCurrRec = false;
		var Exists = &quot;N&quot;;
		var Campaign = &quot;&quot;;
		var SearchExpr = &quot;&quot;;
		
		var boparameter : BusObject = TheApplication().GetBusObject(&quot;ACS NI Parameter&quot;);
		var bcparameter : BusComp = boparameter.GetBusComp(&quot;ACS NI Parameter (Simple)&quot;);
		
		var BOOrder : BusObject = TheApplication().GetBusObject(&quot;X Order Entry&quot;);
		var BClineItems : BusComp = BOOrder.GetBusComp(&quot;HP Submit - Order Entry - Line Items&quot;);
		
		Outputs.SetProperty(&quot;Exists&quot;, &quot;NO&quot;);
		
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;OrderId&quot;, OrderId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		
		with(bcparameter)
		{
			ActivateField(&quot;Function&quot;);
			ActivateField(&quot;Name&quot;);
			ActivateField(&quot;Value&quot;);
		
			ClearToQuery();
			SetViewMode(AllView);
			SetSearchSpec(&quot;Function&quot;,&quot;VF_IPHONE_CAMPAIGN_CHECK&quot;);
			SetSearchSpec(&quot;Name&quot;,strOption);
			ExecuteQuery(ForwardOnly);
			strCurrRec = FirstRecord();
		
			while(strCurrRec)
			{
				Campaign = GetFieldValue(&quot;Value&quot;);
				with(BClineItems)
				{
					SearchExpr = &quot;[Order Header Id] = &apos;&quot;+OrderId+&quot;&apos; AND [Part Number] = &apos;&quot;+Campaign+&quot;&apos;&quot;;
					ClearToQuery();
					SetViewMode(AllView);
					SetSearchExpr(SearchExpr);
					ExecuteQuery(ForwardOnly);
					if(FirstRecord())
					{
						Exists = &quot;Y&quot;;
					}
				}
				strCurrRec = NextRecord();
				if(Exists == &quot;Y&quot;)
				{
					strCurrRec = false;
					Outputs.SetProperty(&quot;Exists&quot;, &quot;YES&quot;);
				}
			}
		}
	}
	finally
	{
		BClineItems = null;
		BOOrder = null;	
		bcparameter = null;
		boparameter = null;
		inProp = null;
		outProp = null;
		BS = null;
	}
}"
			   SEQUENCE="4"
			   UPDATED="04/30/2014 20:10:15"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:15"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CheckSubmitOrder"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CheckSubmitOrder (Inputs, Outputs)
{

	try
	{
		var strOrderId        = Inputs.GetProperty (&quot;Order Id&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		var strOrderSrcExpr   = &quot;[Id] = &apos;&quot;+strOrderId+&quot;&apos;&quot;;
		var strOrderLiSrcExpr = &quot;&quot;;
		var strIntegrationId  = &quot;&quot;;
		var strOrdItemStatus  = &quot;&quot;;
		
		var booSimpleItemRecordExists;
		var booLineItemRecordExists;
		
		var boOrderEntry : BusObject = TheApplication ().GetBusObject (&quot;Order Entry&quot;);
		var bcOrderEntry : BusComp = boOrderEntry.GetBusComp (&quot;Order Entry - Orders&quot;);
		var bcOrderLineItemsSimple : BusComp = boOrderEntry.GetBusComp (&quot;Order Entry - Line Items (Simple)&quot;);

		var boOrderLineItems : BusObject = TheApplication ().GetBusObject (&quot;Order Entry - Line Items&quot;);
		var bcOrderLineItems : BusComp = boOrderLineItems.GetBusComp (&quot;Order Entry - Line Items&quot;);
		
		bcOrderEntry.ClearToQuery ();
		bcOrderEntry.SetViewMode (AllView);
		bcOrderEntry.SetSearchExpr (strOrderSrcExpr);
		bcOrderEntry.ExecuteQuery(ForwardOnly);
		
		if (bcOrderEntry.FirstRecord ())
		{
			booSimpleItemRecordExists = bcOrderLineItemsSimple.FirstRecord ();
			
			while (booSimpleItemRecordExists)
			{
				strIntegrationId = booSimpleItemRecordExists.GetFieldValue (&quot;Asset Integration Id&quot;);
				//VFTK Junaid 20120520 - Added for Oracle Review 15
				inProp = TheApplication().NewPropertySet();
				inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
				BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
				//End
				
				strOrderLiSrcExpr = &quot;[Asset Integration Id] = &apos;&quot;+strIntegrationId+&quot;&apos;&quot;;
				
				bcOrderLineItems.ClearToQuery ();
				bcOrderLineItems.ActivateField (&quot;Asset Integration Id&quot;);
				bcOrderLineItems.ActivateField (&quot;Status&quot;);
				bcOrderLineItems.SetViewMode(AllView);
				bcOrderLineItems.SetSearchExpr (strOrderLiSrcExpr);
				bcOrderLineItems.ExecuteQuery(ForwardOnly);
				
				booLineItemRecordExists = bcOrderLineItems.FirstRecord ();
				
				while (booLineItemRecordExists)
				{
					strOrdItemStatus = bcOrderLineItems.GetFieldValue (&quot;Status&quot;);
					
					if (strOrdItemStatus == &quot;Open&quot; || strOrdItemStatus == &quot;In-transit&quot; || strOrdItemStatus == &quot;Installed&quot;)
					{
						Outputs.SetProperty (&quot;CreateModifyFlag&quot;, &quot;N&quot;);
						break;
					}
					else
					{
						Outputs.SetProperty (&quot;CreateModifyFlag&quot;, &quot;Y&quot;);
					}
					booLineItemRecordExists = bcOrderLineItems.NextRecord ();
				}
				booSimpleItemRecordExists = bcOrderLineItemsSimple.NextRecord ();
			}
		}
		
		if (Outputs.GetProperty (&quot;CreateModifyFlag&quot;) == &quot;&quot;)
		{
			Outputs.SetProperty (&quot;CreateModifyFlag&quot;, &quot;Y&quot;);
		}
	}
	catch (e)
	{
		Outputs.SetProperty (&quot;CreateModifyFlag&quot;, &quot;N&quot;);
		throw(e);
	}
	finally
	{
		bcOrderLineItems          = null;
		booSimpleItemRecordExists = null;
		bcOrderEntry              = null;
		bcOrderLineItemsSimple    = null;
		boOrderLineItems          = null;
		booLineItemRecordExists   = null;
		boOrderEntry              = null;
		inProp = null;
		outProp = null;
		BS = null;
	}
}"
			   SEQUENCE="5"
			   UPDATED="04/30/2014 20:10:15"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:15"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CompareDate"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CompareDate (Inputs, Outputs)
{
	try
	{
		var EndDate = Inputs.GetProperty(&quot;Date1&quot;);
		var greater = &quot;N&quot;;
		EndDate = new Date(EndDate);
		var Today = new Date();
		EndDate = EndDate.getTime();
		Today = Today.getTime();
		if (EndDate &lt; Today)
			greater = &quot;Y&quot;;
		Outputs.SetProperty(&quot;Greater&quot;, greater)
		
	}
	finally
	{
	}
}"
			   SEQUENCE="6"
			   UPDATED="04/30/2014 20:10:16"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CopyUpdateLineItems"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CopyUpdateLineItems (Inputs, Outputs)
{

	try
	{
		var strActionUpdate = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;DELTA_ACTION_CODE&quot;,&quot;Modified&quot;);
		var strActionAdd = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;DELTA_ACTION_CODE&quot;,&quot;New&quot;);
		var strActionDelete = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;DELTA_ACTION_CODE&quot;,&quot;Deleted&quot;);		

		var strOrderId = Inputs.GetProperty (&quot;OrderId&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		
		var boOrderEntry  : BusObject = TheApplication ().GetBusObject (&quot;Order Entry&quot;);
		var bcOrderEntry  : BusComp = boOrderEntry.GetBusComp (&quot;Order Entry - Orders&quot;);
		var bcOrderItem   : BusComp = boOrderEntry.GetBusComp (&quot;Order Entry - Line Items&quot;);
		var bcOrderItemXA : BusComp = boOrderEntry.GetBusComp (&quot;Order Item XA&quot;);

		var strOrderSearchExpr = &quot;[Id] = &apos;&quot;+strOrderId+&quot;&apos;&quot;;
		var strOrderItemAction = &quot;&quot;;
		var strParOrderItemId  = &quot;&quot;;
		var strOrderItemId     = &quot;&quot;;
		var strItemPriceListId = &quot;&quot;;
		var strItemXaNewVal    = &quot;&quot;;
		var strOrderItemXAAction = &quot;&quot;;
		var strItemXAName = &quot;&quot;;

		var booOrderItemExists;
		var booOrderXAExists;
		var dtSysDate = new Date ();
	
		bcOrderEntry.ClearToQuery ();
		bcOrderEntry.SetViewMode(AllView);
		bcOrderEntry.SetSearchExpr (strOrderSearchExpr);
		bcOrderEntry.ExecuteQuery(ForwardOnly);
		
		if (bcOrderEntry.FirstRecord ())
		{
			booOrderItemExists = bcOrderItem.FirstRecord ();
			while (booOrderItemExists)
			{
				strOrderItemAction = bcOrderItem.GetFieldValue (&quot;Action Code&quot;);
				strParOrderItemId  = bcOrderItem.GetFieldValue (&quot;Parent Order Item Id&quot;);
				strOrderItemId     = bcOrderItem.GetFieldValue (&quot;Id&quot;);
				//AM-ACS. 8th Feb 2007. Added to get Pricelist.
				strItemPriceListId = bcOrderItem.GetFieldValue (&quot;Price List Id&quot;);
				
				if (strOrderItemAction == strActionUpdate &amp;&amp; strParOrderItemId.length &gt; 0)
				{
					bcOrderItem.NewRecord (NewBeforeCopy);
				
					bcOrderItem.SetFieldValue (&quot;Action Code&quot;, strActionAdd);
					bcOrderItem.SetFieldValue (&quot;Exchange Date&quot;, bcOrderItem.GetFieldValue(&quot;Created&quot;));
					bcOrderItem.SetFieldValue (&quot;Item Price List Id&quot;, strItemPriceListId);
					bcOrderItem.SetFieldValue (&quot;Root Order Item Id&quot;, strParOrderItemId);
					bcOrderItem.WriteRecord ();
					booOrderXAExists = bcOrderItemXA.FirstRecord ();
					while (booOrderXAExists)
					{
						if (bcOrderItemXA.GetFieldValue (&quot;Name&quot;) == &quot;Refill Amount&quot;) 
						{
							bcOrderItemXA.SetFieldValue (&quot;Value&quot;,&quot;0&quot;);
						}
						bcOrderItemXA.SetFieldValue (&quot;Action Code&quot;, strActionAdd);
						bcOrderItemXA.WriteRecord ();
						booOrderXAExists = bcOrderItemXA.NextRecord ();
					}
					
					bcOrderItem.NextRecord ();
					bcOrderItem.SetFieldValue (&quot;Action Code&quot;, strActionDelete);
					strItemPriceListId = bcOrderItem.GetFieldValue (&quot;Item Price List Id&quot;);
					bcOrderItem.WriteRecord ();

					booOrderXAExists = bcOrderItemXA.FirstRecord ();
					while (booOrderXAExists)
					{
						strOrderItemXAAction = bcOrderItemXA.GetFieldValue (&quot;Action Code&quot;);
						if (strOrderItemXAAction == strActionUpdate) 
						{
							strItemXaNewVal = bcOrderItemXA.GetFieldValue (&quot;Value&quot;);
							strItemXAName = bcOrderItemXA.GetFieldValue (&quot;Name&quot;);
							bcOrderItemXA.SetFieldValue (&quot;Value&quot;,bcOrderItemXA.GetFieldValue (&quot;Previous Text Value&quot;));
						}	
						var strOrderItemXAName = bcOrderItemXA.GetFieldValue (&quot;Name&quot;);
						if (strOrderItemXAName == &quot;Refill Amount&quot;) 
						{
							bcOrderItemXA.SetFieldValue (&quot;Value&quot;,&quot;0&quot;);
						}	
						bcOrderItemXA.SetFieldValue (&quot;Action Code&quot;, strActionDelete);
						bcOrderItemXA.WriteRecord ();
						booOrderXAExists = bcOrderItemXA.NextRecord ();
					}
					bcOrderItem.SetFieldValue (&quot;Action Code&quot;, strActionDelete);
				}
				booOrderItemExists = bcOrderItem.NextRecord ();
			}
		}
	}

	finally
	{
		bcOrderEntry         = null;
		bcOrderItem          = null;
		bcOrderItemXA        = null;
		booOrderItemExists   = null;
		boOrderEntry         = null;
		booOrderXAExists     = null;
		inProp = null;
		outProp = null;
		BS = null;
	}
}"
			   SEQUENCE="7"
			   UPDATED="04/30/2014 20:10:16"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CreateAndLoadOnContextNewCustomer"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CreateAndLoadOnContextNewCustomer(Inputs, Outputs)
{
/************************************************************************                                                             
	Description : The function create on a context different from Task one an Account and give the con
	              text back to the task BO. Created new Contact and associate it to the primary contact of Customer
	Inputs		: N/A
	Outputs		: N/A
	Date 		: 11/18/2011                                	
**************************************************************************/
 try
 {
 //Customer Creation
	var BO : BusObject;
	var BA = BusComp;
	var SearchBO : BusObject;
	var SearchBA : BusComp;
	var MainContBC : BusComp;
	var ContactBC : BusComp;
	BO = TheApplication().GetBusObject(&quot;Account&quot;);
	BA = BO.GetBusComp(&quot;Account&quot;);
	BA.NewRecord(NewAfter);
	BA.SetFieldValue(&quot;Market Class&quot;,&quot;Consumer&quot;);
	BA.SetFieldValue(&quot;Name&quot;,&quot;PRM_INSERT_DUMMY&quot;);
	BA.WriteRecord();
	SearchBO = TheApplication().ActiveBusObject();
	SearchBA = SearchBO.GetBusComp(&quot;Account&quot;);
	SearchBA.ClearToQuery ();
	SearchBA.SetViewMode (AllView);
	//VFTK Junaid 20120520 - Scripting 15 not needed as getfieldvalue of id wont return null
	SearchBA.SetSearchSpec(&quot;Id&quot;,BA.GetFieldValue(&quot;Id&quot;));
	SearchBA.ExecuteQuery(ForwardOnly);
	// Populate New Customer Details
	MainContBC = SearchBO.GetBusComp(&quot;PRM VF TR PostActivationTBC&quot;);
   	MainContBC.ActivateField(&quot;Account Type&quot;);
    MainContBC.ActivateField(&quot;Account Id&quot;);
	MainContBC.ActivateField(&quot;Account TCId&quot;);
	MainContBC.ActivateField(&quot;Doc Number&quot;);
	MainContBC.ActivateField(&quot;VF Tax Number&quot;);
	MainContBC.ActivateField(&quot;Account Citizenship&quot;);
	
	var SearchBAisRecord = SearchBA.FirstRecord();
	if(SearchBAisRecord)
	{
		SearchBA.SetFieldValue(&quot;Market Class&quot;,MainContBC.GetFieldValue(&quot;Account Type&quot;));
		SearchBA.WriteRecord();
	}
	//Contact Creation
	ContactBC = SearchBO.GetBusComp(&quot;Contact&quot;);
	ContactBC.NewRecord(NewAfter);
	}
	
 finally
 {
     BA = null;
     BO = null;
     SearchBA = null;
     ContactBC = null;
     MainContBC = null;
     SearchBO = null;
 }		
	return(CancelOperation);
}"
			   SEQUENCE="8"
			   UPDATED="04/30/2014 20:10:16"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CreateInteraction"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CreateInteraction(Inputs,Outputs)
{
	try
	{
		var strArea 		= Inputs.GetProperty(&quot;Area&quot;);
		var strSubArea  	= Inputs.GetProperty(&quot;Sub Area&quot;);
		var strAccountId	= Inputs.GetProperty(&quot;AccountId&quot;); 
		var strSRType		= Inputs.GetProperty(&quot;Type&quot;);
		var strSRId	    	= Inputs.GetProperty(&quot;SRId&quot;);
		var strAssetId	    = Inputs.GetProperty(&quot;Asset Id&quot;);
		var strMSISDN	    = Inputs.GetProperty(&quot;MSISDN&quot;);
		var strStatus		= Inputs.GetProperty(&quot;Status&quot;);
		var strDesc			= Inputs.GetProperty(&quot;Description&quot;);
		var strRaiseError	= Inputs.GetProperty(&quot;Raise Onwer Team Error&quot;);
		var strChannel		= Inputs.GetProperty(&quot;Channel&quot;);
		var strIntId        = &quot;&quot;;
		
		var boAccount	: BusObject = TheApplication().GetBusObject(&quot;Account&quot;);
		var bcContactLog : BusComp	= boAccount.GetBusComp(&quot;Contact Log&quot;);
		var bcContactLogWrite : BusComp = boAccount.GetBusComp (&quot;Contact Log (Avaya)&quot;);
		var bcPickMSISDN : BusComp;
		 
		bcContactLog.NewRecord(NewAfter);
		
		bcContactLog.SetFieldValue(&quot;Account Id&quot;,strAccountId);
		bcContactLog.SetFieldValue(&quot;SR Type&quot;,strSRType);
		bcContactLog.SetFieldValue(&quot;Area&quot;,strArea);
		bcContactLog.SetFieldValue(&quot;Sub-Area&quot;,strSubArea); 
		bcContactLog.SetFieldValue(&quot;Contact Type&quot;,&quot;CALL - INBOUND&quot;);
		bcContactLog.SetFieldValue(&quot;Asset Id&quot;, strAssetId);
		bcContactLog.SetFieldValue(&quot;Description&quot;, strDesc);
		bcContactLog.SetFieldValue(&quot;Contact Type&quot;, strChannel);
		
		var strStatusLIC = TheApplication().InvokeMethod(&quot;LookupValue&quot;, &quot;CONTACT_LOG_STATUS&quot;, strStatus);
		if(strStatusLIC.length &gt; 0)
			bcContactLog.SetFieldValue(&quot;Contact Log Status&quot;, strStatusLIC);		
		
		if (strSRId.length != 0)
		{
			bcContactLog.SetFieldValue(&quot;Parent SR Id&quot;,strSRId);
		}
			
		bcContactLog.WriteRecord();
		strIntId = bcContactLog.GetFieldValue(&quot;Id&quot;);
		
		if(strMSISDN.length &gt; 0)
		{
			bcContactLog.ClearToQuery();
			bcContactLog.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
			bcContactLog.ActivateField(&quot;Called From Number&quot;);
			//VFTK Junaid 20120520 - Scripting 15 not needed as getfieldvalue of id wont return a null value
			bcContactLog.SetSearchExpr(&quot;[Id] = &apos;&quot;+strIntId+&quot;&apos;&quot;);
			bcContactLog.ExecuteQuery(ForwardOnly);
			if(bcContactLog.FirstRecord())
			{
				bcPickMSISDN = bcContactLog.GetPicklistBusComp(&quot;Called From Number&quot;);
				bcPickMSISDN.ClearToQuery();
				bcPickMSISDN.SetViewMode(AllView);
				bcPickMSISDN.ActivateField(&quot;Serial Number&quot;);
				//VFTK Junaid 20120520 - Scripting 15 not needed as field is checked for null before search spec
				bcPickMSISDN.SetSearchExpr(&quot;[Serial Number] = &apos;&quot;+strMSISDN+&quot;&apos;&quot;);
				bcPickMSISDN.ExecuteQuery(ForwardOnly);
				
				if(bcPickMSISDN.FirstRecord())
				{
					bcPickMSISDN.Pick();
				}
				
				bcContactLog.WriteRecord();
			}
		}	
		
		Outputs.SetProperty(&quot;InteractionId&quot;, strIntId);
	}
	catch(e)
	{
		Outputs.SetProperty(&quot;InteractionId&quot;, &quot;&quot;);
		if(strRaiseError == &quot;Y&quot;)
		{
			throw(e);
		}
	}
	finally
	{
	 //LS The variables are set to null as per VF Feedback 24/10/2011
		bcPickMSISDN 		= null;
		bcContactLog		= null;		
		bcContactLogWrite	= null;		
		boAccount			= null;
	}
}"
			   SEQUENCE="9"
			   UPDATED="04/30/2014 20:10:16"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   COMMENTS="ACS MC 20100524 - Newly Created for CM2 Requirement."
			   INACTIVE="N"
			   NAME="CreateMernisSR"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CreateMernisSR (Inputs, Outputs)
{
	/******************************************************************************
	* ACS  24-May-10 : Created                                                  
	* Description    : This is a general purpose script that can be used to
    *				   create Service Request with specific triplets for 
    				   given the Service Request details
	*                  as input whenever Customer Validation fails for Mernis either 3 times or more than 3                      
	******************************************************************************/
	try
	{	
		var boServiceReq : BusObject;
		var bcServiceReq : BusComp;
		boServiceReq = TheApplication().GetBusObject(&quot;Service Request&quot;);
		bcServiceReq = boServiceReq.GetBusComp(&quot;Service Request (Simple)&quot;);
		var strOwner = Inputs.GetProperty(&quot;Owner Group&quot;); 
		var strStatus = Inputs.GetProperty(&quot;Status&quot;);
		var strSubStatus = Inputs.GetProperty(&quot;Sub Status&quot;);
		var strArea = Inputs.GetProperty(&quot;Area&quot;);
		var strSubArea = Inputs.GetProperty(&quot;Sub Area&quot;);
		var strType = Inputs.GetProperty(&quot;Type&quot;);
		var strAccountId = Inputs.GetProperty(&quot;Account Id&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		var boAccount : BusObject;
		var bcAccount : BusComp;
		var psInputs :PropertySet;
		var psOutputs :PropertySet;
		var bcPickOwner:BusComp;
		
		inProp.SetProperty(&quot;strAccountId&quot;, strAccountId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		var strSRCategory = Inputs.GetProperty(&quot;VF SR Category&quot;);
		var strDesc = &quot;&quot;;
		strDesc = Inputs.GetProperty(&quot;Description&quot;);
		
		//get the Customer Organization Id
		boAccount = TheApplication().GetBusObject(&quot;Account&quot;);
		bcAccount = boAccount.GetBusComp(&quot;Account&quot;);
		bcAccount.ClearToQuery();
		bcAccount.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
		bcAccount.ActivateField(&quot;Organization Id&quot;);
		bcAccount.SetSearchSpec(&quot;Id&quot;, strAccountId);
		bcAccount.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
		
		if (bcAccount.FirstRecord())
		{
			var strOrgId = bcAccount.GetFieldValue(&quot;Organization Id&quot;);
		}		
		
		bcServiceReq.NewRecord(NewAfter);
		bcServiceReq.SetFieldValue(&quot;Account Id No Pick&quot;, strAccountId);
		bcServiceReq.SetFieldValue(&quot;SR Type No Picklist&quot;, strType);
		bcServiceReq.WriteRecord();
				
		var strSRid = bcServiceReq.GetFieldValue(&quot;Id&quot;);
		psInputs = TheApplication().NewPropertySet();
		psOutputs = TheApplication().NewPropertySet();
		
		psInputs.SetProperty(&quot;Service Request Id&quot;, strSRid);
		psInputs.SetProperty(&quot;Organization Id&quot;, strOrgId);
		
		//Set SR Oganization Same as Customer/Order Organization
		SetItemOrganization(psInputs, psOutputs);
		
		bcServiceReq.ClearToQuery();
		bcServiceReq.SetViewMode(AllView);
		bcServiceReq.ActivateField(&quot;Status&quot;);
		bcServiceReq.ActivateField(&quot;Sub-Status&quot;);
		bcServiceReq.ActivateField(&quot;ACS Sub-Area&quot;);
		bcServiceReq.ActivateField(&quot;ACS Area&quot;);  //field whithout picklist
		bcServiceReq.ActivateField(&quot;Asset Id&quot;);
		bcServiceReq.ActivateField(&quot;Order Id&quot;);
		bcServiceReq.ActivateField(&quot;Owned By Group Id&quot;);
		bcServiceReq.ActivateField(&quot;Owner Group&quot;);
		bcServiceReq.ActivateField(&quot;Description&quot;);
		bcServiceReq.ActivateField(&quot;Priority&quot;);
		bcServiceReq.ActivateField(&quot;Account Status&quot;);
		//VFTK Junaid 20120520 - Scripting 15 not needed as getfieldvalue of id wont return a null value.
		bcServiceReq.SetSearchSpec(&quot;Id&quot;, strSRid);
		bcServiceReq.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
		
		if(bcServiceReq.FirstRecord())
		{
			var accstatus = bcServiceReq.GetFieldValue(&quot;Account Status&quot;);
			bcServiceReq.SetFieldValue(&quot;ACS Area&quot;, strArea); //field whithout picklist
			bcServiceReq.SetFieldValue(&quot;ACS Sub-Area&quot;, strSubArea);
			bcServiceReq.SetFieldValue(&quot;Description&quot;, strDesc);
			bcServiceReq.SetFieldValue(&quot;VF SR Category&quot;, strSRCategory);
			
			bcPickOwner = bcServiceReq.GetPicklistBusComp(&quot;Owner Group&quot;);
			bcPickOwner.ClearToQuery();
			bcPickOwner.SetViewMode(AllView);
			bcPickOwner.ActivateField(&quot;Name&quot;);
			bcPickOwner.SetSearchSpec(&quot;Name&quot;, strOwner);
			bcPickOwner.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
			if(bcPickOwner.FirstRecord())
			{
				bcPickOwner.Pick();
				var strOwnerGroupId = bcPickOwner.GetFieldValue(&quot;Id&quot;);
				bcServiceReq.SetFieldValue(&quot;Owned By Group Id&quot;, strOwnerGroupId);
			}	
		
			bcServiceReq.SetFieldValue(&quot;Sub-Status&quot;, strSubStatus);
			bcServiceReq.SetFieldValue(&quot;Status&quot;, strStatus);
			bcServiceReq.WriteRecord();
		}
		
		Outputs.SetProperty (&quot;Service Request Id&quot;, strSRid);
		return(CancelOperation);
	}	
	finally
	{
		bcPickOwner = null;
		bcServiceReq = null;
		boServiceReq = null;
		inProp = null;
		outProp = null;
		BS = null;
		bcAccount = null;
		psInputs = null;
		psOutputs = null;
		boAccount = null;		
	}			
}"
			   SEQUENCE="10"
			   UPDATED="04/30/2014 20:10:16"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CreateModifyOrder"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CreateModifyOrder (Inputs, Outputs)
{
	try
	{
		var strAssetId       = Inputs.GetProperty (&quot;AssetId&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		var psInputs :PropertySet;
		var psOutputs :PropertySet;	
		var boAsset : BusObject;
		var bcAsset : BusComp;	
		var boAccount : BusObject;
		var bcAccount : BusComp;
		var bcBillingAcc : BusComp;
		var bcAccntAsset : BusComp;
		var boOrderItem : BusObject;
		var bcOrderItem : BusComp;
		inProp.SetProperty(&quot;strAssetId&quot;, strAssetId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		var strMethod        = Inputs.GetProperty (&quot;Method&quot;);
		var strEventType     = Inputs.GetProperty (&quot;Event Type&quot;);
		var strAccountId     = &quot;&quot;;
		var strBillAccountId = &quot;&quot;;
		var strOrderId       = &quot;&quot;;
		var strAssetIntId    = &quot;&quot;;
		
		var strAssetSrcExpr     = &quot;[Id] = &apos;&quot;+strAssetId+&quot;&apos;&quot;;
		var strAccountSrcExpr   = &quot;&quot;;
		var strBillAccntSrcExpr = &quot;&quot;;
		var strOrderItemSrcExpr = &quot;&quot;;
		
		psInputs  = TheApplication ().NewPropertySet ();
		psOutputs = TheApplication ().NewPropertySet ();
		psInputs.SetProperty(&quot;Event Type&quot;,strEventType);
		boAccount    = TheApplication ().GetBusObject (&quot;Account&quot;);
		bcAccount    = boAccount.GetBusComp (&quot;Account&quot;);
		bcBillingAcc = boAccount.GetBusComp (&quot;Billing Account&quot;);
		bcAccntAsset = boAccount.GetBusComp (&quot;Asset Mgmt - Asset - Header&quot;);
		
		boAsset = TheApplication ().GetBusObject (&quot;Asset Management&quot;);
		bcAsset = boAsset.GetBusComp (&quot;Asset Mgmt - Asset - Header&quot;);
		
		boOrderItem = TheApplication ().GetBusObject (&quot;Order Item&quot;);
		bcOrderItem = boOrderItem.GetBusComp (&quot;Order Entry - Line Items&quot;);
		
		bcAsset.ClearToQuery ();
		bcAsset.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
		bcAsset.SetSearchExpr (strAssetSrcExpr);
		bcAsset.ExecuteQuery(ForwardOnly);
		
		if (bcAsset.FirstRecord ())
		{
			strAccountId     = bcAsset.GetFieldValue (&quot;Owner Account Id&quot;);
			strBillAccountId = bcAsset.GetFieldValue (&quot;Billing Account Id&quot;);
			var strWebServiceCall = bcAsset.GetFieldValue (&quot;Web Service Call&quot;);
			var strCfgRelFlag = bcAsset.GetFieldValue (&quot;Cfg Latest Released Flag&quot;);
						
			strAccountSrcExpr   = &quot;[Id] = &apos;&quot;+strAccountId+&quot;&apos;&quot;;
			strBillAccntSrcExpr = &quot;[Id] = &apos;&quot;+strBillAccountId+&quot;&apos;&quot;;
			//VFTK Junaid 20120520 - Added for Oracle Review 15
			inProp = TheApplication().NewPropertySet();
			inProp.SetProperty(&quot;strAccountId&quot;, strAccountId); 
			inProp.SetProperty(&quot;strBillAccountId&quot;, strBillAccountId); 
			inProp.SetProperty(&quot;Validation Input Mode&quot;, &quot;AND&quot;);
			BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
			//End
		}
		else
		{
			TheApplication ().RaiseErrorText (&quot;The Asset Id :: &quot;+strAssetId+&quot; does not exist&quot;);
		}
		
		bcAccount.ClearToQuery ();
		bcAccount.SetViewMode(AllView);
		bcAccount.SetSearchExpr (strAccountSrcExpr);7
		
			bcBillingAcc.ClearToQuery ();
			bcBillingAcc.SetViewMode(AllView);
			bcBillingAcc.SetSearchExpr (strBillAccntSrcExpr);
		bcAccount.ExecuteQuery(ForwardOnly);//Scripting 31: Removed child query since there is link
			
		if (bcBillingAcc.FirstRecord ())
		{
			bcAccntAsset.ClearToQuery ();
			bcAccntAsset.SetViewMode(AllView);//Scripting 31: This query cannot be removed since there is no direct link between BC&apos;s
			bcAccntAsset.SetSearchExpr (strAssetSrcExpr);
			bcAccntAsset.ExecuteQuery(ForwardOnly);
			
			if (bcAccntAsset.FirstRecord ())
			{
				if (strMethod==&quot;eSalesDisconnectProdSvc&quot;){
					bcAccntAsset.SetFieldValue(&quot;VF Event Type Param Calc&quot;, strEventType);
				} 
				bcAccntAsset.InvokeMethod (strMethod, psInputs, psOutputs);
				
				strAssetIntId = bcAccntAsset.GetFieldValue (&quot;Integration Id&quot;);
				//VFTK Junaid 20120520 - Added for Oracle Review 15
				inProp = TheApplication().NewPropertySet(); 
				inProp.SetProperty(&quot;strAssetIntId&quot;, strAssetIntId); 
				BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
				//End
				strOrderItemSrcExpr = &quot;[Asset Integration Id] = &apos;&quot; + strAssetIntId + &quot;&apos;&quot;;
				
				bcOrderItem.ClearToQuery ();
				bcOrderItem.SetViewMode(AllView);
				bcOrderItem.ActivateField (&quot;Order Header Id&quot;);
				bcOrderItem.ActivateField (&quot;Asset Integration Id&quot;);
				bcOrderItem.SetSortSpec(&quot;Created (DESCENDING)&quot;);
				bcOrderItem.SetSearchExpr (strOrderItemSrcExpr);
				bcOrderItem.ExecuteQuery(ForwardOnly);
				
				if (bcOrderItem.FirstRecord ())
				{
					strOrderId = bcOrderItem.GetFieldValue (&quot;Order Header Id&quot;);
				}
			}
		}
	}
	finally
	{
		Outputs.SetProperty (&quot;OrderId&quot;, strOrderId);
		
		psInputs            = null;
		psOutputs           = null;
		 bcAsset = null;
		 bcAccount    = null;
		 bcBillingAcc = null;
		 bcAccntAsset = null;
		bcOrderItem = null;
		 boAccount    = null;
		 boAsset = null;
		 boOrderItem = null;
		inProp = null;
		outProp = null;
		BS = null;
	}
}"
			   SEQUENCE="11"
			   UPDATED="04/30/2014 20:10:16"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CreateSR"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CreateSR (Inputs, Outputs)
{
  /******************************************************************************
  * ACS  01-Aug-07 : Created                                                  
  * Description    : This is a general pourpose script that can be used to
  *				   create Service Request given the Service Request details
  *                  as input.                         
  ******************************************************************************/
  try
  {	
	var boServiceReq : BusObject = TheApplication().GetBusObject(&quot;Service Request&quot;);
	var boAsset: BusObject = TheApplication().GetBusObject(&quot;VF Duman BO&quot;);
	var bcServiceReq : BusComp   = boServiceReq.GetBusComp(&quot;Service Request (Simple)&quot;);
	var bcAsset : BusComp   = boAsset.GetBusComp(&quot;Asset Mgmt - Asset - Header (Simple)&quot;); //TLG-7009
	var strHigh	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;SR_PRIORITY&quot;,&quot;1- High&quot;);//TLG-6797
	var strMedium = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;SR_PRIORITY&quot;,&quot;2- Medium&quot;);
	var strLow	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;SR_PRIORITY&quot;,&quot;3- Low&quot;);
	var strASAP	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;SR_PRIORITY&quot;,&quot;4- ASAP&quot;);
	var strAsa	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VF_CUT_CA_PRIORITY&quot;,&quot;1ASAP&quot;);
	var strMed	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VF_CUT_CA_PRIORITY&quot;,&quot;3MEDIUM&quot;);
	var strHig	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VF_CUT_CA_PRIORITY&quot;,&quot;2HIGH&quot;);
	var strLows	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VF_CUT_CA_PRIORITY&quot;,&quot;4LOW&quot;);
		
	var boAccount : BusObject;
	var bcAccount : BusComp;	
	var bcPickOwner : BusComp;
	var bcPickOwn : BusComp;	
	var strOwner = Inputs.GetProperty(&quot;Owner Group&quot;); 
	var strOwn	 = Inputs.GetProperty(&quot;Owner&quot;); 
	var strPriority = Inputs.GetProperty(&quot;Priority&quot;);
	var strStatus = Inputs.GetProperty(&quot;Status&quot;);
	var strSubStatus = Inputs.GetProperty(&quot;Sub Status&quot;);
	var strArea = Inputs.GetProperty(&quot;Area&quot;);
	var strSubArea = Inputs.GetProperty(&quot;Sub Area&quot;);
	var strType = Inputs.GetProperty(&quot;Type&quot;);
	var strAccountId = Inputs.GetProperty(&quot;Account Id&quot;);
	var strSRCategory = Inputs.GetProperty(&quot;VF SR Category&quot;);
	var strMSISDN	  = Inputs.GetProperty(&quot;MSISDN&quot;); //TLG-7009
	var strTripletNo = Inputs.GetProperty(&quot;Triplet No&quot;); //VFTRCBU-16383
	var strAssetId = &quot;&quot;;
	var strOrderId = &quot;&quot;;
	var strDesc = &quot;&quot;;
	var strOrgId = &quot;&quot;;
	var strPrimaryContactId = &quot;&quot;;//WA18
	var srFromBulk = Inputs.GetProperty(&quot;SR From Bulk&quot;); //VFTRCBU-36933
	strAssetId = Inputs.GetProperty(&quot;Asset Id&quot;);
	strOrderId = Inputs.GetProperty(&quot;Order Id&quot;);
	strDesc = Inputs.GetProperty(&quot;Description&quot;);
	
	var sIsConsumerRequest = Inputs.GetProperty(&quot;sIsConsumerRequest&quot;);//WA18
	var sPortId = Inputs.GetProperty(&quot;Port Id&quot;);	//WA#18-MNP:20150323:MS
		
	//get the Customer Organization Id
	if(strAccountId != &quot;&quot; || strAccountId != null) //VFTK Junaid 20120523 - Null check added for Oracle review 15
	{
	  boAccount  = TheApplication().GetBusObject(&quot;Account&quot;);
	  bcAccount = boAccount.GetBusComp(&quot;Account&quot;);
			
	  bcAccount.ClearToQuery();
	  bcAccount.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
	  bcAccount.ActivateField(&quot;Primary Organization Id&quot;);
	  bcAccount.ActivateField(&quot;Primary Contact Id&quot;);
	  if(TheApplication().GetProfileAttr(&quot;VF Interim Payment&quot;)==&quot;VF Interim Payment&quot;)//TLGA-4160
		bcAccount.SetSearchSpec(&quot;CSN&quot;, strAccountId);//TLGA-4160 strAccountId= customer code
	  else//TLGA-4160
		bcAccount.SetSearchSpec(&quot;Id&quot;, strAccountId);//TLGA-4160 strAccountId=AccountId
			
	  bcAccount.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
			
	  if (bcAccount.FirstRecord())
	  {
		strOrgId = bcAccount.GetFieldValue(&quot;Primary Organization Id&quot;);
		strPrimaryContactId = bcAccount.GetFieldValue(&quot;Primary Contact Id&quot;);//WA18
	  }
	  bcAccount = null;
	  boAccount = null;
	}

	bcServiceReq.ActivateField(&quot;VFTRCBU SR From Bulk&quot;);//VFTRCBU-36933
	bcServiceReq.ActivateField(&quot;CF Contact Id&quot;);
	bcServiceReq.ActivateField(&quot;Contact Id&quot;);
	bcServiceReq.NewRecord(NewAfter);
	bcServiceReq.SetFieldValue(&quot;Account Id No Pick&quot;, strAccountId);
	bcServiceReq.SetFieldValue(&quot;SR Type No Picklist&quot;, strType);
	bcServiceReq.SetFieldValue(&quot;VFTRCBU SR From Bulk&quot;, srFromBulk);//VFTRCBU-36933
	
	if (sIsConsumerRequest == &quot;Y&quot;)
	{
	  bcServiceReq.SetFieldValue(&quot;CF Contact Id&quot;, strPrimaryContactId);//WA18
	  bcServiceReq.SetFieldValue(&quot;Contact Id&quot;, strPrimaryContactId);
	}
	
	if(strOwner != null &amp;&amp; strOwner != &quot;&quot;)
	{
		bcPickOwner = bcServiceReq.GetPicklistBusComp(&quot;Owner Group&quot;);
		bcPickOwner.ClearToQuery();
		bcPickOwner.SetViewMode(AllView);
		bcPickOwner.ActivateField(&quot;Name&quot;);
		bcPickOwner.SetSearchSpec(&quot;Name&quot;, strOwner);
		bcPickOwner.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
		var recordExists = bcPickOwner.FirstRecord ();
		if(bcPickOwner.FirstRecord())
		{
		  bcPickOwner.Pick();
		  var strOwnerGroupId = bcPickOwner.GetFieldValue(&quot;Id&quot;);
		  bcServiceReq.SetFieldValue(&quot;Owned By Group Id&quot;, strOwnerGroupId);
		  TheApplication().SetProfileAttr(&quot;CContactSync&quot;,&quot;Y&quot;);
		}
 	  }
 	  else 
		bcServiceReq.SetFieldValue(&quot;Owned By Group Id&quot;, &quot;&quot;);
	
	bcServiceReq.WriteRecord();	
			
	var strSRid = bcServiceReq.GetFieldValue(&quot;Id&quot;);
		
	bcServiceReq.ClearToQuery();
	bcServiceReq.SetViewMode(AllView);
	bcServiceReq.ActivateField(&quot;Status&quot;);
	bcServiceReq.ActivateField(&quot;Sub-Status&quot;);
	bcServiceReq.ActivateField(&quot;ACS Sub-Area&quot;);
	bcServiceReq.ActivateField(&quot;ACS Area&quot;);  //field whithout picklist
	bcServiceReq.ActivateField(&quot;Asset Id&quot;);
	bcServiceReq.ActivateField(&quot;Owned By Id&quot;);
	bcServiceReq.ActivateField(&quot;Owner&quot;);
	bcServiceReq.ActivateField(&quot;Order Id&quot;);
	bcServiceReq.ActivateField(&quot;Owned By Group Id&quot;);
	bcServiceReq.ActivateField(&quot;Owner Group&quot;);
	bcServiceReq.ActivateField(&quot;Description&quot;);
	bcServiceReq.ActivateField(&quot;Priority&quot;);
	bcServiceReq.ActivateField(&quot;Account Status&quot;);
	bcServiceReq.ActivateField(&quot;VF Timestamp&quot;);
	bcServiceReq.ActivateField(&quot;Billing Account Id&quot;);
	bcServiceReq.ActivateField(&quot;VF Customer GSM Id&quot;);
    bcServiceReq.ActivateField(&quot;VF Port Id&quot;); //WA#18-MNP:20150323:MS
    bcServiceReq.ActivateField(&quot;VFTRCBU CContact Group Flg&quot;); //VFTRCBU-27638    
	//VFTK Junaid 20120520 - Scripting 15 not needed as getfieldvalue of id wont return a null value
	bcServiceReq.SetSearchSpec(&quot;Id&quot;, strSRid);
	
	bcServiceReq.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
		
	if(bcServiceReq.FirstRecord())
	{
	
		//VFTRCBU-22928|DEF-9134
		var accstatus = bcServiceReq.GetFieldValue(&quot;Account Status&quot;);
		bcServiceReq.SetFieldValue(&quot;Asset Id&quot;, strAssetId);
		bcServiceReq.SetFieldValue(&quot;Order Id&quot;, strOrderId);
		bcServiceReq.SetFieldValue(&quot;ACS Area&quot;, strArea); //field whithout picklist
		bcServiceReq.SetFieldValue(&quot;ACS Sub-Area&quot;, strSubArea);
		bcServiceReq.SetFieldValue(&quot;Description&quot;, strDesc);
		//++ DSOUSA VFTRCBU-36316
		if(strSRCategory != null &amp;&amp; strSRCategory != &quot;&quot; )
		{
			bcServiceReq.SetFieldValue(&quot;VF SR Category&quot;, strSRCategory);
		}
		else
		{
			bcServiceReq.SetFieldValue(&quot;VF SR Category&quot;, &quot;Standard&quot;);
		}
		// -- DSOUSA VFTRCBU-36316
		//VFTRCBU-16383
	  	if (strTripletNo != &quot;&quot;)
	  	{
	  	 	bcServiceReq.SetFieldValue(&quot;VFTRCBU Triplet No&quot;, strTripletNo);
	  	}
	  	
	  	bcServiceReq.WriteRecord(); //08062016 PSANTOS VFTRCBU-29983
	  	
	  var psInputs = TheApplication().NewPropertySet();
	  var psOutputs = TheApplication().NewPropertySet();
	  psInputs.SetProperty(&quot;Service Request Id&quot;, strSRid);
	  psInputs.SetProperty(&quot;Organization Id&quot;, strOrgId);
	  //Set SR Oganization Same as Customer/Order Organization
	  SetItemOrganization(psInputs, psOutputs);
	  Outputs.SetProperty (&quot;Service Request Id&quot;, strSRid);
      bcServiceReq.InvokeMethod(&quot;RefreshBusComp&quot;);  //JIRA-14863:20150811:Refresh after writerecord in previous call to SetItemOrganization()

	  /*var accstatus = bcServiceReq.GetFieldValue(&quot;Account Status&quot;);
	  bcServiceReq.SetFieldValue(&quot;Asset Id&quot;, strAssetId);
	  bcServiceReq.SetFieldValue(&quot;Order Id&quot;, strOrderId);
	  bcServiceReq.SetFieldValue(&quot;ACS Area&quot;, strArea); //field whithout picklist
	  bcServiceReq.SetFieldValue(&quot;ACS Sub-Area&quot;, strSubArea);
	  bcServiceReq.SetFieldValue(&quot;Description&quot;, strDesc);
	  bcServiceReq.SetFieldValue(&quot;VF SR Category&quot;, strSRCategory);
	  //VFTRCBU-16383
	  if (strTripletNo != &quot;&quot;)
	  {
	  	 bcServiceReq.SetFieldValue(&quot;VFTRCBU Triplet No&quot;, strTripletNo);
	  }
	  */
	  //Set filds move to before SetItemOrganization step - VFTRCBU-22928|DEF-9134
	  if(strMSISDN != null &amp;&amp; strMSISDN != &quot;&quot;)
	  {
		bcAsset.ClearToQuery();
		bcAsset.SetViewMode(AllView);
			
		bcAsset.SetSearchSpec(&quot;VF MSISDN&quot;, strMSISDN);		
		bcAsset.ExecuteQuery(ForwardOnly);
				
		if(bcAsset.FirstRecord())
		{
		  var strAsset = bcAsset.GetFieldValue(&quot;Id&quot;);	
		  bcServiceReq.SetFieldValue(&quot;VF Customer GSM Id&quot;, strAsset);
		  if((strAssetId == &quot;&quot; || strAssetId == null)&amp;&amp; (strMSISDN != null &amp;&amp; strMSISDN != &quot;&quot;))//DEF-1899
		  {
			bcServiceReq.SetFieldValue(&quot;Asset Id&quot;, strAsset);
		  }
	    }
	  }

	  if(strPriority == strAsa)
	  {
		bcServiceReq.SetFieldValue(&quot;Priority&quot;, strASAP);
	  }
	  else if(strPriority == strHig)
	  {
		bcServiceReq.SetFieldValue(&quot;Priority&quot;, strHigh);
	  }
	  else if(strPriority == strMed)
	  {
		bcServiceReq.SetFieldValue(&quot;Priority&quot;, strMedium);
	  }
	  else if(strPriority == strLows)
	  {
		bcServiceReq.SetFieldValue(&quot;Priority&quot;, strLow);
	  }
	  else 
	  {
		bcServiceReq.SetFieldValue(&quot;Priority&quot;, strPriority);
	  }
		
	  var sInformalType = Inputs.GetProperty(&quot;InformalType&quot;);
		
	  if(sInformalType == &quot;Pusula&quot;)
	  {
		var sTimestamp = bcServiceReq.GetFieldValue(&quot;VF Timestamp&quot;);
		var sBillingAccountId = Inputs.GetProperty(&quot;Billing Account Id&quot;);
		var sCustomerGSMId = Inputs.GetProperty(&quot;VF Customer GSM Id&quot;);
			
		bcServiceReq.SetFieldValue(&quot;Closed Date&quot;, sTimestamp);
		bcServiceReq.SetFieldValue(&quot;Billing Account Id&quot;, sBillingAccountId);
		bcServiceReq.SetFieldValue(&quot;VF Customer GSM Id&quot;, sCustomerGSMId);
	  }
		
	  if(TheApplication().GetProfileAttr(&quot;BulkSRCreation&quot;) == &quot;Y&quot;) //VFTRCBU WA#31 TiagoRocha - 24.10.2014 - Created for SR Bulk Requirement
	  {
		var sBillingAccountId = Inputs.GetProperty(&quot;Billing Account Id&quot;);
		var sCustomerGSMId = Inputs.GetProperty(&quot;VF Customer GSM Id&quot;);
			
		bcServiceReq.SetFieldValue(&quot;Billing Account Id&quot;, sBillingAccountId);
		bcServiceReq.SetFieldValue(&quot;VF Customer GSM Id&quot;, sCustomerGSMId);
	  }
	  
	  if(strOwn != null &amp;&amp; strOwn != &quot;&quot;)
	  {
		bcPickOwn = bcServiceReq.GetPicklistBusComp(&quot;Owner&quot;);
		bcPickOwn.ClearToQuery();
		bcPickOwn.SetViewMode(AllView);
		bcPickOwn.ActivateField(&quot;Login Name&quot;);
		bcPickOwn.SetSearchSpec(&quot;Login Name&quot;, strOwn);
		bcPickOwn.ExecuteQuery(ForwardOnly); 			
		var recordExists = bcPickOwn.FirstRecord ();
		if(bcPickOwn.FirstRecord())
		{
		  bcPickOwn.Pick();
		  var strOwnerById = bcPickOwn.GetFieldValue(&quot;Id&quot;);
		  bcServiceReq.SetFieldValue(&quot;Owned By Id&quot;, strOwnerById);
		}	
	  }
	  else 
		bcServiceReq.SetFieldValue(&quot;Owned By Id&quot;, &quot;&quot;);

	  if(sPortId != null &amp;&amp; sPortId != &quot;&quot;)  //WA#18-MNP:20150323:MS
		bcServiceReq.SetFieldValue(&quot;VF Port Id&quot;, sPortId);
			
	  bcServiceReq.SetFieldValue(&quot;Sub-Status&quot;, strSubStatus);
	  bcServiceReq.SetFieldValue(&quot;Status&quot;, strStatus);
	  //DEF-2817
	  var strClosed = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;SR_STATUS&quot;,&quot;Closed&quot;);
	  if (strStatus==strClosed)
	  {
		bcServiceReq.ActivateField(&quot;VF Timestamp&quot;);
		bcServiceReq.ActivateField(&quot;Closed Date&quot;);
		var sTimestamp1 = bcServiceReq.GetFieldValue(&quot;VF Timestamp&quot;);
		bcServiceReq.SetFieldValue(&quot;Closed Date&quot;, sTimestamp1);
	  }
	  bcServiceReq.WriteRecord();
	}
	return(CancelOperation);
  }

  catch(e) 
  {
	throw(e);
  }
  finally
  {
	bcPickOwner = null;
	bcPickOwn = null;
	bcServiceReq = null;
	boServiceReq = null;
	bcAccount = null;	
	boAccount = null;
	//IBM_TFERREIRA 20180116 DEF-24990 - Siebel Crash
	bcAsset = null;
	boAsset = null; 			
	psInputs = null;
 	psOutputs = null;
 	//--DEF-2353 TheApplication().SetProfileAttr(&quot;VF Interim Payment&quot;,&quot;&quot;); 	
  }			
}"
			   SEQUENCE="12"
			   UPDATED="01/16/2018 14:19:34"
			   UPDATED_BY="IBM_TFERREIRA"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="DateToString"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function DateToString (dDate)
{ 
	/******************************************************************************
	* ACS AD 26-Jul-06 : Created                                                  *
	* Description      : This is a general pourpose script that takes a date as   *
	*                    input and returns its string equivalent.                 *
	******************************************************************************/


		var sMonth = ToString(dDate.getMonth() + 1); 
		if (sMonth.length == 1)
		{
			sMonth = &quot;0&quot; + sMonth;
		} 
		var sDay = ToString(dDate.getDate()); 
		if (sDay.length == 1) 
		{
			sDay = &quot;0&quot; + sDay;
		} 
		var sHours = ToString(dDate.getHours());
		if (sHours.length == 1) 
		{
			sHours = &quot;0&quot; + sHours;
		}
		var sMinutes = ToString(dDate.getMinutes());
		if (sMinutes.length == 1) 
		{
			sMinutes = &quot;0&quot; + sMinutes;
		} 
		var sSeconds = ToString(dDate.getSeconds());
		if (sSeconds.length == 1) 
		{
			sSeconds = &quot;0&quot; + sSeconds;
		} 
		if (sHours == &quot;00&quot; &amp;&amp; sMinutes == &quot;00&quot; &amp;&amp; sSeconds == &quot;00&quot;)
		{
		    return (sMonth +&quot;/&quot;+ sDay +&quot;/&quot; + dDate.getFullYear());
	    }
		else 
	    {
		    return (dDate.getFullYear() + sMonth + sDay + &quot;_&quot; + sHours + sMinutes + sSeconds);
	    }
}"
			   SEQUENCE="13"
			   UPDATED="04/30/2014 20:10:16"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Day_of_Week"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Day_of_Week (strDate, strMonth, strYear)
{
	/* 0 - Saturday
	   1 - Sunday
	   2 - Monday
	   3 - Tuesday
	   4 - Wednesday
	   5 - Thrusday
	   6 - Friday
	*/
	var strCentury;
	var strDay;
	
	strYear = ToNumber(strYear);
	strDate = ToNumber(strDate);
	strMonth = ToNumber(strMonth);
	
	strCentury = ToInteger(strYear / 100);
	strYear = strYear % 100;
	
	if(strMonth &lt; 3)
	{
		strMonth = strMonth + 12;
		if(strYear &gt;0)
			strYear = strYear - 1;
			
		else
		{
			strYear	= 99;
			strCentury = strCentury - 1;
		}
	}
	
	strDay = strDate;
	strDay = strDay + ToInteger(((strMonth + 1) * 26) / 10);
	strDay = strDay + strYear;
	strDay = strDay + ToInteger(strYear / 4);
	strDay = strDay + ToInteger(strCentury / 4);
	strDay = strDay - strCentury - strCentury;
	
	while(strDay &lt; 0)
	{
		strDay = strDay + 7;
	}
	strDay = strDay % 7;
	
	return(strDay);			
	
}"
			   SEQUENCE="14"
			   UPDATED="04/30/2014 20:10:16"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Easter_Algorithm"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Easter_Algorithm (strYear)
{	
		var a;
		var b;
		var c;
		var d;
		var e;
		var M;
		var N;
		var day;
		var month;
		var Y = strYear;
		var strEasterDate

		if (Y &lt; 2099)
		{
       		 M = 24;
       		 N = 5;
		}
		else if (Y &lt; 2199)
		{
       		 M = 24;
        	 N = 6;
		}
		else if (Y &lt; 2299)
		{
       		 M = 25;
        	 N = 0;
		}
		else if (Y &lt; 2399)
		{
        	M = 26;
        	N = 1;
		}
		else if(Y &lt; 2499)
		{
        	M = 25;
       	 	N = 1;
		}
   
		a = Y % 19;
		b = Y % 4;
		c = Y % 7;
		d = ((19*a) + M) % 30
		e = ((2*b) + (4*c) + (6*d) + N) % 7;

		if (d + e &lt; 10)
		{
        	day = d+e+22;
        	month = 3;
		}
		else
		{
        	day = d+e-9;
        	month = 4;
		}

		if (day == 26 &amp;&amp; month == 4)
		{
        	day = 19;
        	month = 4;
		}

		if (day == 25 &amp;&amp; month == 4 &amp;&amp; d == 28 &amp;&amp; e == 6 &amp;&amp; a&gt;10)
		{
        	day = 18;
        	month = 4;
		}
		
		month = month.toString();
		day = day.toString();		
		
		if(month.length &lt; 2)
		{
			month = &quot;0&quot; + month;
		}
		
		if(day.length &lt; 2)
		{
			day = &quot;0&quot; + day;
		}	

		
		strEasterDate = month+&quot;/&quot;+day+&quot;/&quot;+Y;

		return(strEasterDate);

}"
			   SEQUENCE="16"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ExtractAttribValue"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ExtractAttribValue (Inputs, Outputs)
{
	try
	{
		
		// ACS AD 26-07-06 :: Extract the input arguements
		var strOrderId       = Inputs.GetProperty(&quot;OrderId&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		var strLineItemName  = Inputs.GetProperty (&quot;LineItemName&quot;);
		var strAttributeName = Inputs.GetProperty (&quot;AttributeName&quot;);
		
		var strOrderSRCExpr   = &quot;[Id] = &apos;&quot;+strOrderId+&quot;&apos;&quot;;
		var strProductName    = &quot;&quot;;
		var strAttributeValue = &quot;&quot;;
		var strAttribName     = &quot;&quot;;
		
		var booRecordExists;
		var booRecordExists1;
		var booRecordFound = &quot;N&quot;;
		
		// ACS AD 26-07-06 :: Create BO, BC instances
		var boOrderEntry     : BusObject  = TheApplication().GetBusObject (&quot;Order Entry&quot;);
		var bcOrderEntry     : BusComp	  = boOrderEntry.GetBusComp (&quot;Order Entry - Orders&quot;);
		var bcOrderLineItems : BusComp  = boOrderEntry.GetBusComp (&quot;Order Entry - Line Items&quot;);
		var bcOrderItemXA    : BusComp	  = boOrderEntry.GetBusComp (&quot;Order Item XA&quot;);
		
		// ACS AD 26-07-06 :: Query the components to find the attribute value
		bcOrderEntry.ClearToQuery ();
		bcOrderEntry.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
		bcOrderEntry.SetSearchExpr (strOrderSRCExpr);
		bcOrderEntry.ExecuteQuery(ForwardOnly);;
		
		if (bcOrderEntry.FirstRecord ())
		{
			booRecordExists = bcOrderLineItems.FirstRecord ();
			
			while (booRecordExists &amp;&amp; booRecordFound == &quot;N&quot;)
			{
				strProductName = bcOrderLineItems.GetFieldValue (&quot;Product&quot;);
				
				if ((strProductName == strLineItemName) || (strLineItemName.length == 0))
				{
					booRecordExists1 = bcOrderItemXA.FirstRecord ();
					while (booRecordExists1 &amp;&amp; booRecordFound == &quot;N&quot;)
					{
						strAttribName = bcOrderItemXA.GetFieldValue (&quot;Name&quot;);
						if (strAttribName == strAttributeName)
						{
							strAttributeValue = bcOrderItemXA.GetFieldValue (&quot;Value&quot;);							
							booRecordFound = &quot;Y&quot;;
						}
						booRecordExists1 = bcOrderItemXA.NextRecord ();
					}
				}
				booRecordExists = bcOrderLineItems.NextRecord ();
			}
		}
		else
		{
			TheApplication().RaiseErrorText (&quot;Order Id &quot;+strOrderId+&quot; is not valid&quot;);
		}
		Outputs.SetProperty (&quot;AttributeValue&quot;, strAttributeValue);
	}
	finally
	{
		bcOrderEntry      = null;
		bcOrderLineItems  = null;
		bcOrderItemXA     = null;
		boOrderEntry      = null;
		inProp = null;
		outProp = null;
		BS = null;
	}
}"
			   SEQUENCE="17"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ExtractAttribValue_Id"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ExtractAttribValue_Id (Inputs, Outputs)
{

	try
	{		
		// ACS AD 26-07-06 :: Extract the input arguements
		var strOrderId       = Inputs.GetProperty(&quot;OrderId&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		var strLineItemId  = Inputs.GetProperty (&quot;LineItemId&quot;);
		var strAttributeName = Inputs.GetProperty (&quot;AttributeName&quot;);
		
		var strOrderSRCExpr   = &quot;[Id] = &apos;&quot;+strOrderId+&quot;&apos;&quot;;
		var strProductId      = &quot;&quot;;
		var strAttributeValue = &quot;&quot;;
		var strAttribName     = &quot;&quot;;
		
		var booRecordExists;
		var booRecordExists1;
		var booRecordFound = &quot;N&quot;;
		
		// ACS AD 26-07-06 :: Create BO, BC instances
		var boOrderEntry     : BusObject  = TheApplication().GetBusObject (&quot;Order Entry&quot;);
		var bcOrderEntry     : BusComp  = boOrderEntry.GetBusComp (&quot;Order Entry - Orders&quot;);
		var bcOrderLineItems : BusComp  = boOrderEntry.GetBusComp (&quot;Order Entry - Line Items&quot;);
		var bcOrderItemXA    : BusComp  = boOrderEntry.GetBusComp (&quot;Order Item XA&quot;);
		
		// ACS AD 26-07-06 :: Query the components to find the attribute value
		bcOrderEntry.ClearToQuery ();
		bcOrderEntry.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
		bcOrderEntry.SetSearchExpr (strOrderSRCExpr);
		bcOrderEntry.ExecuteQuery(ForwardOnly);
		
		if (bcOrderEntry.FirstRecord ())
		{
			booRecordExists = bcOrderLineItems.FirstRecord ();
			
			while (booRecordExists &amp;&amp; booRecordFound == &quot;N&quot;)
			{
				strProductId = bcOrderLineItems.GetFieldValue (&quot;Id&quot;);
				
				if (strProductId == strLineItemId)
				{
					booRecordExists1 = bcOrderItemXA.FirstRecord ();
					while (booRecordExists1 &amp;&amp; booRecordFound == &quot;N&quot;)
					{
						strAttribName = bcOrderItemXA.GetFieldValue (&quot;Name&quot;);
						if (strAttribName == strAttributeName)
						{
							strAttributeValue = bcOrderItemXA.GetFieldValue (&quot;Value&quot;);				
							booRecordFound = &quot;Y&quot;;
						}
						booRecordExists1 = bcOrderItemXA.NextRecord ();
					}
				}
				booRecordExists = bcOrderLineItems.NextRecord ();
			}
		}
		else
		{
			TheApplication().RaiseErrorText (&quot;Order Id &quot;+strOrderId+&quot; is not valid&quot;);
		}
		Outputs.SetProperty (&quot;AttributeValue&quot;, strAttributeValue);
	}
	finally
	{
		bcOrderEntry      = null;
		bcOrderLineItems  = null;
		bcOrderItemXA     = null;
		boOrderEntry      = null;
		inProp = null;
		outProp = null;
		BS = null;

	}
}"
			   SEQUENCE="18"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ExtractValueFromXML"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ExtractValueFromXML (psInputs, psOutputs)
{
	try
	{
		var psInputs1  : PropertySet  = TheApplication().NewPropertySet ();
		var psOutputs1 : PropertySet  = TheApplication().NewPropertySet ();
		var strFieldName     = psInputs.GetProperty (&quot;Field Name&quot;);
		
		var strInvoiceResult = &quot;&quot;;
		
		var intCounter    = 0;
		var intChildCount = 0;
		
		if (psInputs.PropertyExists(strFieldName))
		{
			psOutputs.SetProperty(&quot;Field Value&quot;, psInputs.GetProperty (strFieldName));
		}
		else
		{
			intChildCount = psInputs.GetChildCount();
			for (intCounter = 0; intCounter &lt; intChildCount; intCounter++)
			{
				psInputs1 = psInputs.GetChild (intCounter);
				psInputs1.SetProperty (&quot;Field Name&quot;, strFieldName);
				ExtractValueFromXML (psInputs1, psOutputs1);
				strInvoiceResult = psOutputs1.GetProperty (&quot;Field Value&quot;);
				
				if (strInvoiceResult.length &gt; 0)
				{				
					psOutputs.SetProperty(&quot;Field Value&quot;, strInvoiceResult);
					break;
				}
			}
		}
	}
	finally
   {
        //LS The variables are set to null as per VF Feedback 24/10/2011
		psOutputs1         =null;
		psInputs1          =null;
    }
}"
			   SEQUENCE="19"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetAssetIntegrationId"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetAssetIntegrationId (Inputs, Outputs)
{
	try
	{	
		var inProp  :PropertySet	= TheApplication().NewPropertySet();
		var outProp :PropertySet	= TheApplication().NewPropertySet();
		var BS 		:Service		= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		var strOrderItemId = Inputs.GetProperty (&quot;Line Item Id&quot;);
		var strAssetIntegrationId = &quot;&quot;;
		var strSearchExpr = &quot;[Id] = &apos;&quot;+strOrderItemId+&quot;&apos;&quot;;
	
		var boOrderItem : BusObject  = TheApplication ().GetBusObject (&quot;X Order Entry&quot;);	
		var bcOrderItem : BusComp  = boOrderItem.GetBusComp (&quot;HP Submit - Order Entry - Line Items&quot;);
		
		bcOrderItem.ClearToQuery ();
		bcOrderItem.SetViewMode(AllView);
		// Begin: Review Input validation: Scripting 15 null check Added 16may2012 Udbhav IDC
		inProp.SetProperty(&quot;strOrderItemId&quot;,strOrderItemId);
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp);
		//End 
		bcOrderItem.SetSearchExpr (strSearchExpr);
		bcOrderItem.ExecuteQuery (ForwardOnly);
		
		if (bcOrderItem.FirstRecord ())
		{
			strAssetIntegrationId = bcOrderItem.GetFieldValue (&quot;Asset Integration Id&quot;);
		}
	}
	finally
	{
		Outputs.SetProperty (&quot;Asset Integration Id&quot;, strAssetIntegrationId);
			//LS The variables are set to null as per VF Feedback 24/10/2011
		bcOrderItem   			= null;
		boOrderItem				= null;	
		inProp 				= null;
		outProp 			= null;
		BS 					= null;

	}
}"
			   SEQUENCE="20"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetLookupMsg"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="/**************************************************************************
	Name 		: Anshita Tiwari                                                              
	Description : Search the Code associated to the Messages
	Inputs		: strCode
	Outputs		: strMsg
	Date 		: 21/08/2006                                 	
**************************************************************************/
function GetLookupMsg (Inputs, Outputs)
{

		var strCode	           = Inputs.GetProperty(&quot;Code&quot;);
		var strMessageCategory = Inputs.GetProperty(&quot;MessageCategory&quot;);
		
		var strMessage = TheApplication().LookupMessage(strMessageCategory, strCode);
		
		Outputs.SetProperty(&quot;Message&quot;,strMessage);
}"
			   SEQUENCE="21"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetParameter"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetParameter(Inputs, Outputs)
{
	/************************************************************************************
	* ACS MV 2-aug-07  : Created                                                        *
	* Description      : This script takes the Function and Param Name as input and retu*
	*                   rns corresponding values associated to the parameter            *
	* Inputs	  	   : Function (mandatory), Name (Mandatory)                         *
	* Outputs	       : Value (mandatory), Cons1,2,3 (opt), Description (opt)          *  
	************************************************************************************/

	try
	{
		var strFunction = Inputs.GetProperty (&quot;Function&quot;);
		var strName = Inputs.GetProperty (&quot;Name&quot;);
	
		var boparameter :BusObject= TheApplication().GetBusObject(&quot;ACS NI Parameter&quot;);
		var bcparameter :BusComp  = boparameter.GetBusComp(&quot;ACS NI Parameter (Simple)&quot;);
		var inProp  :PropertySet	= TheApplication().NewPropertySet();
		var outProp :PropertySet	= TheApplication().NewPropertySet();
		var BS 		:Service		= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
	
		bcparameter.ActivateField(&quot;Function&quot;);
		bcparameter.ActivateField(&quot;Name&quot;);
		bcparameter.ActivateField(&quot;Value&quot;);
		bcparameter.ActivateField(&quot;Condition1&quot;);
		bcparameter.ActivateField(&quot;Condition2&quot;);
		bcparameter.ActivateField(&quot;Condition3&quot;);
		bcparameter.ActivateField(&quot;Comments&quot;);
	
		bcparameter.ClearToQuery();
		// Begin: Review Input validation: Scripting 15 null check Added 17may2012 Udbhav IDC
		inProp.SetProperty(&quot;strFunction&quot;,strFunction);
		inProp.SetProperty(&quot;strName&quot;,strName);
		inProp.SetProperty(&quot;Validation Input Mode&quot;, &quot;AND&quot;);
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp);
		//End
		bcparameter.SetSearchSpec(&quot;Function&quot;,strFunction);
		bcparameter.SetSearchSpec(&quot;Name&quot;,strName);
		bcparameter.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
		if(bcparameter.FirstRecord())
		{
			var strValue = bcparameter.GetFieldValue(&quot;Value&quot;);
			var strCondition1 = bcparameter.GetFieldValue(&quot;Condition1&quot;);
			var strCondition2 = bcparameter.GetFieldValue(&quot;Condition2&quot;);
			var strCondition3 = bcparameter.GetFieldValue(&quot;Condition3&quot;);
			var strComments = bcparameter.GetFieldValue(&quot;Comments&quot;);
		}
		
		Outputs.SetProperty (&quot;Value&quot;, strValue);
		Outputs.SetProperty (&quot;Cons1&quot;, strCondition1);
		Outputs.SetProperty (&quot;Cons2&quot;, strCondition2);
		Outputs.SetProperty (&quot;Cons3&quot;, strCondition3);
		Outputs.SetProperty (&quot;Description&quot;, strComments);	
	}
	finally
	{
    	bcparameter       = null;
    	boparameter       = null;
    	inProp 	= null;
		outProp = null;
		BS 		= null;
	}
}"
			   SEQUENCE="22"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetParameter_3Inputs"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetParameter_3Inputs(Inputs, Outputs)
{
	/************************************************************************************
	* ACS MV 31-jan-08  : Created                                                        *
	* Description      : This script takes the Function,Param Name and Value as input and retu*
	*                   rns corresponding values associated to the parameter            *
	* Inputs                                  : Function (mandatory), Name (Mandatory),Value (mandatory)       *
	* Outputs                   : Cons1,2,3 (opt), Description (opt)          *  
	************************************************************************************/
	/*
		WA#37 required changes: Active position can now have multiple roles. so, Received value can be a list 
		instead of a single role.
		Loop added  to search if asctive position as one role that allow button to be pressed.
		
		IMPORTANT: &quot;Value property received as input is not being considered, we are getting the active roles.
					With this change we do not need to change all the applets that are passing the Position Profile PositionType 
	*/
	var strFunction = Inputs.GetProperty (&quot;Function&quot;);
	var strName = Inputs.GetProperty (&quot;Name&quot;);
	var strValue = &quot;&quot;;
	//var listOfValues = Inputs.GetProperty (&quot;Value&quot;).split(&quot;,&quot;);
	var listOfValues = TheApplication().GetProfileAttr(&quot;TELCO.PositionProfile:Role.AvailableRoles&quot;).split(&quot;,&quot;);
	var numOfValues = 0;
	var strKey = &quot;&quot;;
	var conditionValue = &quot;&quot;;
	var strKeyFalse = &quot;&quot;; //jmarques - declaration
	
	Outputs.SetProperty(&quot;Cons1&quot;, &quot;False&quot;); //if no match is found - jmarques - FALSE
	
	try
	{
		numOfValues = listOfValues.length;
		//++SANTOSP 04/2015 - VFTRCBU-1769 - Updated Code
		while(numOfValues &gt; 0)
		{		
			strValue = listOfValues[numOfValues -1];
			strKey = strFunction+strName+strValue;
			/*grant Matrix has been declared as global variable on texco application level*/
			var childPropset:PropertySet = TheApplication().NewPropertySet();
			
			if (TheApplication().GRANT_MATRIX != null)
			{
				//childPropset.PropertyExists(strKey)
				childPropset = TheApplication().GRANT_MATRIX.GetChild(0);
				conditionValue = childPropset.GetProperty(strKey);
				
				if (conditionValue.toUpperCase()==&quot;FALSE&quot;)
				{
					strKeyFalse = false;
				}
				
				else //if (conditionValue.toUpperCase()==&quot;TRUE&quot;)
				{
					Outputs.SetProperty(&quot;Cons1&quot;, &quot;True&quot;);
					return;
				}
			}
 			numOfValues = numOfValues -1;
		}
		
		if (strKeyFalse == false)
		{
			Outputs.SetProperty(&quot;Cons1&quot;, &quot;False&quot;);
			return;
		}
		/*else
		{
			Outputs.SetProperty(&quot;Cons1&quot;, &quot;True&quot;);
			return;
		}*/
		
		/*if(conditionValue != True)
		{
			conditionValue = &quot;False&quot;;
			Outputs.SetProperty(&quot;Cons1&quot;, &quot;conditionValue&quot;);
		}*/
		//--SANTOSP 04/2015 - VFTRCBU-1769
	}
	finally
	{
		childPropset = null;
	}
}"
			   SEQUENCE="23"
			   UPDATED="03/16/2016 09:13:27"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetPositionType"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="/**************************************************
NAME: 		 	GetPositionType &amp; Current Division
DESCRIPTION: 	This method allows to get the position type of the current user
RETURNS:		
AUTHOR:			Angelo D&apos;Amora
DATE CREATED: 	24/08/2007
UPDATES:		
**************************************************/
function GetPositionType(Inputs, Outputs)
{
	try
	{
		var BOPosition			:BusObject= TheApplication().GetBusObject(&quot;Position&quot;);
		var BCPosition			:BusComp  = BOPosition.GetBusComp(&quot;Position&quot;);
		var strPositionName		= TheApplication().PositionName();
		var strPositionType		= &quot;KO&quot;;
		var strDivision			= &quot;&quot;;
		var inProp  :PropertySet	= TheApplication().NewPropertySet();
		var outProp :PropertySet	= TheApplication().NewPropertySet();
		var BS 		:Service		= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		
		BCPosition.SetViewMode(AllView);
		BCPosition.ClearToQuery();
		BCPosition.ActivateField(&quot;Position Type&quot;);
		BCPosition.ActivateField(&quot;Division&quot;);
		BCPosition.ActivateField(&quot;Name&quot;);
		// Begin: Review Input validation: Scripting 15 null check Added 16may2012 Udbhav IDC
		inProp.SetProperty(&quot;strPositionName&quot;,strPositionName);
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp);
		//End
		BCPosition.SetSearchSpec (&quot;Name&quot;, &quot;[Name] = &apos;&quot;+strPositionName+&quot;&apos;&quot;);
		BCPosition.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
			
			
		if(BCPosition.FirstRecord())
		{
			strPositionType = BCPosition.GetFieldValue(&quot;Position Type&quot;);
			strDivision 	= BCPosition.GetFieldValue(&quot;Division&quot;);
		}
		
		Outputs.SetProperty(&quot;PositionType&quot;,strPositionType);
		Outputs.SetProperty(&quot;CurrentDivision&quot;,strDivision);
	}
	catch(e)
	{
		Outputs.SetProperty(&quot;PositionType&quot;,strPositionType);
		Outputs.SetProperty(&quot;CurrentDivision&quot;,strDivision);	
	}
	finally
	{
	BCPosition = null;
	BOPosition = null;
	strPositionName = null;
	inProp 	= null;
	outProp = null;
	BS 		= null;
	}
}"
			   SEQUENCE="24"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetProductPortId"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetProductPortId (Inputs,Outputs)
{
 	/************************************************************
	* AUTHOR: Antony Xavier David                               *
	* DESCRIPTION: This script will return the Product Port Id  *
	*              of a product. This field needs to be updated *
	*              in the Order Line Items, if the Simple BC is *
	*              used to create the record.                   *
	* DATE CREATED: 1-Feb-2007                                    *
	************************************************************/
	try
	{
		var AdminProdBO : BusObject = TheApplication().GetBusObject(&quot;Admin ISS Product Definition&quot;);
		var IntProdISSAdminBC : BusComp = AdminProdBO.GetBusComp(&quot;Internal Product - ISS Admin&quot;);
		var ISSProdVODBC : BusComp = AdminProdBO.GetBusComp(&quot;ISS Product VOD BusComp&quot;);
		var ISSProdVerBC : BusComp = AdminProdBO.GetBusComp(&quot;ISS Product Versions BusComp&quot;);
		var ProdStructBC : BusComp = AdminProdBO.GetBusComp(&quot;ISS Product Structure Admin BusComp&quot;);
		var ParProdName = Inputs.GetProperty(&quot;ParProdName&quot;);
		var Version		= Inputs.GetProperty(&quot;Version&quot;);
		var ChildProdName = Inputs.GetProperty(&quot;ChildProdName&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;ParProdName&quot;, ParProdName); 
		inProp.SetProperty(&quot;Version&quot;, Version);
		inProp.SetProperty(&quot;ChildProdName&quot;, ChildProdName);
		inProp.SetProperty(&quot;Validation Input Mode&quot;, &quot;AND&quot;);
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
	
		//Query for the Product Version.
		with (IntProdISSAdminBC)
		{
			ClearToQuery();
			SetViewMode(AllView);
			SetSearchSpec(&quot;Name&quot;,ParProdName);
		}		
		with (ISSProdVerBC)
		{
			ClearToQuery();
			SetViewMode(AllView);
			SetSearchSpec(&quot;Product Name&quot;,ParProdName);
			SetSearchSpec(&quot;Display Version&quot;,Version);
		}	
		with (ProdStructBC) 
		{	 
			ClearToQuery();
			SetViewMode(AllView);
			SetSearchSpec(&quot;Product Name&quot;,ChildProdName);
		}
		//Scripting 31: Removed ExecuteQueries on Child BC since there is link in the bo
		IntProdISSAdminBC.ExecuteQuery(ForwardOnly);
		if (ProdStructBC.FirstRecord())
		{
			Outputs.SetProperty(&quot;Product Port Id&quot;,ProdStructBC.GetFieldValue(&quot;Orig Id&quot;));
		}	
 	}
	/*catch (e)// 11/03/2013 VF TR - Exception errors for Oracle Review
	{
	}*/
	finally
	{
		IntProdISSAdminBC = null;
		ISSProdVODBC = null;
		ISSProdVerBC = null;
		ProdStructBC = null;
		AdminProdBO = null;
		inProp = null;
		outProp = null;
		BS = null;
	}
}"
			   SEQUENCE="25"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetRaiseErrorMsg"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetRaiseErrorMsg (Inputs, Outputs)
{

		var strCode	           = Inputs.GetProperty(&quot;Code&quot;);
		var strMessageCategory = Inputs.GetProperty(&quot;MessageCategory&quot;);
		
		var strMessage = TheApplication().LookupMessage(strMessageCategory, strCode);
		
		Outputs.SetProperty(&quot;Message&quot;,strMessage);
		TheApplication().RaiseErrorText(strMessage);
		
}"
			   SEQUENCE="26"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetWarningMessage"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="/**************************************************************************	                                                       
	Description : Search Warning Message of Account
	Inputs		: customerCode
	Outputs		: strMsg
	Date 		: 05/11/2012                                 	
**************************************************************************/
function GetWarningMessage (Inputs, Outputs)
{

    try
    {
		var customerCode       = Inputs.GetProperty(&quot;CustomerCode&quot;);	
		var strMsg    		   = &quot;&quot;;	
		var accountBO          = TheApplication().GetBusObject(&quot;Account&quot;);
		var accountBC          = accountBO.GetBusComp(&quot;Account&quot;);		
		with(accountBC)
		{
			ClearToQuery();
			SetViewMode(AllView);			
			SetSearchSpec(&quot;CSN&quot;,customerCode);		
			ExecuteQuery(ForwardOnly);		
			if(FirstRecord())
			{				
				var CheckPrivacy = GetFieldValue(&quot;ACS Privacy&quot;);								
				if (CheckPrivacy == &quot;Y&quot;)	
				{
					strMsg = GetFieldValue(&quot;VF Warning Message&quot;);
				}
			}
		}		
		Outputs.SetProperty(&quot;Message&quot;,strMsg);
	}
	catch(e)
	{
		Outputs.SetProperty(&quot;Message&quot;,&quot;&quot;);
	}
	finally{
	
	accountBC = null;
	accountBO = null;
	}
}"
			   SEQUENCE="27"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="HandleEAIResponse"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function HandleEAIResponse (Inputs, Outputs)
{	
	try
	{
		var psInputs : PropertySet = TheApplication().NewPropertySet();
		var psOutputs : PropertySet = TheApplication().NewPropertySet();
			
		var strStatusCode = &quot;&quot;;
		var strErrorMsg   = &quot;&quot;;
		var strErrorCode  = &quot;&quot;;
		
		if (Inputs.GetChildCount() &gt; 0)
		{
			//ACS AD 25-Oct-06: Check for an error message and throw an error if present
			psInputs.SetProperty (&quot;Field Name&quot;, &quot;StatusCode&quot;);
			psInputs.AddChild (Inputs.GetChild (0));
			ExtractValueFromXML (psInputs, psOutputs);
			strStatusCode = psOutputs.GetProperty (&quot;Field Value&quot;);
			
			if (strStatusCode.length == 0)
			{
				psInputs = TheApplication ().NewPropertySet ();
				psInputs.SetProperty (&quot;Field Name&quot;, &quot;STATUS_CODE&quot;);
				psInputs.AddChild (Inputs.GetChild (0));
				ExtractValueFromXML (psInputs, psOutputs);
				strStatusCode = psOutputs.GetProperty (&quot;Field Value&quot;);
			}
			
				psInputs  = TheApplication().NewPropertySet();
				psOutputs = TheApplication().NewPropertySet();
				
				psInputs.SetProperty (&quot;Field Name&quot;, &quot;ErrorDescription&quot;);
				psInputs.AddChild (Inputs.GetChild (0));
				
				ExtractValueFromXML (psInputs, psOutputs);
				strErrorMsg = psOutputs.GetProperty(&quot;Field Value&quot;);
				//Added for R1.3 B3 Requirement
				if (strErrorMsg.length == 0)
				{
					psInputs = TheApplication ().NewPropertySet ();
					psInputs.SetProperty (&quot;Field Name&quot;, &quot;ERROR_DESCRIPTION&quot;);
					psInputs.AddChild (Inputs.GetChild (0));
					ExtractValueFromXML (psInputs, psOutputs);
					strErrorMsg = psOutputs.GetProperty (&quot;Field Value&quot;);
				}
				
				psInputs  = TheApplication().NewPropertySet();
				psOutputs = TheApplication().NewPropertySet();
				
				psInputs.SetProperty (&quot;Field Name&quot;, &quot;ErrorCode&quot;);
				psInputs.AddChild (Inputs.GetChild (0));
				
				ExtractValueFromXML (psInputs, psOutputs);
				strErrorCode = psOutputs.GetProperty(&quot;Field Value&quot;);
				
				if (strErrorCode.length == 0)
				{
					psInputs = TheApplication ().NewPropertySet ();
					psInputs.SetProperty (&quot;Field Name&quot;, &quot;ERROR_CODE&quot;);
					psInputs.AddChild (Inputs.GetChild (0));
					ExtractValueFromXML (psInputs, psOutputs);
					strErrorCode = psOutputs.GetProperty (&quot;Field Value&quot;);
				}
				//Added for R1.3 B3 Requirement
		}
	}
	finally
	{
		Outputs.SetProperty (&quot;StatusCode&quot;, strStatusCode);
		Outputs.SetProperty (&quot;ErrorCode&quot;, strErrorCode);
		Outputs.SetProperty (&quot;ErrorMessage&quot;, strErrorMsg);
		//LS The variables are set to null as per VF Feedback 24/10/2011
		psOutputs       = null;
		psInputs	    = null;	
	
	}
}"
			   SEQUENCE="28"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Holidays_Validation"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Holidays_Validation(Inputs, Outputs)
{	
		var strdate = Inputs.GetProperty(&quot;Date&quot;);
		var strMonth = strdate.substring(0, 2);
		var strDate = strdate.substring(3, 5);
		var strYear = strdate.substring(6, 10);
		
		// Cut Over Date Should not be a Public Holiday
		strMonth = ToNumber(strMonth);
		strDate = ToNumber(strDate);
		strYear = ToNumber(strYear);
			
		if((strMonth == 1 &amp;&amp; strDate == 1) || (strMonth == 1 &amp;&amp; strDate == 6) || (strMonth == 4 &amp;&amp; strDate == 25) || (strMonth == 5 &amp;&amp; strDate == 1) || (strMonth == 6 &amp;&amp; strDate == 2) || (strMonth == 8 &amp;&amp; strDate == 15) || (strMonth == 11 &amp;&amp; strDate == 1) || (strMonth == 12 &amp;&amp; strDate == 8) || (strMonth == 12 &amp;&amp; strDate == 25) || (strMonth == 12 &amp;&amp; strDate == 26))
		{
			TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;ACS Messages&quot;, &quot;066&quot;));
			Outputs.SetProperty(&quot;Result&quot;, &quot;KO&quot;);
		}
		
		
		// Cut Over Date Should be Greater than Today + 6
		var strCurrentDate = new Date();
		
		var strCurrentDay = strCurrentDate.getDate();
		var strCurrentYear = strCurrentDate.getFullYear();
		var strCurrentMonth = strCurrentDate.getMonth();
		
		strCurrentYear = ToNumber(strCurrentYear);
		strCurrentMonth = ToNumber(strCurrentMonth);
		strCurrentMonth = strCurrentMonth + 1;
		strCurrentDay = ToNumber(strCurrentDay);
	
		if(strYear &lt; strCurrentYear)
		{
			TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;ACS Messages&quot;, &quot;065&quot;));
			Outputs.SetProperty(&quot;Result&quot;, &quot;KO&quot;);
		}
		
		if((strYear == strCurrentYear) &amp;&amp; (strMonth &lt; strCurrentMonth))
		{
			TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;ACS Messages&quot;, &quot;065&quot;));
			Outputs.SetProperty(&quot;Result&quot;, &quot;KO&quot;);		
		}
		
		if((strYear == strCurrentYear) &amp;&amp; (strMonth == strCurrentMonth) &amp;&amp; (strDate &lt; (strCurrentDay + 6)))
		{
			TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;ACS Messages&quot;, &quot;065&quot;));
			Outputs.SetProperty(&quot;Result&quot;, &quot;KO&quot;);
		}
			
	
	
		// Cut Over Date Should not be Saturday (= 0) or Sunday (= 1)
		
		var Weekendday = ToNumber(Day_of_Week(strDate, strMonth, strYear));
		TheApplication().Trace(&quot;Weekendday::&quot;+Weekendday);

		if((Weekendday == 0) || (Weekendday == 1))
		{
			TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;ACS Messages&quot;, &quot;067&quot;));
			Outputs.SetProperty(&quot;Result&quot;, &quot;KO&quot;);
		}
		
		
		
		// Cut Over Date Should not be Easter Day
		
		var EasterDate = Easter_Algorithm(strYear).toString();
				
		if(EasterDate == strdate)
		{
			TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;ACS Messages&quot;, &quot;064&quot;));
			Outputs.SetProperty(&quot;Result&quot;, &quot;KO&quot;);
		}
		
			
		Outputs.SetProperty(&quot;Result&quot;, &quot;OK&quot;);
		return(CancelOperation);

}"
			   SEQUENCE="29"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="KpiLogging"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function KpiLogging (Inputs, Outputs)
{
	/************************************************************************************
	* VF TK eg 17-12-09 : Created                                                        	*
	* Description      : This business service method is used for kpi tracking. It write 	*
	* KPI logging information in a BC created for this pourpose								*
	*          																				*	
	* 													      								*
	************************************************************************************/
	/*try// 11/03/2013 VF TR - Exception errors for Oracle Review
	{*/
		var status  			= Inputs.GetProperty (&quot;status&quot;);
		var kpiRef   			= Inputs.GetProperty (&quot;kpiRef&quot;);
		var timestampStart   	= Inputs.GetProperty (&quot;timestampStart&quot;);
		var timestampEnd   		= Inputs.GetProperty (&quot;timestampEnd&quot;);
		var rootTransactionId  	= Inputs.GetProperty (&quot;rootTransactionId&quot;);
		var task  				= Inputs.GetProperty (&quot;rootTransactionId&quot;);	
 		var	description			= Inputs.GetProperty (&quot;description&quot;);	
		var	userId				= Inputs.GetProperty (&quot;UserId&quot;);	
	/*}
	catch (e)
	{
	}*/
}"
			   SEQUENCE="30"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="LoadGrantMatrix"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function LoadGrantMatrix(Inputs, Outputs)
{
	/************************************************************************************
	* ACN 08062010  : Created                                                        	*
 	* Description      : load in a propertySet the grant matrix configuration        	*
	* Inputs	  	   : no inputs       												*
	* Outputs	       : propertySet entity       										*  
	************************************************************************************/
	
	try
	{
		var counter = 0;
		var bcParameterExist;
		var grantButtonCode = &quot;VF_Grant_Button&quot;;
		var boparameter :BusObject= TheApplication().GetBusObject(&quot;ACS NI Parameter&quot;);
		var bcparameter :BusComp  = boparameter.GetBusComp(&quot;ACS NI Parameter (Simple)&quot;);
			
		with(bcparameter)
		 	{
		 	ClearToQuery();
		 	ActivateField(&quot;Function&quot;);
			ActivateField(&quot;Name&quot;);
			ActivateField(&quot;Value&quot;);
			ActivateField(&quot;Condition1&quot;);
			ActivateField(&quot;Condition2&quot;);					
		
			//VFTRCBU-8043 Optimization of function to only load the records for which the current user has defined roles
			//SJOAO April 2015	
			var listOfRoles = TheApplication().GetProfileAttr(&quot;TELCO.PositionProfile:Role.AvailableRoles&quot;).split(&quot;,&quot;);		
			var numOfRoles = listOfRoles.length;			
			var condition1:String = &quot;&quot;;
			var finalExpr = &quot;[Function] = &apos;&quot; + grantButtonCode + &quot;&apos;&quot;;
			
			while (numOfRoles &gt; 1)
			{
				condition1 = condition1 + &quot;[Condition1] = &apos;&quot; + listOfRoles[numOfRoles - 1] + &quot;&apos; OR &quot;;	
				numOfRoles -= 1;
			}
			
			if (numOfRoles == 1)
			{
				condition1 = condition1 + &quot;[Condition1] = &apos;&quot; + listOfRoles[numOfRoles - 1] + &quot;&apos;&quot;;
				finalExpr = finalExpr + &quot; AND &quot; + &quot;(&quot; + condition1 + &quot;)&quot;;
			}
			//old
			//SetSearchSpec(&quot;Function&quot;,grantButtonCode);//Scripting 15:null check not req value hardcoded
			//SetSearchSpec(&quot;Condition1&quot;,condition1);
			 
			
			SetSearchExpr(finalExpr);
			ExecuteQuery(ForwardOnly);
			}
	
		bcParameterExist = bcparameter.FirstRecord();
		var outPropset : PropertySet = TheApplication().NewPropertySet();
        outPropset.SetType(&quot;grantMatrix&quot;);

		while (bcParameterExist)
			{	
				var strFunction 	= bcparameter.GetFieldValue(&quot;Name&quot;);
				var strName 		= bcparameter.GetFieldValue(&quot;Value&quot;);
			    var strValue 		= bcparameter.GetFieldValue(&quot;Condition1&quot;);
			    var strCondition1 	= bcparameter.GetFieldValue(&quot;Condition2&quot;);
			    var propSetName 	= strFunction+strName+strValue;
			
				outPropset.SetProperty (propSetName, strCondition1);
				counter++;
				bcParameterExist = bcparameter.NextRecord();
			
			}
		
		Outputs.AddChild(outPropset);
		TheApplication().GRANT_MATRIX= Outputs;
        outPropset = null;
		
	}
	finally
	{
    	bcparameter       = null;
    	boparameter       = null;
    	outPropset		  = null;	
	}
	
}"
			   SEQUENCE="31"
			   UPDATED="04/09/2015 23:33:21"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:16"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="LogInputs"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function LogInputs (Inputs, Outputs)
{
	/************************************************************************************
	* ACS AD 06-Jun-07 : Created                                                        *
	* Description      : This business service method is used for debugging. It will    *
	*                    write the values provided as input into the file name provided *
	*                    as input. Please ensure that the file path is also input.      *
	************************************************************************************/
	/*try
	{*/
		var strInput1   = Inputs.GetProperty (&quot;Input1&quot;);
		var strInput2   = Inputs.GetProperty (&quot;Input2&quot;);
		var strInput3   = Inputs.GetProperty (&quot;Input3&quot;);
		var strFileName = Inputs.GetProperty (&quot;FileName&quot;);
	//}
	// 11/03/2013 VF TR - Exception errors for Oracle Review
	/*catch (e)
	{
	}*/
}"
			   SEQUENCE="32"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="LogInsert"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function LogInsert(FieldInfo,FieldValue)
{
	try
	{
		var LogBO : BusObject = TheApplication ().GetBusObject(&quot;ACS NI Parameter&quot;);
		var LogBC : BusComp = LogBO.GetBusComp (&quot;VF LOG EVENTS&quot;);
		var View = TheApplication().GetProfileAttr(&quot;ActiveViewName&quot;);
		var Login = TheApplication().LoginName();
		var Process = &quot;Sorgu&quot;;
		with(LogBC)  
		{
			NewRecord(NewAfter);  
			SetFieldValue(&quot;Field Info&quot;,FieldInfo);
			SetFieldValue(&quot;Process Info&quot;,Process);
			SetFieldValue(&quot;User Name&quot;,Login);
	    	SetFieldValue(&quot;View&quot;,View);
	    	SetFieldValue(&quot;Field Value&quot;,FieldValue);
			WriteRecord();  
		} 
	}
	finally
	{
		LogBC = null;
		LogBO = null;
		Login = null;
	}
}"
			   SEQUENCE="33"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="LogWorkflowErrors"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function LogWorkflowErrors (Inputs, Outputs)
{
	/******************************************************************************
	* ACS AD 26-Jul-06 : Created                                                  *
	* Description      : This is a general purpose script that will take the Error*
	*                    Code and Error Message as input arguements and write them*
	*                    to a file mentioned in the LOVs. This method is ment for *
	*                    error handling in back ground workflows.                 *
	******************************************************************************/
	try
	{
		var strErrorCode     = Inputs.GetProperty (&quot;ErrorCode&quot;);
		var strErrorMessage  = Inputs.GetProperty (&quot;ErrorMessage&quot;);
		var strOtherInputs1  = Inputs.GetProperty (&quot;OtherInputs1&quot;);
		var strOtherInputs2  = Inputs.GetProperty (&quot;OtherInputs2&quot;);
	
		var strDebugFileName = TheApplication ().InvokeMethod(&quot;LookupValue&quot;, &quot;ACS_WF_TRACE_FILE&quot;, &quot;FileName&quot;);
		var strDebugFlag     = TheApplication ().InvokeMethod(&quot;LookupValue&quot;, &quot;ACS_WF_TRACE_FLAG&quot;, &quot;Value&quot;);
	
		var dtDate      	= new Date ();
		var strSysDate		= DateToString(dtDate);
		strDebugFileName    = strDebugFileName + &quot;_&quot; + strSysDate + &quot;.txt&quot;;
		var strDebugMessage = strOtherInputs1 + &quot;\n&quot; + strOtherInputs2 + &quot;\nError Code :: &quot; + strErrorCode + &quot;\nError Message :: &quot;+strErrorMessage;
		
		if (strDebugFlag == &quot;Y&quot;)
		{
			if (strDebugFileName.length &gt; 0)
			{
				var fpLogFile = Clib.fopen (strDebugFileName, &quot;w&quot;);	
				Clib.fputs (strDebugMessage, fpLogFile);
				Clib.fclose (fpLogFile);
			}
		}
	}
	/*catch (e)// 11/03/2013 VF TR - Exception errors for Oracle Review
	{
	}*/
	finally
	{
	}
}"
			   SEQUENCE="34"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="LookupName"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function LookupName (Input , Output)
{
	/******************************************************************************
	* PRM : Created                                                  *
	* Description      : Returns Name of given LOV given the Value*
	******************************************************************************/
try
	{	
	  	var inProp  :PropertySet	= TheApplication().NewPropertySet();
		var outProp :PropertySet	= TheApplication().NewPropertySet();
		var BS 		:Service		= TheApplication().GetService(&quot;VF TRK Utilities&quot;);

	  	var type = Input.GetProperty(&quot;LOV&quot;) ;
	  	var val = Input.GetProperty(&quot;Val&quot;) ;
	  	var name = null;
	  
	  	var strParameterSrcExpr = &quot;[Type] = &apos;&quot;+type+&quot;&apos;&quot;+ &quot; AND [Value] = &apos;&quot;+val+&quot;&apos;&quot;;
	  	var boHPOrderEntry 	:BusObject= TheApplication().GetBusObject (&quot;HP Order Entry&quot;);
		var bcLOV 			:BusComp  = boHPOrderEntry.GetBusComp (&quot;List Of Values&quot;);

		bcLOV.ClearToQuery ();
		bcLOV.SetViewMode (AllView);
		bcLOV.ActivateField (&quot;Name&quot;);
		// Begin: Review Input validation: Scripting 15 null check Added 16may2012 Udbhav IDC
		inProp.SetProperty(&quot;type&quot;,type);
		inProp.SetProperty(&quot;val&quot;,val);
		inProp.SetProperty(&quot;Validation Input Mode&quot;, &quot;AND&quot;);
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp);
		//End 	
		bcLOV.SetSearchExpr (strParameterSrcExpr);
		bcLOV.ExecuteQuery(ForwardOnly);
		
		if (bcLOV.FirstRecord ())
		{
			name = bcLOV.GetFieldValue (&quot;Name&quot;);
		} 
		
		Output.SetProperty (&quot;Name&quot;, name);
	}

	finally
	{
		bcLOV = null;
		boHPOrderEntry = null;
		inProp 	= null;
		outProp = null;
		BS 		= null;
	}
}"
			   SEQUENCE="35"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ModifyAttribValue"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ModifyAttribValue (Inputs, Outputs)
{

	
	var strActionUpdate = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;DELTA_ACTION_CODE&quot;,&quot;Modified&quot;);
	
	try
	{

		// ACS AD 26-07-06 :: Extract the input arguements
		var strOrderId       = Inputs.GetProperty(&quot;OrderId&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		var strLineItemName  = Inputs.GetProperty (&quot;LineItemName&quot;);
		var strAttributeName = Inputs.GetProperty (&quot;AttributeName&quot;);
		var strAttributeValue = Inputs.GetProperty (&quot;AttributeValue&quot;);

		var strOrderSRCExpr   = &quot;[Id] = &apos;&quot;+strOrderId+&quot;&apos;&quot;;
		var strProductName    = &quot;&quot;;
		var strAttribName     = &quot;&quot;;
	
		var booRecordExists;
		var booRecordExists1;
		var booRecordFound = &quot;N&quot;;
		
		// ACS AD 26-07-06 :: Create BO, BC instances
		var boOrderEntry     : BusObject = TheApplication().GetBusObject (&quot;Order Entry&quot;);
		var bcOrderEntry     : BusComp   = boOrderEntry.GetBusComp (&quot;Order Entry - Orders&quot;);
		var bcOrderLineItems : BusComp   = boOrderEntry.GetBusComp (&quot;Order Entry - Line Items&quot;);
		var bcOrderItemXA    : BusComp   = boOrderEntry.GetBusComp (&quot;Order Item XA&quot;);
		
		bcOrderItemXA.ActivateField (&quot;Action Code&quot;);
		// ACS AD 26-07-06 :: Query the components to find the attribute value
		bcOrderEntry.ClearToQuery ();
		bcOrderEntry.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
		bcOrderEntry.SetSearchExpr (strOrderSRCExpr);
		bcOrderEntry.ExecuteQuery(ForwardOnly);
		
		if (bcOrderEntry.FirstRecord ())
		{
			booRecordExists = bcOrderLineItems.FirstRecord ();
			
			while (booRecordExists)
			{
				strProductName = bcOrderLineItems.GetFieldValue (&quot;Product&quot;);
				
				if ((strProductName == strLineItemName) || (strLineItemName.length == 0))
				{
					booRecordExists1 = bcOrderItemXA.FirstRecord ();
					while (booRecordExists1 &amp;&amp; booRecordFound == &quot;N&quot;)
					{
						strAttribName = bcOrderItemXA.GetFieldValue (&quot;Name&quot;);
						if (strAttribName == strAttributeName)
						{
							bcOrderLineItems.SetFieldValue (&quot;Action Code&quot;,strActionUpdate);
							bcOrderItemXA.SetFieldValue (&quot;Action Code&quot;,strActionUpdate);
							bcOrderItemXA.SetFieldValue (&quot;Value&quot;, strAttributeValue);
							bcOrderItemXA.WriteRecord ();
							bcOrderLineItems.WriteRecord ();
						}
						booRecordExists1 = bcOrderItemXA.NextRecord ();
					}
				}
				booRecordExists = bcOrderLineItems.NextRecord ();
			}
		}
		else
		{
			TheApplication().RaiseErrorText (&quot;Order Id &quot;+strOrderId+&quot; is not valid&quot;);
		}
	}
	finally
	{
		bcOrderEntry      = null;
		bcOrderLineItems  = null;
		bcOrderItemXA     = null;
		boOrderEntry      = null;
		inProp = null;
		outProp = null;
		BS = null;
	}
}"
			   SEQUENCE="36"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ModifyOrderFormTaskUI"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ModifyOrderFormTaskUI (Inputs, Outputs) 
{

	try
	{
		var strAccountId       = Inputs.GetProperty(&quot;Account Id&quot;);
		var strBillAccntId   = Inputs.GetProperty (&quot;Billing Account Id&quot;);
		var strOrderId 		 = Inputs.GetProperty (&quot;Order Id&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End
		var booOrderExists;
		var booItemExists;
		var strOrderSRCExpr  = &quot;[Id] = &apos;&quot;+strOrderId+&quot;&apos;&quot;;
		
		var boOrderEntry      : BusObject = TheApplication().GetBusObject (&quot;Order Entry&quot;);
		var bcOrderEntry      : BusComp   = boOrderEntry.GetBusComp (&quot;Order Entry - Orders&quot;);
		var bcOrderEntryItem  : BusComp   = boOrderEntry.GetBusComp (&quot;Order Entry - Line Items&quot;);
		
		bcOrderEntry.ClearToQuery ();
		bcOrderEntry.SetViewMode(AllView);
		bcOrderEntry.SetSearchExpr (strOrderSRCExpr);//VFTK Venkata 15052012 : No changes for OracleScript 15 review since Order Id is a required input
		//Venkata 14/05/2012: Moved child query as per oracle review31-Start */
		bcOrderEntryItem.ClearToQuery ();
		bcOrderEntryItem.SetViewMode(AllView);

		bcOrderEntry.ExecuteQuery(ForwardOnly);
		
		booOrderExists = bcOrderEntry.FirstRecord();
		
		if (booOrderExists)	
		{
			bcOrderEntry.SetFieldValue (&quot;Account Id&quot;, strAccountId);
			bcOrderEntry.SetFieldValue (&quot;Billing Account Id&quot;, strBillAccntId);
			bcOrderEntry.SetFieldValue (&quot;Order Type Id&quot;, &quot;1-23GI&quot;);
			bcOrderEntry.WriteRecord ();
					
			booItemExists = bcOrderEntryItem.FirstRecord();
			//update the billing account value in line items
			while (booItemExists)
			{
				bcOrderEntryItem.SetFieldValue (&quot;Billing Account Id&quot;, strBillAccntId);
				bcOrderEntryItem.WriteRecord ();
				booItemExists = bcOrderEntryItem.NextRecord ();		
			}
		}
		else
		{
			TheApplication().RaiseErrorText (&quot;Order Id &quot;+strOrderId+&quot; is not valid&quot;);
		}
	}
	finally
	{
		bcOrderEntry      = null;
		bcOrderEntryItem  = null;
		boOrderEntry      = null;
		inProp = null;
		outProp = null;
		BS = null;
		
	}
}"
			   SEQUENCE="37"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="PopulateModifyOrderId"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function PopulateModifyOrderId (Inputs, Outputs)
{
	/********************************************************************************\
	* ACS 10-Oct-07    : Created by Luigi Anderlucci                                 *
	* Description      : bcOrderItem function sets the Modify Order Id on the assets *
	*					 modified by a particulr order.								 *
	*					 From the order id the fucntion retrieves all the related    *
	*					 order line items. From each order line item the function    *
	*					 gets the related asset item and sets the id of the order    *
	*					 that is currently modifying the asset.						 *
	*					 Outputs the Property &quot;Return&quot;: 0 = ok, 1 = failure		 	 *
	\*******************************************************************************/
try
{
	var strAssetIntgId;
	var strAssetId;
	var counter = 0;
	var boAsset : BusObject =  TheApplication().GetBusObject(&quot;Asset Management&quot;);
	var bcAstMgmtAstHeader : BusComp =  boAsset.GetBusComp(&quot;Asset Mgmt - Asset - Header&quot;);
	var boOrderEntry : BusObject  = TheApplication().GetBusObject(&quot;Order Entry&quot;);
	var bcOrderItem : BusComp   = boOrderEntry.GetBusComp(&quot;Order Entry - Line Items&quot;);
	var nextRecord = null;
	var strOrderId = Inputs.GetProperty(&quot;OrderId&quot;)
	
	bcOrderItem.ClearToQuery();
	bcOrderItem.SetViewMode(AllView);
	bcOrderItem.ActivateField(&quot;Asset Integration Id&quot;);
	bcOrderItem.ActivateField(&quot;Order Header Id&quot;);
	//VFTK Junaid 20120520 - Added for Oracle Review 15
	var inProp :PropertySet     = TheApplication().NewPropertySet();
	var outProp :PropertySet    = TheApplication().NewPropertySet();
	var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
	inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
	BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
	//End
	bcOrderItem.SetSearchSpec (&quot;Order Header Id&quot;, strOrderId);
    bcOrderItem.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
	
	
	if( bcOrderItem.FirstRecord() )
	{ 
		nextRecord = bcOrderItem.FirstRecord();
		while(nextRecord)
		{
			counter = counter + 1;
			strAssetIntgId = bcOrderItem.GetFieldValue (&quot;Asset Integration Id&quot;);
			//VFTK Junaid 20120520 - Added for Oracle Review 15
			inProp = TheApplication().NewPropertySet();
			inProp.SetProperty(&quot;strAssetIntgId&quot;, strAssetIntgId); 
			BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
			//End
			bcAstMgmtAstHeader.SetViewMode(AllView);
			bcAstMgmtAstHeader.ClearToQuery ();
			bcAstMgmtAstHeader.ActivateField(&quot;Modify Order Id&quot;);
			bcAstMgmtAstHeader.ActivateField(&quot;Integration Id&quot;);
			bcAstMgmtAstHeader.ActivateField(&quot;Id&quot;);
			bcAstMgmtAstHeader.SetSearchSpec(&quot;Integration Id&quot;, strAssetIntgId);//VFTK Venkata 15052012 : No changes for OracleScript 31 review since no parent child relationship
			bcAstMgmtAstHeader.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
			if (bcAstMgmtAstHeader.FirstRecord())
			{
				strAssetId = bcAstMgmtAstHeader.GetFieldValue (&quot;Id&quot;);
				bcAstMgmtAstHeader.SetFieldValue (&quot;Modify Order Id&quot;, strOrderId);
				bcAstMgmtAstHeader.WriteRecord ();
			}
		nextRecord = bcOrderItem.NextRecord();
		}//Ending while
	}//Ending if
	Outputs.SetProperty(&quot;Return&quot;,0);
}//Ending try
	catch(e)
	{
		Outputs.SetProperty(&quot;Return&quot;,1);
	}
	finally
	{
		//IBM_TFERREIRA 20180116 DEF-24990 - Siebel Crash
		//boAsset = null;
		bcAstMgmtAstHeader = null;
		boAsset = null;
		bcOrderItem = null;
		boOrderEntry = null;
		inProp = null;
		outProp = null;
		BS = null;
	}

}"
			   SEQUENCE="38"
			   UPDATED="01/16/2018 14:27:09"
			   UPDATED_BY="IBM_TFERREIRA"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="PopulateModifyOrderId2"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function PopulateModifyOrderId2 (Inputs, Outputs)
{
	/*********************************************************************************\
	* ACS 10-Oct-07    : Created by Luigi Anderlucci                                  *
	* Description      : this function sets the Modify Order Id on the all assets 	  *
	*					 modified by a particulr order.							      *
	*					 From the order id the function retrieves all the Root Order  *
	*					 Items. Using the Asset Integration Id it is possible to	  *
	*					 get the Id of the Root Asset connected to the root line item,*
	*					 looping within all the records with the same root_asset_id	  *
	*					 it is possible to intercepts all the modified assets.		  *
	*					 Outputs the Property &quot;Return&quot;: 0 = ok, 1 = failure		 	  *
	\*********************************************************************************/

try
{
	var strAssetIntgId;
	var strAssetId;
	var strRootAssetId;
	var counter = 0;
	var boAsset : BusObject  = TheApplication().GetBusObject(&quot;Asset Management&quot;);
	var bcAstMgmtAstHeader : BusComp = boAsset.GetBusComp(&quot;VF Asset Light&quot;);
	var boOrderEntry : BusObject  = TheApplication().GetBusObject(&quot;VF Order Entry - Line Items Lightest&quot;);
	var bcOrderItem : BusComp  = boOrderEntry.GetBusComp(&quot;VF Order Entry - Line Items Lightest&quot;);
	var nextRecord = null;
	var strOrderId = Inputs.GetProperty(&quot;OrderId&quot;)
	var strSearchSpec;
	var booAstRecordExists;
	
	//Begin - Scripting 15 - Input validation
	var inProp 	:PropertySet = TheApplication().NewPropertySet();
	var outProp	: PropertySet = TheApplication().NewPropertySet();
	var BS		: Service	 = TheApplication().GetService(&quot;VF TRK Utilities&quot;);
	inProp.SetProperty(&quot;strOrderId&quot;,strOrderId);
	BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp);
	//End - Scripting 15
	
	bcOrderItem.ClearToQuery();
	bcOrderItem.SetViewMode(AllView);
	bcOrderItem.ActivateField(&quot;VF Asset Integration Id&quot;);
	//bcOrderItem.ActivateField(&quot;Asset Integration Id&quot;);
	//bcOrderItem.ActivateField(&quot;Order Header Id&quot;);
	//bcOrderItem.ActivateField(&quot;Root Order Item Id&quot;);
	//bcOrderItem.SetSearchSpec(&quot;Order Header Id&quot;, strOrderId);
	//bcOrderItem.SetSearchSpec(&quot;VF Root Order Item Id&quot;,&quot;[Id]&quot;);
    
    bcOrderItem.SetSearchExpr(&quot;[VF Root Order Item Id] = [Id] and [Order Header Id] = &apos;&quot;+strOrderId+&quot;&apos;&quot;);
    
    bcOrderItem.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
	
	nextRecord = bcOrderItem.FirstRecord();
	while(nextRecord)
	{
		strAssetIntgId = bcOrderItem.GetFieldValue (&quot;VF Asset Integration Id&quot;);
		bcAstMgmtAstHeader.SetViewMode(AllView); 
		bcAstMgmtAstHeader.ClearToQuery ();
		bcAstMgmtAstHeader.ActivateField(&quot;Modify Order Id&quot;);
		bcAstMgmtAstHeader.ActivateField(&quot;Integration Id&quot;);
		bcAstMgmtAstHeader.ActivateField(&quot;Root Asset Id&quot;);
		bcAstMgmtAstHeader.ActivateField(&quot;Id&quot;);
		bcAstMgmtAstHeader.SetSearchSpec(&quot;Integration Id&quot;, strAssetIntgId);//VFTK Venkata 15052012 Scripting31: No Link between BC&apos;s
		TheApplication().Trace(&quot;ACS General Operations :: PopulateModifyOrderId ::Before Asset Item Query&quot;);
		bcAstMgmtAstHeader.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
		
		if (bcAstMgmtAstHeader.FirstRecord())
		{
			strRootAssetId = bcAstMgmtAstHeader.GetFieldValue (&quot;Id&quot;);
			TheApplication().Trace (&quot;ACS General Operations :: PopulateModifyOrderId ::Before Asset Item Query&quot;);
			
			bcAstMgmtAstHeader.ClearToQuery ();
			bcAstMgmtAstHeader.SetViewMode(AllView);
			bcAstMgmtAstHeader.SetSearchSpec(&quot;Root Asset Id&quot;, strRootAssetId);
			//CF_ESANTOS - 20141230 - Added for DEF-2117 - &quot;Status&quot;, &quot;&lt;&gt; &apos;Inactive&apos;&quot;
			bcAstMgmtAstHeader.SetSearchSpec(&quot;Status&quot;, &quot;&lt;&gt; &apos;Inactive&apos;&quot;);
			bcAstMgmtAstHeader.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
			
			booAstRecordExists = bcAstMgmtAstHeader.FirstRecord ();
			while (booAstRecordExists)
			{
				counter = counter + 1;
				strAssetId = bcAstMgmtAstHeader.GetFieldValue (&quot;Id&quot;);
				bcAstMgmtAstHeader.SetFieldValue (&quot;Modify Order Id&quot;, strOrderId);
				bcAstMgmtAstHeader.WriteRecord ();
				booAstRecordExists = bcAstMgmtAstHeader.NextRecord ();
			}
		}
		nextRecord = bcOrderItem.NextRecord();
	}//Ending while
	Outputs.SetProperty(&quot;Return&quot;,0);
}//Ending try
	catch(e)
	{
		Outputs.SetProperty(&quot;Return&quot;,1);
	}
	finally
	{
		bcAstMgmtAstHeader = null;
		bcOrderItem = null;
		boAsset = null;
		boOrderEntry = null;
		inProp = null;
		outProp = null;
		BS = null;
	}

}"
			   SEQUENCE="39"
			   UPDATED="04/09/2015 23:33:21"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="PopulateOrderAttrOldVal"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function PopulateOrderAttrOldVal (Inputs, Outputs)
{

	try
	{
		var boOrderEntry  : BusObject  = TheApplication ().GetBusObject (&quot;Order Entry&quot;);
		var bcOrderEntry  : BusComp    = boOrderEntry.GetBusComp (&quot;Order Entry - Orders&quot;);
		var bcOrderItem   : BusComp    = boOrderEntry.GetBusComp (&quot;Order Entry - Line Items&quot;);
		var bcOrderItemXA : BusComp    = boOrderEntry.GetBusComp (&quot;Order Item XA&quot;);

		var boAssetManagement : BusObject  = TheApplication ().GetBusObject (&quot;Asset Management&quot;);
		var bcAssetMgmt       : BusComp    = boAssetManagement.GetBusComp (&quot;Asset Mgmt - Asset&quot;);
		var bcAssetMgmtXA     : BusComp    = boAssetManagement.GetBusComp (&quot;Asset Mgmt - Asset XA&quot;);
		
		var inProp 	:PropertySet;
		var outProp :PropertySet;
		var BS 		:Service;

		var strOrderId = Inputs.GetProperty (&quot;OrderId&quot;);
		var strOrderSearchExpr = &quot;[Id] = &apos;&quot;+strOrderId+&quot;&apos;&quot;;
		var strAssetSearchExpr = &quot;&quot;;
		var strAssetId         = &quot;&quot;;
		var strAssetAttrName   = &quot;&quot;;
		var strAssetAttrValue  = &quot;&quot;;
		var strOrderAttrName   = &quot;&quot;;

		var booOrderItemExists;
		var booOrderXAExists;
		var booAssetExists;
		var booAssetXAExists;
	
		bcOrderEntry.ClearToQuery ();
		bcOrderEntry.SetViewMode(AllView);//Mamta-Updated as per Oracle Review
		bcOrderEntry.SetSearchExpr (strOrderSearchExpr);//VFTK Venkata 15052012 : No changes for OracleScript 15 review since OrderId is a required input
		bcOrderEntry.ExecuteQuery(ForwardOnly);
		
		if (bcOrderEntry.FirstRecord ())
		{
			booOrderItemExists = bcOrderItem.FirstRecord ();
			while (booOrderItemExists)
			{
				strAssetId = bcOrderItem.GetFieldValue (&quot;Asset Integration Id&quot;);
				
				strAssetSearchExpr = &quot;[Integration Id] = &apos;&quot;+strAssetId+&quot;&apos;&quot;;

				bcAssetMgmt.ClearToQuery ();
				bcAssetMgmt.SetViewMode(AllView);
				/*** Begin ***/ 
				inProp	= TheApplication().NewPropertySet();
				outProp	= TheApplication().NewPropertySet();
				BS		= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
				inProp.SetProperty(&quot;strAssetId&quot;,strAssetId);
				BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp);
				/*** End ***/
				bcAssetMgmt.SetSearchExpr (strAssetSearchExpr);
				bcAssetMgmt.ExecuteQuery(ForwardOnly);

				booAssetExists = bcAssetMgmt.FirstRecord ();

				while (booAssetExists)
				{
					booAssetXAExists = bcAssetMgmtXA.FirstRecord ();
					
					while (booAssetXAExists)
					{
						strAssetAttrName  = bcAssetMgmtXA.GetFieldValue (&quot;Name&quot;);
						strAssetAttrValue = bcAssetMgmtXA.GetFieldValue (&quot;Value&quot;);

						booOrderXAExists = bcOrderItemXA.FirstRecord ();
						while (booOrderXAExists)
						{
							strOrderAttrName = bcOrderItemXA.GetFieldValue (&quot;Name&quot;);
							if (strAssetAttrName == strOrderAttrName)
							{
								bcOrderItemXA.SetFieldValue (&quot;Previous Text Value&quot;, strAssetAttrValue);
								bcOrderItemXA.WriteRecord ();
							}
							booOrderXAExists = bcOrderItemXA.NextRecord ();
						}
						booAssetXAExists = bcAssetMgmtXA.NextRecord ();
					}

					booAssetExists = bcAssetMgmt.NextRecord ();
				}

				booOrderItemExists = bcOrderItem.NextRecord ();
			}
		}
	}
	finally
	{

		bcOrderEntry       = null;
		bcOrderItem        = null;
		bcOrderItemXA      = null;
		bcAssetMgmt        = null;
		bcAssetMgmtXA      = null;
		boOrderEntry       = null;
		boAssetManagement  = null;
		inProp 			   = null;
		outProp			   = null;
		BS 				   = null;
	}
}"
			   SEQUENCE="40"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="PopulateOrderFieldsBasedOnReason"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function PopulateOrderFieldsBasedOnReason()
{
  try{
  		var loActiveBO : BusObject = TheApplication().ActiveBusObject();
  		if (loActiveBO.Name() != &quot;VF TRK PRM Order Entry (Sales)&quot; || loActiveBO.Name() != &quot;Order Entry (Sales)&quot; || loActiveBO.Name() != &quot;Order Entry (Simple)&quot; || loActiveBO.Name() != &quot;VF TRK PRM Account&quot;)
  			return (CancelOperation);
  		else
  		{
	  		var BC : BusComp = loActiveBO.GetBusComp(&quot;Order Entry - Orders&quot;);
	        var OrderReason = BC.GetFieldValue(&quot;Order Reason&quot;);
	        if (OrderReason == &quot;&quot; || OrderReason == null) 
	        {
				var err = TheApplication().LookupMessage(&quot;VF Message Category&quot;, &quot;067&quot;);
				TheApplication().RaiseErrorText(err);
		        return(CancelOperation);
	        }
	        var boParameters : BusObject = TheApplication().GetBusObject (&quot;ACS NI Parameter&quot;);
			var BcParameter : BusComp = boParameters.GetBusComp (&quot;ACS NI Parameter&quot;);
			var OrderTypeC = BC.GetFieldValue(&quot;Order Type Constriant&quot;);
			var VFStatusCalc = BC.GetFieldValue(&quot;VF Status Code Calc&quot;);
			//VFTK Junaid 20120520 - Added for Oracle Review 15
			var inProp :PropertySet     = TheApplication().NewPropertySet();
			var outProp :PropertySet    = TheApplication().NewPropertySet();
			var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
			inProp.SetProperty(&quot;OrderTypeC&quot;, OrderTypeC);
			inProp.SetProperty(&quot;VFStatusCalc&quot;, VFStatusCalc); 
			inProp.SetProperty(&quot;Validation Input Mode&quot;, &quot;AND&quot;);
			BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
			//End
			//Query CX_PARAMETER
			var strFunction =&quot;VF Reason&quot;;
			var LookupN : Service = TheApplication().GetService(&quot;ACS General Operations&quot;);
			var In :PropertySet   = TheApplication().NewPropertySet()
			var Out :PropertySet  = TheApplication().NewPropertySet();
			In.SetProperty(&quot;LOV&quot;,&quot;ACS_ORDER_REASON&quot;);
			In.SetProperty(&quot;Val&quot;,OrderReason);
			LookupN.InvokeMethod(&quot;LookupName&quot;,In,Out);
			var OrderReasonLIC = Out.GetProperty(&quot;Name&quot;);
			var expr = &quot;[Function] = &apos;&quot;+strFunction+&quot;&apos; AND [Condition1] = &apos;&quot;+OrderReasonLIC+&quot;&apos; AND [Name] = &apos;&quot;+VFStatusCalc+&quot;&apos; AND [Condition2] = &apos;&quot;+OrderTypeC+&quot;&apos;&quot;;
			BcParameter.SetViewMode(AllView); 
			BcParameter.ClearToQuery(); 
			BcParameter.ActivateField(&quot;Condition3&quot;);
			BcParameter.ActivateField(&quot;Condition4&quot;);
			BcParameter.ActivateField(&quot;Condition6&quot;);
			BcParameter.ActivateField(&quot;Condition5&quot;);
			BcParameter.ActivateField(&quot;Condition7&quot;);
			BcParameter.SetSearchExpr(expr);
		   	BcParameter.ExecuteQuery(ForwardOnly);
			var booRecordExists = BcParameter.FirstRecord ();	 
		    if (!booRecordExists)
		    {     
			    TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;VF Message Category&quot;,&quot;185&quot;));
			    return(CancelOperation);
		    }
		    else
		    {
		    	var lsCondition3 = BcParameter.GetFieldValue(&quot;Condition3&quot;);
		    	var lsCondition4 = BcParameter.GetFieldValue(&quot;Condition4&quot;);
		    	var lsCondition6 = BcParameter.GetFieldValue(&quot;Condition6&quot;);
		    	var lsCondition5 = BcParameter.GetFieldValue(&quot;Condition5&quot;);
		    	var lsCondition7 = BcParameter.GetFieldValue(&quot;Condition7&quot;);
	
			    // Populate the fields AS IS on CRM under Constrained Picklist. Fields will serve for order submission WF
			    BC.SetFieldValue(&quot;VF Category Action&quot;, lsCondition3);
			    BC.SetFieldValue(&quot;VF GreyBlack From Reason&quot;, lsCondition4);
			    BC.SetFieldValue(&quot;VF Logical Reason&quot;, lsCondition6);
			    BC.SetFieldValue(&quot;VF Status Column&quot;, lsCondition5);
			    BC.SetFieldValue(&quot;VF Product Check Type&quot;, lsCondition7);
		    }
	        BC.WriteRecord();
	        return;
       }
 }
	finally
	{
		BC = null;
		loActiveBO = null;
		BcParameter=null;
		boParameters = null;
		In = null;
		Out = null;
		inProp = null;
		outProp = null;
		BS = null;
		LookupN = null;
	}
}"
			   SEQUENCE="41"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ReadOnlyView"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ReadOnlyView(Inputs,Outputs)
{
	try
	{
		var activeView = TheApplication().GetProfileAttr(&quot;ActiveViewName&quot;);
		var isReadOnly = TheApplication().InvokeMethod(&quot;IsViewReadOnly&quot;, activeView);
		
		if (isReadOnly == &quot;FALSE&quot;)
       	{
       	    Outputs.SetProperty(&quot;Out&quot;,&quot;N&quot;);
       		return(CancelOperation);
       	}
       	else
       	{
       	    Outputs.SetProperty(&quot;Out&quot;,&quot;Y&quot;);
       		return(CancelOperation);
       	}	
	}
	catch(e) 
	{ 
	    throw(e);
		return(CancelOperation);
	}
}"
			   SEQUENCE="42"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="RefreshSmartScriptContext"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function RefreshSmartScriptContext(Inputs, Outputs)
{
	try
	{
		var boAccount : BusObject = TheApplication().GetBusObject(&quot;Account&quot;);
		var bcAccount : BusComp = boAccount.GetBusComp(&quot;Account&quot;);
		var boAct : BusObject = TheApplication().GetBusObject(&quot;Action&quot;);
		var bcAct : BusComp = boAct.GetBusComp(&quot;Action&quot;);
		var boSR: BusObject = TheApplication().GetBusObject(&quot;Service Request&quot;);
		var bcSR : BusComp = boSR.GetBusComp(&quot;Service Request&quot;);
		var boVFSR: BusObject = TheApplication().GetBusObject(&quot;VF Service Request&quot;);
		var bcVFSR : BusComp = boSR.GetBusComp(&quot;Service Request&quot;);
		var boBA: BusObject = TheApplication().GetBusObject(&quot;Billing Account&quot;);
		var bcBA : BusComp = boBA.GetBusComp(&quot;Billing Account&quot;);	
		var boAsset: BusObject = TheApplication().GetBusObject(&quot;Asset Management - Asset Item&quot;); 
		var bcAsset : BusComp = boAsset.GetBusComp(&quot;Asset Mgmt - Asset&quot;); 
		var boAccountPRM : BusObject = TheApplication().GetBusObject(&quot;VF TRK PRM Account&quot;);
		var bcAccountPRM : BusComp = boAccountPRM.GetBusComp(&quot;Account&quot;);
		
		var strAccID = TheApplication().GetSharedGlobal(&quot;sssAccId&quot;);
		var strSRID = TheApplication().GetSharedGlobal(&quot;sssSRId&quot;);
		var strActID = TheApplication().GetSharedGlobal(&quot;sssActId&quot;);
		var sBAId = TheApplication().GetSharedGlobal(&quot;sssBAId&quot;);
		var sAssetId = TheApplication().GetSharedGlobal(&quot;sssAssetId&quot;);
		var sActiveView = TheApplication().ActiveViewName();
			
		if(strAccID!=&quot;&quot; &amp;&amp; sActiveView==&quot;SIS OM Customer Account Portal View - Poste&quot;)
		{
			bcAccount.ClearToQuery ();
			bcAccount.SetViewMode (AllView);
			bcAccount.SetSearchSpec(&quot;Id&quot;, strAccID);
			bcAccount.ExecuteQuery();
			if (bcAccount.FirstRecord())
			{
				TheApplication().GotoView(&quot;SIS OM Customer Account Portal View - Poste&quot;, boAccount);
			}    
			else
			{
	 		 	TheApplication().GotoView(&quot;SIS OM Customer Account Portal View - Poste&quot;);
			}
			TheApplication().SetSharedGlobal(&quot;sssAccId&quot;,&quot;&quot;);
			TheApplication().SetSharedGlobal(&quot;sssBAId&quot;,&quot;&quot;);//DEF-3537
		}
		
		if (strAccID!=&quot;&quot; &amp;&amp; sActiveView==&quot;Smart Script Player View (eApps)&quot;) {
			bcAccount.ClearToQuery ();
            bcAccount.SetViewMode (AllView);
            bcAccount.SetSearchSpec(&quot;Id&quot;, strAccID);
            bcAccount.ExecuteQuery();
            if (bcAccount.FirstRecord())
            {
                 TheApplication().GotoView(&quot;SIS OM Customer Account Portal View - Poste&quot;, boAccount);
            }
            TheApplication().SetSharedGlobal(&quot;sssAccId&quot;,&quot;&quot;);              	
		}
		
        if(strAccID!=&quot;&quot; &amp;&amp; sActiveView==&quot;PRM VF TR Account Detail (Interactions)&quot;)
		{
			bcAccountPRM.ClearToQuery ();
			bcAccountPRM.SetViewMode (AllView);
			bcAccountPRM.SetSearchSpec(&quot;Id&quot;, strAccID);
			bcAccountPRM.ExecuteQuery();
			if (bcAccountPRM.FirstRecord())
			{
				TheApplication().GotoView(&quot;PRM VF TR Account Detail (Interactions)&quot;, boAccountPRM);
			}    
			TheApplication().SetSharedGlobal(&quot;sssAccId&quot;,&quot;&quot;);
		}
		
		if(strSRID!=&quot;&quot; &amp;&amp; (sActiveView==&quot;VF Service Request Smart Script View&quot; || sActiveView==&quot;VF Service Request Detail View&quot; || sActiveView==&quot;VF PRM Service Request Detail View&quot;))
		{	
			bcSR.ClearToQuery ();
			bcSR.SetViewMode (AllView);
			bcSR.SetSearchSpec(&quot;Id&quot;, strSRID);
			bcSR.ExecuteQuery();
			if (bcSR.FirstRecord())
			{
				TheApplication().GotoView(sActiveView, boSR);
			}    
			else
			{
			  TheApplication().GotoView(sActiveView);
			}
			TheApplication().SetSharedGlobal(&quot;sssSRId&quot;,&quot;&quot;);
			TheApplication().SetSharedGlobal(&quot;sssBAId&quot;,&quot;&quot;);//DEF-1968
			TheApplication().SetSharedGlobal(&quot;sssAccId&quot;,&quot;&quot;);//DEF-1968
		}
		if(strSRID!=&quot;&quot; &amp;&amp; (sActiveView==&quot;PLW Service Request View - MyRequests&quot; || sActiveView==&quot;PLW Service Request View&quot; || sActiveView==&quot;PLW Service Request View All&quot;))
		{	
			bcVFSR.ClearToQuery ();
			bcVFSR.SetViewMode (AllView);
			bcVFSR.SetSearchSpec(&quot;Id&quot;, strSRID);
			bcVFSR.ExecuteQuery();
			if (bcVFSR.FirstRecord())
			{
				TheApplication().GotoView(sActiveView, boVFSR);
			}    
			else
			{
				TheApplication().GotoView(sActiveView);
			}
			TheApplication().SetSharedGlobal(&quot;sssSRId&quot;,&quot;&quot;);
			TheApplication().SetSharedGlobal(&quot;sssAccId&quot;,&quot;&quot;);//DEF-1968
		}
		if(strActID!=&quot;&quot; &amp;&amp; strSRID!=&quot;&quot; &amp;&amp; sActiveView==&quot;VF Campaign Activity View&quot;)
		{	
			bcAct.ClearToQuery ();
			bcAct.SetViewMode (AllView);
			bcAct.SetSearchSpec(&quot;Activity SR Id&quot;, strSRID);
			bcAct.ExecuteQuery();
			if (bcAct.FirstRecord())
			{
				TheApplication().GotoView(sActiveView, boAct);
			}    
			else
			{
				TheApplication().GotoView(sActiveView);
			}
			TheApplication().SetSharedGlobal(&quot;sssSRId&quot;,&quot;&quot;);
			TheApplication().SetSharedGlobal(&quot;sssActId&quot;,&quot;&quot;);
		}
		
		if(sBAId!=&quot;&quot; &amp;&amp; sActiveView==&quot;VF Billing Account Portal Summary View&quot;)
		{
		
			with(bcBA)
			{
				SetViewMode(AllView);
				ClearToQuery();
				SetSearchSpec(&quot;Id&quot;,sBAId);
				ExecuteQuery(ForwardOnly);
				if (FirstRecord())
				{
					TheApplication().GotoView(&quot;VF Billing Account Portal Summary View&quot;, boBA);
				}    
				else
				{
	 		 		TheApplication().GotoView(&quot;VF Billing Account Portal Summary View&quot;);
				}
			}
			TheApplication().SetSharedGlobal(&quot;sssBAId&quot;,&quot;&quot;);
			TheApplication().SetSharedGlobal(&quot;sssAccId&quot;,&quot;&quot;); //DEF-1968
		}
  

	    var sAssetId2 = TheApplication().GetProfileAttr(&quot;sssAssetId2&quot;);    

		if((sAssetId!=&quot;&quot; &amp;&amp; sActiveView==&quot;VF Subscriber Portal Summary View&quot;) || (sAssetId2!=&quot;&quot; &amp;&amp; sActiveView==&quot;VF Subscriber Portal Summary View&quot;))
		{
		   if (sAssetId ==&quot;&quot;) {
		        sAssetId=sAssetId2;
		        TheApplication().SetSharedGlobal(&quot;sssAssetId&quot;,sAssetId2);
		        
		        	}
		        
	
		        
			with(bcAsset)
			{
				SetViewMode(AllView);
				ClearToQuery();
				SetSearchSpec(&quot;Id&quot;,sAssetId);
				ExecuteQuery(ForwardOnly);
				if (FirstRecord())
				{
					TheApplication().GotoView(sActiveView, boAsset);
						       
				}    
				else
				{
	 		 		TheApplication().GotoView(&quot;VF Subscriber Portal Summary View&quot;);
				}
			}
			TheApplication().SetSharedGlobal(&quot;sssAssetId&quot;,&quot;&quot;);
			TheApplication().SetProfileAttr(&quot;sssAssetId2&quot;, 	&quot;&quot;);
			TheApplication().SetSharedGlobal(&quot;sssBAId&quot;,&quot;&quot;);//DEF-1968
			TheApplication().SetSharedGlobal(&quot;sssAccId&quot;,&quot;&quot;);//DEF-1968
		}
		
		
	}
		
	finally
	{
		bcAsset = null;
		boAsset = null;
		bcBA = null;
		boBA = null;
		bcSR = null;
		//IBM_TFERREIRA 20180116 DEF-24990 - Siebel Crash
		//boSR = null;
		bcVFSR = null;
		boVFSR = null;
		boSR = null;
		bcAccount = null;
		boAccount = null;
		bcAccountPRM = null;
		boAccountPRM =null;
	}
}"
			   SEQUENCE="43"
			   UPDATED="01/16/2018 14:31:45"
			   UPDATED_BY="IBM_TFERREIRA"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="RetrieveSIMTypeFromSIMAttributes"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function RetrieveSIMTypeFromSIMAttributes (Inputs, Outputs)
{
/* CR209... Paolo Canaletti
 * This code has been added in order to populate the SIM Type field 
 * on the MLI with the value stored in the SIM attribute for the 
 * post sales Order whit subtype Modify IMSI and Modify MSISD.
 */
	try
	{
	 	var Order_Id = Inputs.GetProperty (&quot;Order_Id&quot;);
		var SIMTypeAttr = &quot;&quot;;
		var SIMType = &quot;&quot;;
		var MLI_RowId = &quot;&quot;;
		var more_LI = &quot;&quot;
		var OrderSubType = &quot;&quot;;
		var ChangeICCIDStr   = TheApplication().InvokeMethod (&quot;LookupValue&quot;,&quot;ORDER_SUB_TYPE&quot;,&quot;103&quot;);

		if (Order_Id != null &amp;&amp; Order_Id != &quot;&quot;)
		{	
			var boOrderEntrySaless 	: BusObject = TheApplication().GetBusObject(&quot;Order Entry (Sales)&quot;);
			var bcOrders			: BusComp   = boOrderEntrySaless.GetBusComp(&quot;Order Entry - Orders&quot;)
			var bcOrderEntryLIs		: BusComp   = boOrderEntrySaless.GetBusComp(&quot;Order Entry - Line Items (Simple)&quot;);
			var bcOrderItemXAs		: BusComp   = boOrderEntrySaless.GetBusComp(&quot;Order Item XA (Simple)&quot;);
			var boOrderEntrySales	: BusObject = TheApplication().GetBusObject(&quot;VF_Auto_Order_RequestOnly_BO&quot;);
			var bcOrderEntryLI		: BusComp   = boOrderEntrySales.GetBusComp(&quot;HP Submit - Order Entry - Line Items&quot;);

			bcOrders.ClearToQuery ();
			bcOrders.SetViewMode (AllView);
			//VFTK Junaid 20120520 - Scripting 15 not needed as field is checked for null before search spec
			bcOrders.SetSearchSpec(&quot;Id&quot;, Order_Id);
			bcOrderEntryLIs.ClearToQuery ();
			bcOrderEntryLIs.SetViewMode (AllView);
			bcOrderEntryLIs.SetSearchSpec(&quot;Product Number&quot;, &quot;1000&quot;);
			bcOrderItemXAs.ClearToQuery();
			bcOrderItemXAs.SetViewMode(AllView);
			bcOrderItemXAs.SetSearchSpec(&quot;Name&quot;, &quot;MSISDN Type&quot;);
			bcOrders.ExecuteQuery (ForwardOnly);
			
			if(bcOrders.FirstRecord())
			{
				OrderSubType = bcOrders.GetFieldValue(&quot;Order Sub Type&quot;);
				
				more_LI = bcOrderEntryLIs.FirstRecord();
				
				while (more_LI)
				{
					MLI_RowId = bcOrderEntryLIs.GetFieldValue(&quot;Id&quot;);
					if(bcOrderItemXAs.FirstRecord())
					{
						SIMTypeAttr = bcOrderItemXAs.GetFieldValue(&quot;Value&quot;);
						SIMType = TheApplication ().InvokeMethod (&quot;LookupValue&quot;,&quot;VF_TWIN_SIM_TYPE&quot;, SIMTypeAttr);
						if(SIMType.length &gt; 0) {
							bcOrderEntryLI.ClearToQuery ();
							bcOrderEntryLI.SetViewMode (AllView);
							bcOrderEntryLI.ActivateField(&quot;SIM Card Type&quot;);
							bcOrderEntryLI.ActivateField(&quot;ICCID Check Done&quot;);
							bcOrderEntryLI.SetSearchSpec(&quot;Id&quot;, MLI_RowId);
							bcOrderEntryLI.ExecuteQuery (ForwardOnly);
							var bcOrderEntryLIisRecord = bcOrderEntryLI.FirstRecord();
							if(bcOrderEntryLIisRecord)
							{
								if(OrderSubType == ChangeICCIDStr) {
									bcOrderEntryLI.SetFieldValue(&quot;ICCID Check Done&quot;, &quot;N&quot;);
								}
								bcOrderEntryLI.SetFieldValue(&quot;SIM Card Type&quot;,  SIMType);
								bcOrderEntryLI.WriteRecord();
							}
						}
					}
					more_LI = bcOrderEntryLIs.NextRecord();
				}
			}
		}
		return (CancelOperation);
	} 
	finally 
	{
		bcOrderItemXAs = null;
		bcOrderEntryLIs = null;
		bcOrderEntryLI = null;
		bcOrders = null;
		boOrderEntrySaless = null;
		boOrderEntrySales = null;
	}//... CR209
}"
			   SEQUENCE="44"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="SearchMainContextOnDB"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function SearchMainContextOnDB(Inputs, Outputs)
{
/******************************************************************************
	* PRM 16/11/2011 : Created                                                  *
	* Description      : Manages the Search criteria for customer creation on task UI
	*                    depending on what the user has inserted it searches on DB and
	                     returns the row_id if something is found, null viceversa.
	******************************************************************************/
	try
	{
		var App = TheApplication();
		var isEBU = &quot;&quot;;
		var SearchBO : BusObject  = App.ActiveBusObject();
		var SearchBC : BusComp	  = SearchBO.GetBusComp(&quot;Account&quot;);
		var MainContBC : BusComp  = SearchBO.GetBusComp(&quot;VF TRK PRM Customer Search VBC&quot;);
		var Err : PropertySet     = App.NewPropertySet();
		var In : PropertySet     = App.NewPropertySet();
		var Out : PropertySet     = App.NewPropertySet();
		var ActTaxId = false;
		var CustAcq = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;ACCOUNT_STATUS&quot;,&quot;100&quot;);
		var CustAct = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;ACCOUNT_STATUS&quot;,&quot;95&quot;);
		
	    MainContBC.ActivateField(&quot;Account Type&quot;);
	    MainContBC.ActivateField(&quot;Account Id&quot;);
	    MainContBC.ActivateField(&quot;Account TCId&quot;);
	    MainContBC.ActivateField(&quot;Doc Number&quot;);
	    MainContBC.ActivateField(&quot;VF Tax Number&quot;);
	    MainContBC.ActivateField(&quot;Account Citizenship&quot;);
	    
	    // Get Fields
	    var CustomerId = MainContBC.GetFieldValue(&quot;Account Id&quot;);
		var TaxId = MainContBC.GetFieldValue(&quot;VF Tax Number&quot;);
	    var TcId = MainContBC.GetFieldValue(&quot;Account TCId&quot;);
		var PassportNo = MainContBC.GetFieldValue(&quot;Doc Number&quot;);
		var AccType= MainContBC.GetFieldValue(&quot;Account Type&quot;);
		var Citizen = MainContBC.GetFieldValue(&quot;Account Citizenship&quot;);	
		var MSISDN = MainContBC.GetFieldValue(&quot;VF MSISDN&quot;);
		
	    if(( TcId != &quot;&quot;) || (PassportNo != &quot;&quot;) || (CustomerId != &quot;&quot;) || (TaxId != &quot;&quot;))
	    {
	         with(SearchBC)
	         {
	    	   ClearToQuery ();
			   SetViewMode (AllView);
			   ActivateField(&quot;Market Class&quot;);
			   ActivateField(&quot;VF Contact Citizenship&quot;);
			   ActivateField(&quot;Account Status Code&quot;);
				//VFTK Junaid 20120520 - Scripting 15 not needed as null check on field present before search spec
				if (TcId != &quot;&quot;)
					SetSearchSpec(&quot;Contact SSN&quot;,TcId);
				if (PassportNo != &quot;&quot;)
					SearchBC.SetSearchSpec(&quot;Doc Number&quot;,PassportNo);
				if (CustomerId != &quot;&quot;)
					SetSearchSpec(&quot;CSN&quot;,CustomerId);
				if (TaxId != &quot;&quot;&amp;&amp; CustomerId == &quot;&quot;){
					    ActTaxId = true;
						SearchBC.SetSearchExpr(&quot;[VF Tax Number]= &apos;&quot;+TaxId+&quot;&apos; AND ([Account Status Code]=&apos;&quot;+CustAcq+&quot;&apos; OR [Account Status Code] = &apos;&quot;+CustAct+&quot;&apos;)&quot;);	
						}
				if (TaxId != &quot;&quot; &amp;&amp; CustomerId != &quot;&quot;)
						SearchBC.SetSearchSpec(&quot;VF Tax Number&quot;,TaxId);		
	
				RetryTax: ExecuteQuery(ForwardBackward);
				
				var len = CountRecords();//CountRecords() cannot be removed since based on count we are setting different search spec
				FirstRecord();
				if(len &gt;= 1)
				{
				   var AccSearchType = GetFieldValue(&quot;Market Class&quot;);
				   var AccCit = GetFieldValue(&quot;VF Contact Citizenship&quot;);
				   var AccId = GetFieldValue(&quot;Id&quot;);
				   var AccStatCode = GetFieldValue(&quot;Account Status Code&quot;);
				   isEBU = GetFieldValue(&quot;Market Type&quot;);
				   In.SetProperty(&quot;LOV&quot;,&quot;ACCOUNT_STATUS&quot;);
				   In.SetProperty(&quot;Val&quot;,AccStatCode);
				   LookupName(In,Out);
				   AccStatCode = Out.GetProperty(&quot;Name&quot;);
				   	//IF (enhancement to filter the EBU customers)	
					if ( isEBU == TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;CUSTOMER_CLASS&quot;,&quot;EBU&quot;))
					{
					Outputs.SetProperty(&quot;ErrorMessage&quot;, App.LookupMessage(&quot;VF Message Category&quot;,&quot;PRM_STA_CC_8&quot;));
					return(CancelOperation);
					}
				    //set profile attribute
				    App.SetProfileAttr(&quot;VFPRMSearchedAcc&quot;,AccId);
				    App.SetProfileAttr(&quot;VFPRMAccStatus&quot;,AccStatCode);
				    if(AccStatCode==&quot;70&quot; ||AccStatCode==&quot;50&quot;||AccStatCode==&quot;80&quot;||AccStatCode==&quot;90&quot;)
				    	 App.SetProfileAttr(&quot;IsNewRecord&quot;,&quot;N&quot;);
				    Outputs.SetProperty(&quot;ErrorMessage&quot;, &quot;NULL&quot;);
				    return(CancelOperation);
				}//if len==1
				if(len == 0)
				{
				if(ActTaxId) {
						    	ActTaxId = false;
						    	ClearToQuery ();
								SetViewMode (AllView);
								ActivateField(&quot;Org Id&quot;);
								ActivateField(&quot;VF Sub Class&quot;);
								SetSearchSpec(&quot;VF Tax Number&quot;,TaxId);
						    	goto RetryTax;
						    	}
						//customer not 
				      //set profile attributes
				      App.SetProfileAttr(&quot;VFPRMSearchedAcc&quot;,&quot;&quot;);
				      App.SetProfileAttr(&quot;VFPRMAccStatus&quot;,&quot;&quot;);
				      App.SetProfileAttr(&quot;VFPRMMarketClass&quot;,AccType);
				      App.SetProfileAttr(&quot;VFPRMTaxId&quot;,TaxId);
				      App.SetProfileAttr(&quot;VFPRMCitizenship&quot;,Citizen);
				      App.SetProfileAttr(&quot;VFPRMPassNo&quot;,PassportNo);
				      App.SetProfileAttr(&quot;VFPRMTCId&quot;,TcId);
				      App.SetProfileAttr(&quot;IsNewRecord&quot;,&quot;Y&quot;);
				      Outputs.SetProperty(&quot;ErrorMessage&quot;, &quot;NULL&quot;);
				      return(CancelOperation);
				      }
			}//end with
	    }//end if
	    					//search customer using MSISDN
		if (MSISDN != &quot;&quot;)
					{
					  //App.SetProfileAttr(&quot;GoToAccountAssetView&quot;, &quot;Y&quot;);
					  App.SetProfileAttr(&quot;MSISDNToSearch&quot;, MSISDN);
					  App.SetProfileAttr(&quot;IsNewRecord&quot;,&quot;N&quot;);//set to Y on task if not found
				      Outputs.SetProperty(&quot;ErrorMessage&quot;, &quot;NULL&quot;);
					}
						    
					return(CancelOperation);
	    
    }//try
	
  catch(e)
   {
		Outputs.SetProperty(&quot;ErrorMessage&quot;, e.toString());
   }

   finally
   {
		MainContBC = null;
		SearchBC = null;
	    App = null;
		Err = null;
		SearchBO = null;
		In= null;
		Out = null;
  }
  
 }"
			   SEQUENCE="45"
			   UPDATED="09/08/2014 19:08:09"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="SendNotificationEmail"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function SendNotificationEmail(Inputs,Outputs)
// method restored for TLGA-3928
{
	try
	{
		var svcOutboundCommunicationsManager = null;
		
		var psOCMInputs 		= null;
		var psOCMOutputs 		= null;
		
		var psTemplateInputs 	= null;
	    var psTemplateOutputs 	= null;
	
		var sFromAddress 		= null;
		var sMsgToList 			= null;
		var sMsgSubject 		= null;
		var sMsgBody 			= null;
		
		var strRowID 				= Inputs.GetProperty(&quot;RowId&quot;);
		var strCommTemplateName 	= Inputs.GetProperty(&quot;CommTemplateName&quot;);
		var strLOVType 				= Inputs.GetProperty(&quot;LOVType&quot;);
		var strFromAddress			= Inputs.GetProperty(&quot;FromAddress&quot;);
		var strToAddress 			= Inputs.GetProperty(&quot;ToAddress&quot;);
		var strSourceBusObj 		= Inputs.GetProperty(&quot;SourceBusObj&quot;);
	
		psOCMOutputs 		= TheApplication().NewPropertySet();
		psTemplateOutputs 	= TheApplication().NewPropertySet();
		
		svcOutboundCommunicationsManager = TheApplication().GetService(&quot;Outbound Communications Manager&quot;);
		
		sFromAddress	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,strLOVType,strFromAddress);
		sMsgToList 		= TheApplication().InvokeMethod(&quot;LookupValue&quot;,strLOVType,strToAddress);
		
		var boparameter : BusObject = TheApplication().GetBusObject(strSourceBusObj);
		var bcparameter : BusComp = boparameter.GetBusComp(&quot;Billing Account&quot;);
	
		bcparameter.ActivateField(&quot;Parent Account Id&quot;);
	
		bcparameter.ClearToQuery();
		bcparameter.SetSearchSpec(&quot;Id&quot;,strRowID);
		bcparameter.ExecuteQuery(ForwardOnly);
		
		if(bcparameter.FirstRecord())
		{
			var strParentRowID = bcparameter.GetFieldValue(&quot;Parent Account Id&quot;);
		}
		else
		{
			//alert(&quot;Parent Row Id of Billing Account BC can not be found!&quot;);
			//RLOURENCO - VFTRCBU-12191 - replaced alert with RaiseError
			TheApplication().RaiseErrorText(&quot;Parent Row Id of Billing Account BC can not be found!&quot;);
			return (CancelOperation);
		}

		psTemplateInputs = TheApplication().NewPropertySet(); 
		psTemplateInputs.SetProperty(&quot;CommTemplateName&quot;, strCommTemplateName);
		psTemplateInputs.SetProperty(&quot;SourceId&quot;, strParentRowID);
		psTemplateInputs.SetProperty(&quot;SourceBusObj&quot;,strSourceBusObj);
		psTemplateInputs.SetProperty(&quot;Recipid&quot;,&quot;&quot;);
		psTemplateInputs.SetProperty(&quot;RecipBusComp&quot;,&quot;&quot;);
		
		svcOutboundCommunicationsManager.InvokeMethod(&quot;ExpandCommTemplate&quot;, psTemplateInputs, psTemplateOutputs);
		sMsgSubject = psTemplateOutputs.GetProperty(&quot;ExpandedSubject&quot;);
		sMsgBody	= psTemplateOutputs.GetProperty(&quot;ExpandedText&quot;);
		
		psOCMInputs = TheApplication().NewPropertySet();                      
		psOCMInputs.SetProperty(&quot;FromAddress&quot;, sFromAddress);
		psOCMInputs.SetProperty(&quot;MsgToList&quot;, sMsgToList);
		psOCMInputs.SetProperty(&quot;MsgSubject&quot;, sMsgSubject); 
		psOCMInputs.SetProperty(&quot;MsgBody&quot;, sMsgBody);

		svcOutboundCommunicationsManager.InvokeMethod(&quot;SendSmtpMessage&quot;, psOCMInputs, psOCMOutputs);	
	}
	
	finally
	{
		svcOutboundCommunicationsManager 	= null;
		psOCMInputs 						= null;
		psOCMOutputs 						= null;
		sFromAddress 						= null;
		sMsgToList 							= null;
		sMsgSubject 						= null;
		sMsgBody 							= null;
		strRowID 							= null;
		strCommTemplateName 				= null;
		strLOVType 							= null;
		strFromAddress						= null;
		strToAddress 						= null;
		strSourceBusObj 					= null;
	}
}"
			   SEQUENCE="46"
			   UPDATED="08/02/2015 21:18:38"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreCanInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreCanInvokeMethod (MethodName, &amp;CanInvoke)
{
    if(MethodName = &quot;LookupName&quot;) CanInvoke = &apos;TRUE&apos;;
	return (ContinueOperation);
}"
			   SEQUENCE="51"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreInvokeMethod (MethodName, Inputs, Outputs)
{
	switch (MethodName)
	{ 
	    case &quot;RefreshSmartScriptContext&quot;:
			RefreshSmartScriptContext(Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;CalcExempFlag&quot;:
			CalcExempFlag(Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;CompareDate&quot;:
			CompareDate(Inputs, Outputs);
			return (CancelOperation);
			break;				
		case &quot;KpiLogging&quot;:
			KpiLogging (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;LoadGrantMatrix&quot;:
			LoadGrantMatrix (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;LogInputs&quot;:
			LogInputs (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;ModifyOrderFormTaskUI&quot;:
			ModifyOrderFormTaskUI (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;ChangeDateToEAI&quot;:
			ChangeDateToEAI (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;GetProductPortId&quot;:
			GetProductPortId (Inputs,Outputs);
			return (CancelOperation);
			break;
		case &quot;SubmitOrder&quot;:
			SubmitOrder (Inputs, Outputs);
			return (CancelOperation);
			break;	
		case &quot;CreateModifyOrder&quot;:
			CreateModifyOrder (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;HandleEAIResponse&quot;:
			HandleEAIResponse (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;ExtractValueFromXML&quot;:
			ExtractValueFromXML (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;CopyUpdateLineItems&quot;:
			CopyUpdateLineItems (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;GetLookupMsg&quot;:
			GetLookupMsg (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;ExtractAttribValue&quot;:
			ExtractAttribValue (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;ModifyAttribValue&quot;:
			ModifyAttribValue (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;GetRaiseErrorMsg&quot;:
			GetRaiseErrorMsg (Inputs, Outputs);
			return (CancelOperation);
			break;		
		case &quot;PopulateOrderAttrOldVal&quot;:
			PopulateOrderAttrOldVal (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;LogWorkflowErrors&quot;:
			LogWorkflowErrors (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;DateToString&quot;:
			DateToString (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;ExtractAttribValue_Id&quot;:
			ExtractAttribValue_Id (Inputs, Outputs);
			return (CancelOperation);
			break;	
		case &quot;FocusOnRecord&quot;:
			FocusOnRecord (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;CheckCreateModifyOrder&quot;:
			CheckCreateModifyOrder (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;CheckSubmitOrder&quot;:
			CheckSubmitOrder (Inputs, Outputs);
			return (CancelOperation);
			break;			
		case &quot;GetAssetIntegrationId&quot;:
			GetAssetIntegrationId (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;CreateSR&quot;:
			CreateSR (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;CreateInteraction&quot;:
			CreateInteraction (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;CreateMernisSR&quot;:
			CreateMernisSR (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;GetParameter&quot;:
			GetParameter (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;GetParameter_3Inputs&quot;:
			GetParameter_3Inputs (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;TranslateVariable&quot;:
			TranslateVariable (Inputs, Outputs);
			return (CancelOperation);
			break;	
		case &quot;PopulateModifyOrderId&quot;:
			PopulateModifyOrderId (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;PopulateModifyOrderId2&quot;:
			PopulateModifyOrderId2 (Inputs, Outputs);
			return (CancelOperation);
			break;
		case &quot;Holidays_Validation&quot;:
			Holidays_Validation (Inputs, Outputs);
			return(CancelOperation);
			break;	
		case &quot;GetPositionType&quot;:
			GetPositionType (Inputs, Outputs);
			return(CancelOperation);
			break;	
		case &quot;LookupName&quot;:
			LookupName (Inputs, Outputs);
			return(CancelOperation);
			break;	
		case &quot;PopulateOrderFieldsBasedOnReason&quot;:
			PopulateOrderFieldsBasedOnReason();
			return(CancelOperation);
			break;	
		case &quot;SearchMainContextOnDB&quot;:
			SearchMainContextOnDB(Inputs, Outputs);
			return(CancelOperation);
			break;	
		case &quot;RetrieveSIMTypeFromSIMAttributes&quot;:
			RetrieveSIMTypeFromSIMAttributes(Inputs, Outputs);
			return(CancelOperation);
			break;			
		case &quot;IsViewReadOnly&quot;:
		    ReadOnlyView(Inputs,Outputs);
		    return(CancelOperation);
		    break;
		case &quot;CheckParams&quot;:
			CheckParams(Inputs, Outputs);
			return(CancelOperation);
		    break;
		case &quot;GetWarningMessage&quot;:
			GetWarningMessage(Inputs, Outputs);
			return(CancelOperation);
		    break;
		case &quot;SendNotificationEmail&quot;: // CR528-Dunning
            SendNotificationEmail(Inputs, Outputs);
            return(CancelOperation);
            break;
	    case &quot;SetProfileAttr&quot;: // CR528-Dunning
            SetProfileAttr(Inputs, Outputs);
            return(CancelOperation);
            break;			
	}
	return (ContinueOperation);
}"
			   SEQUENCE="52"
			   UPDATED="08/18/2014 22:19:14"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="SetItemOrganization"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function SetItemOrganization (Inputs,Outputs)
{		
  try
  {
	var booMVGRecordExists;
		
	var SRId = Inputs.GetProperty(&quot;Service Request Id&quot;);
	var OrgId = Inputs.GetProperty(&quot;Organization Id&quot;);
	var inProp  :PropertySet	= TheApplication().NewPropertySet();
	var outProp :PropertySet	= TheApplication().NewPropertySet();
	var BS 		:Service		= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
	var boSR   :BusObject=  TheApplication().GetBusObject(&quot;Service Request&quot;); 
	var bcSR   :BusComp  =  boSR.GetBusComp(&quot;Service Request&quot;);
	var bcMVGOrganization :BusComp;
	var bcAssocOrganization :BusComp;
		
	var j;	
	
	bcSR.ClearToQuery ();
	bcSR.SetViewMode(AllView);
	bcSR.ActivateField (&quot;Organization&quot;);
	bcSR.ActivateField (&quot;Id&quot;);
	// Begin: Review Input validation: Scripting 15 null check Added 17may2012 Udbhav IDC
	inProp.SetProperty(&quot;SRId&quot;,SRId);
	BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp);
	//End 
	bcSR.SetSearchSpec (&quot;Id&quot;, SRId);
	bcSR.ExecuteQuery(ForwardOnly);

	j = bcSR.FirstRecord();
	   
	if (j != 0)
	{
	  bcMVGOrganization = bcSR.GetMVGBusComp (&quot;Organization&quot;);
	  bcAssocOrganization = bcSR.GetMVGBusComp (&quot;Organization&quot;).GetAssocBusComp();
	  bcAssocOrganization.ActivateField(&quot;Id&quot;);
	  // Begin:Scripting 15 null check Added 16may2012 Udbhav IDC
	  inProp = TheApplication().NewPropertySet();
	  inProp.SetProperty(&quot;OrgId&quot;,OrgId);
	  BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp);
	  //End
	  bcAssocOrganization.SetSearchExpr (&quot;[Id] = &apos;&quot;+OrgId+&quot;&apos;&quot;);
	  bcAssocOrganization.ExecuteQuery(ForwardOnly);
			
	  if (bcAssocOrganization.FirstRecord ())
	  {
//		try    	// JIRA-14863:20150811:this try is strangley throwing an exception , but even if it wasn&apos;t, it&apos;s doing nothing as it was 
//		{		// JIRA-14863:20150811:
		  try	
		  {		
			bcAssocOrganization.Associate (NewBefore);
		  }
		  catch(e) {}		

		  booMVGRecordExists = bcMVGOrganization.FirstRecord();	
		  while (booMVGRecordExists)
		  {
			if (bcMVGOrganization.GetFieldValue (&quot;Id&quot;) == OrgId)
			{
			  bcMVGOrganization.SetFieldValue (&quot;SSA Primary Field&quot;, &quot;Y&quot;);
			  bcMVGOrganization.WriteRecord ();
			  bcSR.WriteRecord();
			}
		    booMVGRecordExists = bcMVGOrganization.NextRecord ();
		  }
//		}		// JIRA-14863:20150811:
	  }   				
	}//if j
	return (CancelOperation);
  }
  finally
  {
	//LS The variables are set to null as per VF Feedback 24/10/2011
	bcAssocOrganization =null;
	bcMVGOrganization   =null;
	bcSR                =null;
	boSR                =null;
	inProp 	= null;
	outProp = null;
	BS 		= null;
  }
}"
			   SEQUENCE="47"
			   UPDATED="10/12/2015 11:09:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="SetProfileAttr"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function SetProfileAttr(Inputs,Outputs)
{

var PAname = Inputs.GetProperty(&quot;PAName&quot;);
var PAValue = Inputs.GetProperty(&quot;PAValue&quot;);

TheApplication().SetProfileAttr(PAname,PAValue);
return;

}"
			   SEQUENCE="48"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="SubmitOrder"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function SubmitOrder (Inputs, Outputs)
{
	/************************************************************************************
	* ACS AD 26-Jul-06 : Created                                                        *
	* Description      : This script takes the Order Id as input and submits the said   *
	*                    order if its status is &apos;Pending&apos;.                              *
	************************************************************************************/
	try
	{
		TheApplication().SetProfileAttr(&quot;ACS Webservice Call&quot;,&quot;Y&quot;);
		
		var strOrderId     = Inputs.GetProperty (&quot;OrderId&quot;);
		//VFTK Junaid 20120520 - Added for Oracle Review 15
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var BS :Service 			= TheApplication().GetService(&quot;VF TRK Utilities&quot;);
		inProp.SetProperty(&quot;strOrderId&quot;, strOrderId); 
		BS.InvokeMethod(&quot;Input Validation&quot;,inProp, outProp); 
		//End

		var strOrderStatus = &quot;&quot;;
		
		var psInputs :PropertySet     = TheApplication().NewPropertySet();
		var psOutputs :PropertySet    = TheApplication().NewPropertySet();
		
		var bsWorkflowProcMgr : Service = TheApplication().GetService(&quot;Workflow Process Manager&quot;);
		
		var booOrderExists;
		
		//Initialize the BO and BC
    	var boOrder :BusObject  = TheApplication().GetBusObject(&quot;Order Entry (Sales)&quot;);
    	var bcOrder :BusComp    = boOrder.GetBusComp(&quot;Order Entry - Orders&quot;);
		var bcOrderItem :BusComp = boOrder.GetBusComp(&quot;Order Entry - Line Items&quot;);
		
		//Query for Order
		bcOrder.ClearToQuery();
		bcOrder.SetViewMode(AllView);
		bcOrder.ActivateField(&quot;Status&quot;);
		bcOrder.SetSearchSpec (&quot;Id&quot;, strOrderId);
			bcOrderItem.ClearToQuery();
			bcOrderItem.SetViewMode(AllView);//Scripting 31: Removed ExecuteQuery on child BC since there is link
    	bcOrder.ExecuteQuery(ForwardOnly); //Vaibhav 28/03/2012: Added parameter as per oracle review
		
		booOrderExists = bcOrder.FirstRecord();
		
		if (booOrderExists)
		{	
			strOrderStatus = bcOrder.GetFieldValue (&quot;Status&quot;);
			if (strOrderStatus != &quot;Pending&quot; &amp;&amp; strOrderStatus != &quot;Error&quot; &amp;&amp; strOrderStatus != &quot;Submitted-Pending&quot;)
			{
				TheApplication().RaiseErrorText (&quot;Orders with status &quot;+strOrderStatus+&quot; cannot be submitted&quot;);
			}
		
			//If Item exists, call reprice signal
			if (bcOrderItem.FirstRecord())
    		{
				bcOrderItem.InvokeMethod(&quot;CalculatePriceAll&quot;);
			}
    	}
    	 
    	//Call the &apos;XWF SIS OM Submit Order Process&apos; WF for Order Submit with
    	//&apos;OrderID&apos; as input parameter
	
		psInputs.SetProperty(&quot;ProcessName&quot;, &quot;XWF SIS OM Submit Order Process&quot;);
		psInputs.SetProperty(&quot;Object Id&quot;, strOrderId);
		psInputs.SetProperty(&quot;Popup Message&quot;, &quot;N&quot;);
	
		bsWorkflowProcMgr.InvokeMethod(&quot;RunProcess&quot;,psInputs,psOutputs);
		
		//Populate the output values
		Outputs.SetProperty(&quot;ErrorMessage&quot;, &quot;&quot;);
		Outputs.SetProperty(&quot;StatusCode&quot;, &quot;0&quot;);
		Outputs.SetProperty(&quot;ErrorCode&quot;, &quot;0&quot;);
	}
	catch (e)
	{
		Outputs.SetProperty (&quot;StatusCode&quot;, &quot;1&quot;);
		Outputs.SetProperty (&quot;ErrorCode&quot;, &quot;1&quot;);
		Outputs.SetProperty (&quot;ErrorMessage&quot;, e.toString ());
	}
	finally
	{
		psInputs          = null;
		psOutputs         = null;
		bsWorkflowProcMgr = null;
    	bcOrder           = null;
		bcOrderItem       = null;
	   	boOrder           = null;
		inProp = null;
		outProp = null;
		BS = null;
	}
}"
			   SEQUENCE="49"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="TranslateVariable"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="/**************************************************************************
	Name 		: Marek Vala                                                              
	Description : Translate Value stored in the variable based on Language
	Inputs		: LOV Type, LIC
	Outputs		: Value
	Date 		: 21/08/2006                                 	
**************************************************************************/
function TranslateVariable (Inputs, Outputs)
{

		var strType	= Inputs.GetProperty(&quot;LOVType&quot;);
		var strLIC = Inputs.GetProperty(&quot;LIC&quot;);
		
		var strValue = TheApplication().InvokeMethod(&quot;LookupValue&quot;,strType,strLIC);
		
		Outputs.SetProperty(&quot;Value&quot;,strValue);
		

}"
			   SEQUENCE="50"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="debundleML"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function debundleML (strOrderId)
{
try
{
	var boOrderEntry : BusObject  = TheApplication().GetBusObject(&quot;Order Entry (No Link)&quot;);
	var bcOrderItem : BusComp  = boOrderEntry.GetBusComp(&quot;Order Entry - Line Items (Simple)&quot;);
	var nextRecord = null;
	var strDeleteAction  = TheApplication().InvokeMethod (&quot;LookupValue&quot;,&quot;DELTA_ACTION_CODE&quot;,&quot;Deleted&quot;);
	
	bcOrderItem.ClearToQuery();
	bcOrderItem.SetViewMode(AllView);
	bcOrderItem.ActivateField(&quot;Id&quot;);
	bcOrderItem.ActivateField(&quot;Asset Integration Id&quot;);
	bcOrderItem.ActivateField(&quot;Order Header Id&quot;);
	bcOrderItem.ActivateField(&quot;Root Order Item Id&quot;);
	bcOrderItem.SetSearchSpec(&quot;Order Header Id&quot;, strOrderId);
	//bcOrderItem.SetSearchSpec(&quot;Root Order Item Id&quot;,&quot;[Id]&quot;);
	bcOrderItem.SetSearchSpec(&quot;VF Product Type&quot;,&quot;HANDSET PROMO&quot;);
	bcOrderItem.SetSearchSpec(&quot;Action Code&quot;,strDeleteAction);	
    bcOrderItem.ExecuteQuery(ForwardOnly);
	
	nextRecord = bcOrderItem.FirstRecord();
	
	if(nextRecord)
	{
		bcOrderItem.ClearToQuery();
		bcOrderItem.SetViewMode(AllView);
		bcOrderItem.ActivateField(&quot;Id&quot;);
		bcOrderItem.ActivateField(&quot;Asset Integration Id&quot;);
		bcOrderItem.ActivateField(&quot;Order Header Id&quot;);
		bcOrderItem.ActivateField(&quot;Root Order Item Id&quot;);
		bcOrderItem.ActivateField(&quot;Prod Prom Id&quot;);
		bcOrderItem.ActivateField(&quot;Prod Prom Instance Id&quot;);
		bcOrderItem.ActivateField(&quot;VF Required Config Flag&quot;);
		bcOrderItem.ActivateField(&quot;Action Code&quot;);		
		bcOrderItem.SetSearchSpec(&quot;Order Header Id&quot;, strOrderId);
		bcOrderItem.SetSearchSpec(&quot;Root Order Item Id&quot;,&quot;[Id]&quot;);
		bcOrderItem.SetSearchSpec(&quot;Part Number&quot;,&quot;1000&quot;);	
	    bcOrderItem.ExecuteQuery(ForwardOnly);
	    
		nextRecord = bcOrderItem.FirstRecord();
		
		if(nextRecord)
		{		
			bcOrderItem.SetFieldValue(&quot;Prod Prom Id&quot;,&quot;&quot;);
			bcOrderItem.SetFieldValue(&quot;Prod Prom Instance Id&quot;,&quot;&quot;);	
			if(bcOrderItem.GetFieldValue(&quot;Action Code&quot;) != strDeleteAction) 
				bcOrderItem.SetFieldValue(&quot;VF Required Config Flag&quot;,&quot;Y&quot;);
			else bcOrderItem.SetFieldValue(&quot;VF Required Config Flag&quot;,&quot;N&quot;);				
			bcOrderItem.WriteRecord();			
		}//Ending while
	}
}//Ending try
	catch(e)
	{
	}
	finally
	{
		bcOrderItem = null;
		boOrderEntry = null;
	}

}"
			   SEQUENCE="15"
			   UPDATED="05/06/2014 13:59:08"
			   UPDATED_BY="SADMIN"
			   CREATED="04/30/2014 20:10:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
		</BUSINESS_SERVICE>
	</PROJECT>
</REPOSITORY>



