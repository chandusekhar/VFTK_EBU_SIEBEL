<?xml version="1.0" encoding="UTF-8"?>
<REPOSITORY
   COMMENTS="Siebel 8.1.1.11 repository"
   NAME="Siebel Repository"
   UPDATED="06/17/2014 13:50:12"
   UPDATED_BY="SADMIN"
   CREATED="06/06/2014 19:53:48"
   CREATED_BY="SADMIN"
   FIO_PLACEHOLDER_FIO="TRUE">
	<PROJECT
	   ALLOW_OBJECT_LOCKING="Y"
	   COMMENTS="WA#39  DG - 3/7/14"
	   INACTIVE="N"
	   LOCKED="N"
	   NAME="TELCO Order Management"
	   UI_FREEZE="N"
	   UPDATED="08/26/2016 16:17:06"
	   UPDATED_BY="1-KD89OX"
	   CREATED="07/03/2014 18:50:51"
	   CREATED_BY="1-KBRP64"
	   FIO_PLACEHOLDER_FIO="TRUE">
		<BUSINESS_SERVICE
		   CACHE="N"
		   CLASS="CSSService"
		   EXTERNAL_USE="Y"
		   HIDDEN="N"
		   INACTIVE="N"
		   NAME="TELCO Generic Utilities"
		   OBJECT_LOCKED="N"
		   SERVER_ENABLED="N"
		   STATE_MANAGEMENT_TYPE="Stateful"
		   WEB_SERVICE_ENABLED="N"
		   UPDATED="04/04/2017 18:21:19"
		   UPDATED_BY="SNOIVO"
		   CREATED="07/22/2014 15:34:19"
		   CREATED_BY="1-KBRSNM">
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="BROTASC - 2008/04/09 - VFPT_UPG_325"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="BuildCompleteAddress"
			   UPDATED="07/22/2014 15:34:20"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:19"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Address1"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Address2"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Address3"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CompleteAddress"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ACAMBAS - WA#31: VFTRCBU-9547"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="BuildSiebelURL"
			   UPDATED="10/02/2015 12:20:37"
			   UPDATED_BY="ACAMBAS"
			   CREATED="10/01/2015 18:49:00"
			   CREATED_BY="ACAMBAS">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SWEApplet"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="10/02/2015 12:20:33"
				   UPDATED_BY="ACAMBAS"
				   CREATED="10/01/2015 19:04:19"
				   CREATED_BY="ACAMBAS">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SWECmd"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="10/02/2015 12:20:35"
				   UPDATED_BY="ACAMBAS"
				   CREATED="10/02/2015 12:19:52"
				   CREATED_BY="ACAMBAS">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SWERowId"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="10/02/2015 12:20:21"
				   UPDATED_BY="ACAMBAS"
				   CREATED="10/01/2015 19:05:14"
				   CREATED_BY="ACAMBAS">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SWEView"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="10/02/2015 12:20:37"
				   UPDATED_BY="ACAMBAS"
				   CREATED="10/01/2015 19:05:17"
				   CREATED_BY="ACAMBAS">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="URL"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="10/01/2015 19:04:11"
				   UPDATED_BY="ACAMBAS"
				   CREATED="10/01/2015 19:04:11"
				   CREATED_BY="ACAMBAS">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="BAPTISTAR - 20080430 - WA#20 WriteOffs"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CheckOneMonth"
			   UPDATED="07/22/2014 15:34:20"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:20"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Date1"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Date2"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LessThanOneMonth"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="EvalRegExp"
			   UPDATED="07/22/2014 15:34:21"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:20"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="IsValid"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Pattern"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Value"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:20"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:20"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="BAPTISTAR - 20080430 - WA#20 WriteOffs"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ExistSubString"
			   UPDATED="07/22/2014 15:34:21"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:21"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ExistString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:21"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:21"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="MainString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:21"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:21"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SubString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:21"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:21"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetEnvironmentVariable"
			   UPDATED="07/22/2014 15:34:21"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:21"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:21"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:21"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Value"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:21"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:21"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="FERREIRAM - 26.12.07 - VFPT_UPG - TELCO Loaders"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetLOV"
			   UPDATED="07/22/2014 15:34:22"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:21"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   COMMENTS="FERREIRAM - 26.12.07 - VFPT_UPG - TELCO Loaders"
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ErrorCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:21"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:21"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   COMMENTS="FERREIRAM - 26.12.07 - VFPT_UPG - TELCO Loaders"
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FieldQuery"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:21"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:21"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   COMMENTS="RIBEIROC - WA#20 - Refunds"
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="QueryResult"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:22"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:22"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   COMMENTS="FERREIRAM - 26.12.07 - VFPT_UPG - TELCO Loaders"
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SearchExpression"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:22"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:22"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetRandomBoolean"
			   UPDATED="07/22/2014 15:34:22"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:22"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Result"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:22"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:22"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="BM: 20110426"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetStringDigits"
			   UPDATED="07/22/2014 15:34:23"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:22"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="NewString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:22"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:22"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OldString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="VFTRCBU-34445 - CJANEIRO"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetSystemPreference"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="11/10/2016 11:09:54"
			   CREATED_BY="ESANTOS">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="11/10/2016 11:09:54"
				   UPDATED_BY="ESANTOS"
				   CREATED="11/10/2016 11:09:54"
				   CREATED_BY="ESANTOS">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Value"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="11/10/2016 11:09:54"
				   UPDATED_BY="ESANTOS"
				   CREATED="11/10/2016 11:09:54"
				   CREATED_BY="ESANTOS">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetUserViewAccessInfo"
			   UPDATED="07/22/2014 15:34:23"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:23"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="UserHasAccess"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="UserHasROAccess"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="UserName"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ViewName"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="IsEmail"
			   UPDATED="07/22/2014 15:34:23"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:23"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FieldValue"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="IsValid"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="MOREIRAM - 20081106 - WA#03 Contact Management"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="IsHigherPosition"
			   UPDATED="07/22/2014 15:34:23"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:23"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="IsNumeric"
			   UPDATED="07/22/2014 15:34:23"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:23"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FieldValue"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="IsValid"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:23"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:23"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="Len"
			   UPDATED="07/22/2014 15:34:24"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:23"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FieldValue"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:24"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:24"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="IsValid"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:24"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:24"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="MaxLength"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:24"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:24"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="VAZJ - 13.05.2008 WA6"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ReplaceCRLF"
			   UPDATED="07/22/2014 15:34:24"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:24"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FinalString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:24"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:24"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Global"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:24"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:24"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OriginalString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:24"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:24"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SubstituteString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:24"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:24"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ReplaceString"
			   UPDATED="07/22/2014 15:34:25"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:24"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="&lt;value&gt;"
				   OPTIONAL="N"
				   STORAGE_TYPE="Value"
				   TYPE="Input / Output"
				   UPDATED="07/22/2014 15:34:24"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:24"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FindString"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ReplaceAll"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ReplaceWith"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ReturnUpperCase"
			   UPDATED="07/22/2014 15:34:25"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:25"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Results"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Val1"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="FCARRIL"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="RoundNumber"
			   UPDATED="02/04/2016 19:21:04"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="02/04/2016 19:20:17"
			   CREATED_BY="1-KBRQVI">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="RoundedAmount"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="02/04/2016 19:20:45"
				   UPDATED_BY="1-KBRQVI"
				   CREATED="02/04/2016 19:20:45"
				   CREATED_BY="1-KBRQVI">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="amount"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="02/04/2016 19:20:31"
				   UPDATED_BY="1-KBRQVI"
				   CREATED="02/04/2016 19:20:31"
				   CREATED_BY="1-KBRQVI">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="TransformAmount"
			   UPDATED="07/22/2014 15:34:26"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:25"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Amount"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FromChar"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ToChar"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="TransfAmount"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:25"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:25"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ValidateNIF"
			   UPDATED="07/22/2014 15:34:26"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:26"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="strNIF"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:26"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:26"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="validNIF"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/22/2014 15:34:26"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:26"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="WriteToFile"
			   UPDATED="07/22/2014 15:34:26"
			   UPDATED_BY="1-KBRSNM"
			   CREATED="07/22/2014 15:34:26"
			   CREATED_BY="1-KBRSNM">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="DestinationFile"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:26"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:26"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="TextToWrite"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/22/2014 15:34:26"
				   UPDATED_BY="1-KBRSNM"
				   CREATED="07/22/2014 15:34:26"
				   CREATED_BY="1-KBRSNM">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="BuildCompleteAddress"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function BuildCompleteAddress(Inputs:PropertySet, Outputs:PropertySet)
{
	var addrComplete:String;
	var addr1:String = Inputs.GetProperty(&quot;Address1&quot;);
	var addr2:String = Inputs.GetProperty(&quot;Address2&quot;);
	var addr3:String = Inputs.GetProperty(&quot;Address3&quot;);
	
	addrComplete = addr1 + &quot; &quot; + addr2 + &quot; &quot; + addr3;
	
	Outputs.SetProperty(&quot;CompleteAddress&quot;, addrComplete);
}"
			   SEQUENCE="1"
			   UPDATED="02/04/2016 18:29:13"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="07/22/2014 15:34:26"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="BuildSiebelURL"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function BuildSiebelURL(Inputs, Outputs)
{
	//ACAMBAS: Needs to be extended to work for commands different from gotoview
	
	
	try
	{
		var sSWECmd = Inputs.GetProperty(&quot;SWECmd&quot;);
		var sSWEView = Inputs.GetProperty(&quot;SWEView&quot;);
		var sSWEApplet = Inputs.GetProperty(&quot;SWEApplet&quot;);
		var sSWERowId = Inputs.GetProperty(&quot;SWERowId&quot;);
		var sBaseURL;
		var sURLParameters;
		var sURL;
		var sPRMWebSrv;
		
		
		/*
		var oBS = TheApplication().GetService(&quot;Web Engine HTTP TXN&quot;);
		var oInputs = TheApplication().NewPropertySet();
		var oOutputs = TheApplication().NewPropertySet();

		//Invoke vanilla BS to get the base URL
		oBS.InvokeMethod(&quot;GetAllServerVariables&quot;, oInputs, oOutputs);
							
		sBaseURL = oOutputs.GetProperty(&quot;REQUEST_URL&quot;);
		*/
		
		
		//SNOIVO: DEF-17167 -- START

		sPRMWebSrv = TheApplication().InvokeMethod(&quot;LookupValue&quot;, &quot;VFTRCBU_WEB_SRV&quot;, &quot;VFTRCBU_PRM_WEB_SRV&quot;);
					
		sBaseURL = &quot;https://&quot; + sPRMWebSrv + &quot;/prmportal_trk/start.swe&quot;;
	
		//SNOIVO: DEF-17167 -- FINISH
		
		
		sURLParameters = &quot;?SWECmd=&quot; + sSWECmd + &quot;&amp;SWEView=&quot; + sSWEView + &quot;&amp;SWEApplet0=&quot; + sSWEApplet + &quot;&amp;SWEBU=1&amp;SWERowId0=&quot; + sSWERowId;
					
		sURL = sBaseURL + sURLParameters;
	
	
		//Set Output
		Outputs.SetProperty(&quot;URL&quot;, sURL);
		
	}
	finally
	{
	}
	
	/*{
		oBS = null;
		oInputs = null;
		oOutputs = null;
	}*/
	
}"
			   SEQUENCE="2"
			   UPDATED="04/04/2017 18:20:56"
			   UPDATED_BY="SNOIVO"
			   CREATED="10/02/2015 12:21:32"
			   CREATED_BY="ACAMBAS">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CallBSWrapper"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CallBSWrapper (Inputs, Outputs)
{
	try
	{
	// Instantiate variables ************************************************************************
		var XOrderbo :BusObject = TheApplication().GetBusObject(&quot;X Order Entry&quot;);				
		var ControlDetbc :BusComp = XOrderbo.GetBusComp(&quot;VF Controls Details&quot;);
		var ControlParbc :BusComp = XOrderbo.GetBusComp(&quot;VF Controls Parameters&quot;);
		var oBS = TheApplication().GetService(&quot;TELCO BusComp Utils&quot;);
		var BS = TheApplication().GetService(&quot;ABO Bulk Request Processing Service&quot;);
		var wkfBS = TheApplication().GetService(&quot;Workflow Process Manager&quot;);
		var controlDetId = Inputs.GetProperty(&quot;ControlDetId&quot;);
		var methodName = Inputs.GetProperty(&quot;Method Name&quot;);
		var serviceName = Inputs.GetProperty(&quot;Service Name&quot;);
		var exceptionFlag = Inputs.GetProperty(&quot;Exception Flag&quot;);
		var orderItemId = Inputs.GetProperty(&quot;OrderItemId&quot;);
		var processName = Inputs.GetProperty(&quot;ProcessName&quot;);
		var VFParamType;
		var VFParamName;
		var VFParamValue;
		var inPropSet = TheApplication().NewPropertySet();
		var oInputs = TheApplication().NewPropertySet();
		var oOutputs = TheApplication().NewPropertySet();
		inPropSet.SetProperty(&quot;Method Name&quot;, methodName);
		inPropSet.SetProperty(&quot;Service Name&quot;, serviceName);
		inPropSet.SetProperty(&quot;Exception Flag&quot;, exceptionFlag);

		ControlDetbc.SetViewMode(AllView);
		ControlDetbc.ClearToQuery();
		ControlDetbc.SetSearchSpec(&quot;Control Detail Id&quot;, controlDetId);
		ControlDetbc.ExecuteQuery(ForwardOnly);
		
		if(ControlDetbc.FirstRecord())
		{
			ControlParbc.SetViewMode(AllView);
			ControlParbc.ActivateField(&quot;VF Parameter Type&quot;);
			ControlParbc.ActivateField(&quot;VF Parameter Name&quot;);
			ControlParbc.ActivateField(&quot;VF Parameter Value&quot;);
			ControlParbc.ClearToQuery();
			ControlParbc.SetSearchSpec(&quot;VF Control Detail Id&quot;, controlDetId);
			ControlParbc.ExecuteQuery(ForwardOnly);
		
			var controlPar = ControlParbc.FirstRecord();
			
			while(controlPar)
			{
				VFParamType = ControlParbc.GetFieldValue(&quot;VF Parameter Type&quot;);
				VFParamName = ControlParbc.GetFieldValue(&quot;VF Parameter Name&quot;);
				VFParamValue = ControlParbc.GetFieldValue(&quot;VF Parameter Value&quot;);

				if(VFParamType == &quot;Line Item&quot;)
				{
					oInputs.SetProperty(&quot;BusinessComponent&quot;,&quot;HP Submit - Order Entry - Line Items&quot;);
					oInputs.SetProperty(&quot;BusinessObject&quot;,&quot;Order Entry (Sales)&quot;);
					oInputs.SetProperty(&quot;Query Field 1&quot;,VFParamValue);
					oInputs.SetProperty(&quot;SearchExpression&quot;,&quot;[Id] = &apos;&quot; + orderItemId + &quot;&apos;&quot;);
					oBS.InvokeMethod(&quot;GetFieldsFromFirstRow&quot;,oInputs,oOutputs);
					VFParamValue = oOutputs.GetProperty(&quot;Query Field Result 1&quot;);

					inPropSet.SetProperty(VFParamName,VFParamValue);
				}
				else
				{
					inPropSet.SetProperty(VFParamName,VFParamValue);
				}
				controlPar = ControlParbc.NextRecord();
			}
		}
		
		if(processName != null &amp;&amp; processName != &quot;&quot;)
		{
		
			inPropSet.SetProperty(&quot;ProcessName&quot;,processName);
			wkfBS.InvokeMethod(&quot;RunProcess&quot;,inPropSet,Outputs);
		}
		else BS.InvokeMethod(&quot;CallServiceMethod&quot;,inPropSet,Outputs);
		
	}	
	catch (e)
	{
		Outputs.SetProperty (&quot;Exception&quot;, &quot;N&quot;);
		Outputs.SetProperty (&quot;VFControlResult&quot;, &quot;N&quot;);
	}
	finally
	{
	    // Garbage collection ***************************************************************************
	    wkfBS = null;
	    BS = null;
	    oBS = null;
	    ControlParbc = null;
	    ControlDetbc = null;
	    XOrderbo = null;
	}
}"
			   SEQUENCE="3"
			   UPDATED="02/04/2016 18:29:13"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="09/15/2014 15:58:04"
			   CREATED_BY="RPIRES">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CheckOneMonth"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CheckOneMonth(Inputs:PropertySet, Outputs:PropertySet)
{
	/* BAPTISTAR - 20080430 - WA#20 WriteOffs */

	var strDate1:String = Inputs.GetProperty(&quot;Date1&quot;);
	var strDate2:String = Inputs.GetProperty(&quot;Date2&quot;);
	var dtInitialDate = new Date(strDate1);
	var dtFinalDate = new Date(strDate2);
	var strLessThanOneMonth: String = &quot;N&quot;;

	if (dtInitialDate.getDate() &gt;= dtFinalDate.getDate() &amp;&amp;
		dtInitialDate.getDay() == dtFinalDate.getDay() &amp;&amp;
		dtInitialDate.getFullYear() == dtFinalDate.getFullYear()) {		
	strLessThanOneMonth = &quot;Y&quot;;
	}
		
	Outputs.SetProperty(&quot;LessThanOneMonth&quot;, strLessThanOneMonth);
}"
			   SEQUENCE="4"
			   UPDATED="02/04/2016 18:29:13"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="07/22/2014 15:34:27"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="EAIToSiebelDate"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function EAIToSiebelDate (psIn, psOut)
{
	try
	{
		psOut.Reset();
		var dEAI = psIn.GetProperty(&quot;Val&quot;);
		var dEAIConverted = dEAI.substring(0,19)+dEAI.substring(23,29);
		//var strISO8601regexp = new RegExp();

		var strISO8601regexp = new RegExp(/^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\.[0-9]+)?(Z|[+-](?:2[0-3]|[0-1][0-9]):[0-5][0-9])?$/i);
		var results = dEAIConverted.match(strISO8601regexp);
		//2012-05-31T13:20:00 890-05:00
		//&quot;1=2012&quot;-&quot;2=05&quot;-&quot;3=31&quot; &quot;4=13&quot;-&quot;5=20&quot;-&quot;6=00&quot; &quot;7=&quot;-&quot;8=-05:00&quot;
		if (results != null)
		{
			var newdate = new Date(results[1], results[2] - 1, results[3], results[4], results[5], results[6]);
			var sOffsetISO = results[8];
		}
		else
		{
			TheApplication.RaiseErrorText(&quot;O formato da data não é válido.&quot;);
		}
		
		//Cálculo do Offset
		var sOffsetIndicator = sOffsetISO.substring(0,1);
		var sOffset = sOffsetISO.substring(1,3);		
		var iMillisecondsOffset = ToNumber(sOffset) * 3600000;
		var dUTC;
		
		if (sOffsetIndicator == &quot;+&quot;)
		{
			dUTC = new Date(newdate.getTime() - iMillisecondsOffset);
		}
		else if (sOffsetIndicator == &quot;-&quot;)
		{
			dUTC = new Date(newdate.getTime() + iMillisecondsOffset);
		}
		
		else
		{
			dUTC = newdate;
		}
		
		var dUTCConverted = (((dUTC.getMonth()+1) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + (dUTC.getMonth()+1)+&quot;/&quot;+((dUTC.getDate()) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dUTC.getDate()+&quot;/&quot;+ dUTC.getFullYear() + &quot; &quot; + ((dUTC.getHours()) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dUTC.getHours() + &quot;:&quot; + ((dUTC.getMinutes()) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + newdate.getMinutes()+ &quot;:&quot; + ((dUTC.getSeconds()) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dUTC.getSeconds());
		//Return Result
		psOut.SetProperty(&quot;Result&quot;, dUTCConverted);        
	}
    catch(e)
    {
    	TheApplication().RaiseErrorText(&quot;TELCO Generic Utilities :: EAIToSiebelDate: &quot; + e.toString());
	}
	finally
    {
    }
}"
			   SEQUENCE="5"
			   UPDATED="02/04/2016 18:29:13"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="07/22/2014 15:34:27"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="EvalRegExp"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function EvalRegExp(Inputs:PropertySet, Outputs:PropertySet)
{
	/*
		LOURENCOR - 2007/10/31 - Generic utilities
		This function receives as input a Regular Expression pattern and a value to evaluate. Then it returns
		the result of the boolean test of that value against the pattern.
		Possible outputs: True, False
	*/
	var strPattern:chars = Inputs.GetProperty(&quot;Pattern&quot;);
	var strValue:chars = Inputs.GetProperty(&quot;Value&quot;);
	
	var objRegExp:RegExp = new RegExp(strPattern,&quot;g&quot;);

	Outputs.SetProperty(&quot;IsValid&quot;, ToString(objRegExp.test(strValue)));
}"
			   SEQUENCE="6"
			   UPDATED="02/04/2016 18:29:13"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="07/22/2014 15:34:27"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ExistSubString"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ExistSubString(Inputs:PropertySet, Outputs:PropertySet)
{
	/* BAPTISTAR - 20080430 - WA#20 WriteOffs
	 * Checks if a string exists within another string
	 * Returns &quot;Y&quot; if string found; &quot;N&quot; if subtring not found
	 */

	var strMainString:String = Inputs.GetProperty(&quot;MainString&quot;);
	var strSubString:String = Inputs.GetProperty(&quot;SubString&quot;);
	var strExistString: String = &quot;N&quot;;
	
	if(Clib.strstri(strMainString, strSubString) != null) {
		strExistString = &quot;Y&quot;;
	}
	
	Outputs.SetProperty(&quot;ExistString&quot;, strExistString);
}"
			   SEQUENCE="7"
			   UPDATED="02/04/2016 18:29:13"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="07/22/2014 15:34:28"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetEnvironmentVariable"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetEnvironmentVariable(inputs:PropertySet, outputs:PropertySet)
{
	outputs.SetProperty(&quot;Value&quot;, Clib.getenv(inputs.GetProperty(&quot;Name&quot;)));
}"
			   SEQUENCE="8"
			   UPDATED="02/04/2016 18:29:13"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="07/22/2014 15:34:28"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetLOV"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetLOV(Inputs, Outputs)
{
	var objListOfValuesBO:BusObject;
	var objListOfValuesBC:BusComp;
	var strFieldValue;
	var strErrorCode = 0;

	try
	{
		var strFieldName = Inputs.GetProperty(&quot;FieldQuery&quot;);
		var strSearchExp = Inputs.GetProperty(&quot;SearchExpression&quot;);
		
		// Get ListOfValues BC
		objListOfValuesBO = TheApplication().GetBusObject(&quot;List Of Values&quot;);
		objListOfValuesBC = objListOfValuesBO.GetBusComp(&quot;List Of Values&quot;);
			
		// Query LOV
		with (objListOfValuesBC)
		{
			ClearToQuery();
			ActivateField(strFieldName);
			SetSearchExpr(strSearchExp);
			ExecuteQuery(ForwardOnly);
		
			var blnRecord = FirstRecord();
			
			if(blnRecord)
			{
				strFieldValue = GetFieldValue(strFieldName);
				Outputs.SetProperty(strFieldName, strFieldValue);
				Outputs.SetProperty(&quot;QueryResult&quot;,strErrorCode);
			}
			else
			 strErrorCode = &quot;-1&quot;;
		}	
	}
	catch (e)
	{
		strErrorCode = &quot;-1&quot;;
	}
	finally 
	{	
		objListOfValuesBC = null;
		objListOfValuesBO = null;	
	}

	Outputs.SetProperty(&quot;ErrorCode&quot;,strErrorCode);
	return (CancelOperation);
}"
			   SEQUENCE="9"
			   UPDATED="02/04/2016 18:29:13"
			   UPDATED_BY="1-KBRQVI"
			   CREATED="07/22/2014 15:34:28"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetPositionName"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetPositionName(Inputs,Outputs)
{
	try
	{
		var boEmp :BusObject = TheApplication().GetBusObject(&quot;Employee&quot;);
		var bcEmp :BusComp   = boEmp.GetBusComp (&quot;Employee&quot;);
		var bcPos :BusComp   = boEmp.GetBusComp (&quot;Position&quot;);
		
		Outputs.SetProperty(&quot;Position&quot;,&quot;&quot;);
		
		var login = Inputs.GetProperty(&quot;Login&quot;);
		var prPosId;
		
		bcEmp.SetViewMode(AllView);
		bcEmp.ClearToQuery();
		bcEmp.ActivateField(&quot;Primary Position Id&quot;);
		bcEmp.SetSearchSpec(&quot;Login Name&quot;,login);
		bcEmp.ExecuteQuery(ForwardOnly);
		
		if (bcEmp.FirstRecord())
		{
			prPosId = bcEmp.GetFieldValue(&quot;Primary Position Id&quot;);
			
			bcPos.SetViewMode(AllView);
			bcPos.ClearToQuery();
			bcPos.ActivateField(&quot;Name&quot;);
			bcPos.SetSearchSpec(&quot;Id&quot;, prPosId);
			bcPos.ExecuteQuery(ForwardOnly);
			
			if(bcPos.FirstRecord())
				Outputs.SetProperty(&quot;Position&quot;,bcPos.GetFieldValue(&quot;Name&quot;));
		}			
	}
	catch(e)
	{
		Outputs.SetProperty(&quot;Position&quot;,&quot;&quot;);
	}
	finally
	{
		 bcPos    = null;
		 bcEmp	 = null;
		 boEmp 	= null;	
	}
}"
			   SEQUENCE="10"
			   UPDATED="02/25/2016 18:20:25"
			   UPDATED_BY="RPIRES"
			   CREATED="02/25/2016 18:20:25"
			   CREATED_BY="RPIRES">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetRandom"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetRandom(strType:chars, Inputs:PropertySet, Outputs:PropertySet)
{
	/*
		LOURENCOR - 2007/10/31 - Generic utilities
		This function receives a char, to determine if the random should return a number or a boolean. If it is
		a boolean, the values returned are True or False. If it is an integer, the function is not yet implemented.		
	*/
/*	
	//According to SR 38-3406584524 and 38-3406584511, both Math.random() and Clib.srand() don&apos;t work properly
	//as of version 8.0.0.1. It is not possible to use these functions here (maybe with future patch).
	var bOutput:chars;
	var randomvalue;	
		
	if (strType==&quot;I&quot;)
	{		
		randomvalue = Math.random();
		bOutput = ToString(Math.round(randomvalue));	
	}
	
	Outputs.SetProperty(&quot;Result&quot;,bOutput);
*/
	var strResult:chars = &quot;False&quot;;

	if (strType==&quot;B&quot;)
	{		
		var intTime:float = Clib.time();	
		
		if (intTime % 2 &gt; 0)
		{
			strResult = &quot;True&quot;;
		}
	}

	Outputs.SetProperty(&quot;Result&quot;,strResult);

}"
			   SEQUENCE="11"
			   UPDATED="02/25/2016 18:20:25"
			   UPDATED_BY="RPIRES"
			   CREATED="07/22/2014 15:34:28"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetStringDigits"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetStringDigits (Inputs:PropertySet, Outputs:PropertySet)
{
//This method deletes all the characters different from digits.
	var pat = /[^0-9]/g;
	var sReturn:String;
	sReturn = Inputs.GetProperty(&quot;OldString&quot;);
	sReturn = sReturn.replace(pat,&quot;&quot;);
	Outputs.SetProperty(&quot;NewString&quot;,sReturn);
}"
			   SEQUENCE="12"
			   UPDATED="02/25/2016 18:20:25"
			   UPDATED_BY="RPIRES"
			   CREATED="07/22/2014 15:34:29"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetSystemPreference"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetSystemPreference(Inputs,Outputs)
{
	try
	{
		var boSysPref :BusObject = TheApplication().GetBusObject(&quot;System Preferences&quot;);
		var bcSysPref :BusComp   = boSysPref.GetBusComp(&quot;System Preferences&quot;);
		var SysPrefValue = &quot;&quot;;
		
		Outputs.SetProperty(&quot;Value&quot;,&quot;&quot;);
		
		var SysPrefName = Inputs.GetProperty(&quot;Name&quot;);

		bcSysPref.SetViewMode(AllView);
		bcSysPref.ClearToQuery();
		bcSysPref.ActivateField(&quot;Name&quot;);
		bcSysPref.ActivateField(&quot;Value&quot;);
		bcSysPref.SetSearchSpec(&quot;Name&quot;,SysPrefName);
		bcSysPref.ExecuteQuery(ForwardOnly);
		
		if (bcSysPref.FirstRecord())
		{
			SysPrefValue = bcSysPref.GetFieldValue(&quot;Value&quot;);
		}			
		
		Outputs.SetProperty(&quot;Value&quot;,SysPrefValue);
	}
	catch(e)
	{
		Outputs.SetProperty(&quot;Value&quot;,&quot;&quot;);
	}
	finally
	{
		 bcSysPref    = null;
		 boSysPref	 = null;
	}
}"
			   SEQUENCE="13"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="11/10/2016 11:09:54"
			   CREATED_BY="ESANTOS">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetUserViewAccessInfo"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetUserViewAccessInfo(Inputs:PropertySet, Outputs:PropertySet)
{
	/* If no imput values are set than the process uses the current user and current view
	 * The current view funcionality is only applicable to GUI Sessions.
	 * Returns: 
	 * - UserHasAccess   : Y if the user has acess to the view normal or ready only
	 *                     N if the user has no acess to the View
	 *				
	 * - UserHasROAccess : Y if the user has read only access to the View
	 *                     N if the user has normal access to the View
	 */
	 
	 try
	{
	    var oBOResponsibility :BusObject;
		var oBOViewAccess:BusObject;
		var oBCFeatureAccess:BusComp;
		var oBCResponsibility:BusComp;
		var oBCResponsibilityUser:BusComp;
		var OBCUser:BusComp;
		var sUser:String=&quot;&quot;;
		var sView:String=&quot;&quot;;
		var iRecord;
		var sUserHasAccess:String = &quot;N&quot;;
		var sUserHasROAccess:String = &quot;N&quot;;
		var sDoubleQuote:String = &quot;\&quot;&quot;;
			
		sUser = Inputs.GetProperty(&quot;UserName&quot;);
		sView = Inputs.GetProperty(&quot;ViewName&quot;);
		
		if(sUser == &quot;&quot;)
			sUser = TheApplication().LoginName();
		
		if (sView == &quot;&quot;)
			sView = TheApplication().GetProfileAttr(&quot;ActiveViewName&quot;);
		
		oBOViewAccess = TheApplication().GetBusObject(&quot;View Access&quot;);
		oBCFeatureAccess = oBOViewAccess.GetBusComp(&quot;Feature Access&quot;);
		
		oBOResponsibility = TheApplication().GetBusObject(&quot;Responsibility&quot;);
		oBCResponsibilityUser = oBOResponsibility.GetBusComp(&quot;Responsibility&quot;);
	
		with(oBCFeatureAccess)
		{
			SetViewMode(AllView);
			ClearToQuery();
			ActivateField(&quot;Name&quot;);
			SetSearchSpec(&quot;Name&quot;, sDoubleQuote+sView+sDoubleQuote)
			ExecuteQuery(ForwardOnly);	
			
			if (FirstRecord())
			{
				oBCResponsibility =  oBOViewAccess.GetBusComp(&quot;Responsibility&quot;);
			
				oBCResponsibility.ActivateField (&quot;Id&quot;);
				oBCResponsibility.ActivateField (&quot;Read Only View&quot;);
				oBCResponsibility.ClearToQuery();
				oBCResponsibility.ExecuteQuery(ForwardOnly);
		
				iRecord = oBCResponsibility.FirstRecord();
			
				while (iRecord)
				{					
					oBCResponsibilityUser.SetViewMode(AllView);
					oBCResponsibilityUser.ClearToQuery();
					oBCResponsibilityUser.SetSearchSpec(&quot;Id&quot;, oBCResponsibility.GetFieldValue (&quot;Id&quot;));
					oBCResponsibilityUser.ExecuteQuery(ForwardOnly);
					
					if (oBCResponsibilityUser.FirstRecord()) 
					{
						OBCUser = oBOResponsibility.GetBusComp(&quot;User&quot;);
						
						OBCUser.SetViewMode(AllView);
						OBCUser.ClearToQuery();
						OBCUser.SetSearchSpec(&quot;Login Name&quot;, sDoubleQuote+sUser+sDoubleQuote)
						OBCUser.ExecuteQuery(ForwardOnly);
						
						if (OBCUser.FirstRecord())
						{
							sUserHasAccess = &quot;Y&quot;;
							
							if ((oBCResponsibility.GetFieldValue(&quot;Read Only View&quot;)) == &quot;Y&quot;)
								sUserHasROAccess=&quot;Y&quot;;					
							else
								sUserHasROAccess=&quot;N&quot;;
							
							break;
						}
						
						iRecord = oBCResponsibility.NextRecord();
				 	}
			 	}
		 	}
		}

		Outputs.SetProperty(&quot;UserHasAccess&quot;, sUserHasAccess);
		Outputs.SetProperty(&quot;UserHasROAccess&quot;, sUserHasROAccess);
	}	
	catch(e)
	{
		throw(e);
	}
	finally
	{
		oBCFeatureAccess = null;
	    oBCResponsibility = null;
	    oBCResponsibilityUser = null;
	    OBCUser = null;
		oBOResponsibility = null;
	    oBOViewAccess = null;
	}
}"
			   SEQUENCE="14"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:29"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="IsHigherPosition"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function IsHigherPosition(Inputs:PropertySet, Outputs:PropertySet)
{
/* MOREIRAM 2008-11-06 

Calculates whether the logged user position is higher than the owner id position.
Receives the Logged Position Id and Owner Position Id

*/	
	
	var objListOfValuesBO:BusObject;
	var objListOfValuesBC:BusComp;

	try
	{
		var sOwnerPosId:String = Inputs.GetProperty(&quot;OwnerPosId&quot;);
		var sLoggedPosId:String = TheApplication().PositionId();
				
		// Get ListOfValues BC
		objListOfValuesBO = TheApplication().GetBusObject(&quot;Position&quot;);
		objListOfValuesBC = objListOfValuesBO.GetBusComp(&quot;Position&quot;);

		// Query Position
		with (objListOfValuesBC)
		{
			ClearToQuery();
			ActivateField(&quot;Parent Position Id&quot;);
			SetSearchSpec(&quot;Id&quot;, sOwnerPosId);
			ExecuteQuery(ForwardOnly);
		
			var blnRecord = FirstRecord();
			
			if(blnRecord)
			{
				if(GetFieldValue(&quot;Parent Position Id&quot;) == null || GetFieldValue(&quot;Parent Position Id&quot;) == &quot;&quot;)
				{
					Outputs.SetProperty(&quot;IsHigher&quot;, &quot;N&quot;);
				}
				else
				{
					
					if (GetFieldValue(&quot;Parent Position Id&quot;) == sLoggedPosId)
					{
						Outputs.SetProperty(&quot;IsHigher&quot;, &quot;Y&quot;);
					}
					else
					{
						Inputs.SetProperty(&quot;OwnerPosId&quot;, GetFieldValue(&quot;Parent Position Id&quot;));
						
						IsHigherPosition(Inputs, Outputs);
					}
				}
			}
			else
			{
				Outputs.SetProperty(&quot;IsHigher&quot;, &quot;N&quot;);
			}
		}	
	}
	catch (e)
	{
		Outputs.SetProperty(&quot;IsHigher&quot;, &quot;N&quot;);
	}
	finally 
	{	
		objListOfValuesBC = null;
		objListOfValuesBO = null;	
	}
	
	return (CancelOperation);
}"
			   SEQUENCE="15"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:30"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ReplaceCRLF"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ReplaceCRLF(Inputs:PropertySet, Outputs:PropertySet)
{
	/* VAZJ - WA#6 Service Functionalities and Views 
	Purpose: This method replaces a Carriage Returns within another string. This replacement can be global (for all the string) or 
	only to the occurrence on the original string. The input parameter Global can assume the Y or N values which means 
	that the replacement will be global if it assumes Y, and only for the first occurrence otherwise.*/

	var strOriginalString:String = Inputs.GetProperty(&quot;OriginalString&quot;);
	var strReplacement:String = Inputs.GetProperty(&quot;SubstituteString&quot;);
	var strGlobal = Inputs.GetProperty(&quot;Global&quot;);
	var strFinalString:String = &quot;&quot;;
	var aux = &quot;&quot;;

	if (strGlobal == &quot;Y&quot;)
	{
		aux =/(\r
)/g;
	}
	else
	{
		aux =/(\r
)/;
	}

	strFinalString = strOriginalString.replace(aux, strReplacement);


	Outputs.SetProperty(&quot;FinalString&quot;, strFinalString);

}"
			   SEQUENCE="16"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:30"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ReplaceString"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ReplaceString(Inputs:PropertySet, Outputs:PropertySet)
{
	/* Purpose: This method replaces a string within another string. This replacement can be global (for all the string) or 
	only to the first occurrence on the original string. The input parameter ReplaceAll can assume the Y or N values which means 
	that the replacement will be global if it assumes Y, and only for the first occurrence otherwise.*/

	var strOriginalString:String = Inputs.GetValue();
	var strFindString:String = Inputs.GetProperty(&quot;FindString&quot;);
	var strReplaceWith:String = Inputs.GetProperty(&quot;ReplaceWith&quot;);
	var strReplaceAll = Inputs.GetProperty(&quot;ReplaceAll&quot;);
	var strFinalString:String = &quot;&quot;;
	var aux = &quot;&quot;;

	if (strReplaceAll == &quot;Y&quot;)
	{
		aux = new RegExp(&quot;(&quot;+strFindString+&quot;)&quot;, &quot;gm&quot;);
	}
	else
	{
		aux = new RegExp(&quot;(&quot;+strFindString+&quot;)&quot;, &quot;m&quot;);
	}

	strFinalString = strOriginalString.replace(aux, strReplaceWith);


	Outputs.SetValue(strFinalString);
}"
			   SEQUENCE="17"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:30"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ReturnUpperCase"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ReturnUpperCase(Inputs:PropertySet, Outputs:PropertySet)
{
	var sReturnUpper:String;
	try
	{
		sReturnUpper = Inputs.GetProperty(&quot;Val1&quot;);
		sReturnUpper = sReturnUpper.toUpperCase();
		Outputs.SetProperty(&quot;Results&quot;,sReturnUpper);
	}
	catch(e)
	{
		TheApplication().RaiseErrorText(&quot;Erro - &quot; + e.errText + &quot; - Código - &quot; + e.errCode + &quot; - &quot; + e.message + &quot; - &quot; + e.name + &quot; - &quot; + e.toString);
	}

}"
			   SEQUENCE="18"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:31"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="RoundNumber"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function RoundNumber(Inputs:PropertySet, Outputs:PropertySet)
{
//FCARRIL: VFTRCBU-24760
	try
	{
		var stramountfinal:float = 0;
		var stramount = Inputs.GetProperty(&quot;amount&quot;);
		stramount = ToNumber(stramount);
		var fullAmount:Number = stramount.toFixed(3);
		var fullAmountStr:String = ToString(fullAmount);
		var LastDigit = fullAmountStr.substring((fullAmountStr.length) - 1, fullAmountStr.length);
		//Next line: Fixing to 2 numbers after &quot;.&quot; allows automatic rounding when 3rd digit of fullAmount &gt;= 5
		var finalAmount:Number = stramount.toFixed(2); 
		
		LastDigit = ToNumber(LastDigit);
			
		//stramount = Math.round(stramount); //VFTRCBU-25190: Fix
	}
	catch(e)
    {
    	TheApplication().RaiseErrorText(&quot;TELCO Generic Utilities :: RoundNumber: &quot; + e.toString());
	}
	finally
    {
    }
    Outputs.SetProperty(&quot;RoundedAmount&quot;,finalAmount);
}"
			   SEQUENCE="19"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="02/04/2016 18:30:02"
			   CREATED_BY="1-KBRQVI">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreInvokeMethod (MethodName:chars, Inputs:PropertySet, Outputs:PropertySet)
{
	switch(MethodName)
	{
		//Build complete address for geo location in Home Zone
		case &quot;BuildCompleteAddress&quot;:
			BuildCompleteAddress(Inputs,Outputs);
			break;		
		//Validates the length of a string
		case &quot;Len&quot;:
			ValidateLen(Inputs, Outputs);
			break;
		
		//Validates if the input string only contains numbers
		case &quot;IsNumeric&quot;:
			ValidateType(&quot;Numeric&quot;,Inputs,Outputs);
			break;
		
		//Validates if the input string is a valid email address
		case &quot;IsEmail&quot;:
			ValidateType(&quot;Email&quot;,Inputs,Outputs)
			break;

		case &quot;IsPhone&quot;:
			ValidateType(&quot;Phone&quot;,Inputs,Outputs)
			break;
		
		//Performs regular expressiong validation on the string input
		case &quot;EvalRegExp&quot;:
			EvalRegExp(Inputs, Outputs);
			break;
		
		//Returns a random True or False value
		case &quot;GetRandomBoolean&quot;:
			GetRandom(&quot;B&quot;, Inputs, Outputs)
			break;

		//Validates if the input is a valid Portuguese NIF
		case &quot;ValidateNIF&quot;:
			ValidateNIF(Inputs,Outputs);
			break;
			
		//GetLOV
		case &quot;GetLOV&quot;:
			GetLOV(Inputs,Outputs);
			break;
		// Return the String in UpperCase
		case &quot;ReturnUpperCase&quot;:
			ReturnUpperCase(Inputs,Outputs);
			break;
		// Format from views to Siebel way	
		case &quot;TransformAmount&quot;:
			TransformAmount(Inputs,Outputs);
			break;
			
		case &quot;ExistSubString&quot;:
			ExistSubString(Inputs,Outputs);
			break;
			
		case &quot;CheckOneMonth&quot;:
			CheckOneMonth(Inputs,Outputs);
			break;
			
		//replaces a Carriage Return within another string
		case &quot;ReplaceCRLF&quot;:
			ReplaceCRLF(Inputs,Outputs);
			break;
		
		//Calculates whether the logged user position is higher than the owner id position
		case &quot;IsHigherPosition&quot;:
			IsHigherPosition(Inputs,Outputs);
			break;
			
		//replaces a string within another string
		case &quot;ReplaceString&quot;:
			ReplaceString(Inputs,Outputs);
			break;
			
		// Check if user has access to a view
		case &quot;GetUserViewAccessInfo&quot;:
			GetUserViewAccessInfo(Inputs,Outputs);
			break;
			
		//This method deletes all the characters different from digits.
		case &quot;GetStringDigits&quot;:
			GetStringDigits(Inputs,Outputs);
		break;
		
		case &quot;SiebelToEAIDate&quot;:
			SiebelToEAIDate(Inputs,Outputs);
			break;
				
		case &quot;EAIToSiebelDate&quot;:
			EAIToSiebelDate(Inputs,Outputs);
			break;
		case &quot;GetEnvironmentVariable&quot;:
			GetEnvironmentVariable(Inputs,Outputs);
		break;	
		
		case &quot;CallBSWrapper&quot;:
			CallBSWrapper(Inputs,Outputs);
		break;	
				
		case &quot;BuildSiebelURL&quot;:
			BuildSiebelURL(Inputs,Outputs);
		break;		
		
		//FCARRIL: VFTRCBU-24760
		case &quot;RoundNumber&quot;:
			RoundNumber(Inputs,Outputs);
		break;
		//END
		
		//RPIRES VFTRCBU-25797
		case &quot;GetPositionName&quot;:
			GetPositionName(Inputs,Outputs);
			
		//CJANEIRO VFTRCBU-34445
		case &quot;GetSystemPreference&quot;:
			GetSystemPreference(Inputs,Outputs);
		break;
		//END
		default:
			return (ContinueOperation);						
	}
	return (CancelOperation);
}"
			   SEQUENCE="25"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:31"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="SiebelToEAIDate"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function SiebelToEAIDate (psIn, psOut)
{
	try
	{
		var sInDate = psIn.GetProperty(&quot;Val1&quot;);
		var sInType = psIn.GetProperty(&quot;Val2&quot;);
		var sLength = sInDate.length;
		if (sInDate == null &amp;&amp; sInDate == &quot;&quot; )
		{
			return;
		} 
		
		if(sLength)
		{
			if(sInType == &quot;START&quot;)
			{
				sInDate = sInDate + &quot; 00:00:00&quot;;
			}
			
			if(sInType == &quot;END&quot;)
			{
				sInDate = sInDate + &quot; 23:59:59&quot;;
			}
		}
		var UTCdate = new Date(sInDate);
		//2012-05-31T13:20:00-05:00s

		//GMT Standard Time
		//W. Central Africa Standard Time
		var UTCdateConverted =(((UTCdate.getMonth()+1) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + (UTCdate.getMonth()+1)+&quot;/&quot;+((UTCdate.getDate()) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + UTCdate.getDate()+&quot;/&quot;+ UTCdate.getFullYear() + &quot; &quot; + ((UTCdate.getHours()) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + UTCdate.getHours() + &quot;:&quot; + ((UTCdate.getMinutes()) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + UTCdate.getMinutes()+ &quot;:&quot; + ((UTCdate.getSeconds()) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + UTCdate.getSeconds());
		var dDateInitial = new Date(UTCdateConverted);
		var sOffset = dDateInitial.getTimezoneOffset();
		var newdate;

		if(sOffset != 0)
		{
			//Substituir valores por getMilliseconds e seconds
			dDateInitial.setMinutes(dDateInitial.getMinutes() + sOffset, dDateInitial.getSeconds, dDateInitial.getMilliseconds());
			var iHours = (sOffset/60);
			var sHours = iHours.toString();
			var hours;
			if (iHours &lt; 0)
			{
				hours = sHours.split(&quot;-&quot;);
				newdate = (dDateInitial.getFullYear() + &quot;-&quot; + ((dDateInitial.getMonth()+1) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + (dDateInitial.getMonth()+1) + &quot;-&quot;+ (dDateInitial.getDate() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getDate() +&quot;T&quot;+ (dDateInitial.getHours() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getHours() +&quot;:&quot;+ (dDateInitial.getMinutes() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getMinutes() +&quot;:&quot;+ (dDateInitial.getSeconds() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getSeconds() + &quot;.&quot; + dDateInitial.getMilliseconds() + &quot;+&quot; + (hours[1] &lt; 10 ? &quot;0&quot; : &quot;&quot;) + hours[1] + &quot;:00&quot;);				
			}
			else
				newdate = (dDateInitial.getFullYear() + &quot;-&quot; + ((dDateInitial.getMonth()+1) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + (dDateInitial.getMonth()+1) + &quot;-&quot;+ (dDateInitial.getDate() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getDate() +&quot;T&quot;+ (dDateInitial.getHours() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getHours() +&quot;:&quot;+ (dDateInitial.getMinutes() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getMinutes() +&quot;:&quot;+ (dDateInitial.getSeconds() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getSeconds() + &quot;.&quot; + dDateInitial.getMilliseconds() + &quot;-&quot; + (sHours &lt; 10 ? &quot;0&quot; : &quot;&quot;) + sHours + &quot;:00&quot;);
		}
		else
		{
			newdate = (dDateInitial.getFullYear() + &quot;-&quot; + ((dDateInitial.getMonth()+1) &lt; 10 ? &quot;0&quot; : &quot;&quot;) + (dDateInitial.getMonth()+1) + &quot;-&quot;+ (dDateInitial.getDate() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getDate() +&quot;T&quot;+ (dDateInitial.getHours() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getHours() +&quot;:&quot;+ (dDateInitial.getMinutes() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getMinutes() +&quot;:&quot;+ (dDateInitial.getSeconds() &lt; 10 ? &quot;0&quot; : &quot;&quot;) + dDateInitial.getSeconds() + &quot;.&quot; + dDateInitial.getMilliseconds() + &quot;Z&quot;);
		}
				
		/*var strUTCregexp = new RegExp(/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/i);
		var results = strUTCregexp.exec(newdate);
		psOut.SetProperty(&quot;Result&quot;, results);        */
		
        psOut.SetProperty(&quot;Result&quot;, newdate);
	}
    catch(e)
    {
    	TheApplication().RaiseErrorText(&quot;TELCO Generic Utilities :: SiebelToEAIDate: &quot; + e.toString());
	}
	finally
    {
    }
}"
			   SEQUENCE="20"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:31"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="TransformAmount"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function TransformAmount (Inputs:PropertySet, Outputs:PropertySet)
{

	/*
		MORGADOP - 2008/04/11 - Generic utilities
		Transform amount format from views to Siebel way
	*/
	var sAmount:String;
	var sFromChar:String;
	var sToChar:String;
	
	try
	{
		sAmount= Inputs.GetProperty(&quot;Amount&quot;);
		sFromChar = Inputs.GetProperty(&quot;FromChar&quot;);
		sToChar = Inputs.GetProperty(&quot;ToChar&quot;);
		
		sAmount=sAmount.replace(sFromChar,sToChar);
	}
	catch (e)
	{
		TheApplication().RaiseErrorText(&quot;Erro - &quot; + e.errText + &quot; - Código - &quot; + e.errCode + &quot; - &quot; + e.message + &quot; - &quot; + e.name + &quot; - &quot; + e.toString);
	}
	finally 
	{	

	}
		Outputs.SetProperty(&quot;TransfAmount&quot;,sAmount);
}"
			   SEQUENCE="21"
			   UPDATED="11/10/2016 11:09:54"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:32"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ValidateLen"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ValidateLen(Inputs:PropertySet, Outputs:PropertySet)
{
	/*
		LOURENCOR - 2007/10/31 - Generic utilities
		This function returns a boolean value, that validates if the input string has a valid length, according to
		what is defined in the input.
	*/
	
	var strFieldValue:String = Inputs.GetProperty(&quot;FieldValue&quot;);
	
	//Here the input is converted directly to object Number, to allow direct comparison with lenght property of String
	var fltMaxLength:float = new Number(Inputs.GetProperty(&quot;MaxLength&quot;)); 
	var boolIsValid:bool = false;		
	
	if (strFieldValue.length == fltMaxLength) //if equal, then the value is correct
	{
		boolIsValid = true;
	}
	
	//return the result to the caller
	Outputs.SetProperty(&quot;IsValid&quot;, ToString(boolIsValid));
}"
			   SEQUENCE="22"
			   UPDATED="11/10/2016 11:09:55"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:32"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ValidateNIF"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ValidateNIF(Inputs:PropertySet, Outputs:PropertySet)
{

	/*
		PONTEP - 2007/11/26 - Generic utilities - ValidateNIF
		This function was created to provide an interface for the Portuguese Fiscal Numbers (NIF) validation.
	*/

    var intCounter:Number; // As Integer
    var intNumber:Number; // As Integer
    var iReturnValue:bool; // As Integer
    var NIF:String =  Inputs.GetProperty(&quot;strNIF&quot;);// As String
    var NIF11:String; // As String
    
    var intReturnError:bool = false;
    var intReturnSucess:bool = true;
    iReturnValue = intReturnError;
    
    intNumber = 0;
    
    if(NIF.length != 9) {
    	iReturnValue = intReturnError; //CancelOperation
    }
    else
	    {
		
	    var auxNIF:String = &quot;00000000000&quot; + NIF;
	    NIF11 = auxNIF.substring((auxNIF.length)-11, (auxNIF.length));	//Set NIF to 11 digits starting with 0

	    if (NaN==ToNumber(NIF11)) {
			iReturnValue = intReturnError;//CancelOperation
		}
	    else {
		   if ( NIF11.substring(0,2) !=&quot;00&quot; ) {
		    	Outputs.SetProperty(&quot;aux&quot;,&quot;aqui1&quot;);
				iReturnValue = intReturnError; //CancelOperation
			}
		    else
		    {
				NIF = NIF11.substring(2,NIF11.length);
				
			   	for(intCounter = 0; intCounter&lt;8;intCounter++){
		   			if (  NIF.substring(intCounter,intCounter + 1) != &quot;&quot;) {
		       			intNumber = intNumber + Math.floor(ToNumber(NIF.substring(intCounter,intCounter + 1))) * (9 - intCounter)
			   		}
		   		}
			   	intNumber = 11 - (intNumber % 11);
		   		if (intNumber &gt; 9) {
		   			intNumber = 0;
			   	}
		   		if ( ToString(intNumber).substring(0,1) == NIF.substring(8,9) ) 
		   		{
		   			iReturnValue = intReturnSucess; //ContinueOperation
			   	}
			   	else {
		   			iReturnValue = intReturnError; //CancelOperation
			   	}
			}
		}
	}				
	Outputs.SetProperty(&quot;validNIF&quot;, ToString(iReturnValue));

}"
			   SEQUENCE="23"
			   UPDATED="11/10/2016 11:09:55"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:32"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ValidateType"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ValidateType(strTypeToCheck:String, Inputs:PropertySet, Outputs:PropertySet)
{
	/*
		LOURENCOR - 2007/10/31 - Generic utilities
		This function was created to provide an interface for the most common validations required. Currently it 
		validates emails and if a string only contains numbers. 
		
	*/
	
	var strFieldValue:String = Inputs.GetProperty(&quot;FieldValue&quot;);
	var boolIsValid:chars = &quot;false&quot;;

	if (strTypeToCheck == &quot;Phone&quot;)//to check if a value contains only number in the range of [0..9]
	{
		if (!isNaN(ToNumber(strFieldValue)) &amp;&amp; strFieldValue.charAt(0) == &quot;+&quot;)//if variable is not numeric, the conversion function returns NaN
		{
			boolIsValid = &quot;true&quot;;
		}
		else if(Clib.strstr(strFieldValue, &quot;?&quot;) == null){
		;
		}
	}

	if (strTypeToCheck == &quot;Numeric&quot;)//to check if a value contains only number in the range of [0..9]
	{
		if (!isNaN(ToNumber(strFieldValue)))//if variable is not numeric, the conversion function returns NaN
		{
			boolIsValid = &quot;true&quot;;
		}
		else if(Clib.strstr(strFieldValue, &quot;?&quot;) == null){
		;
		}
	}
	
	if(strTypeToCheck == &quot;Email&quot;)
	{
		var strPattern:chars = &quot;^(.+)@([^\(\);:,&lt;&gt;]+\.[a-zA-Z]{2,4})&quot;;
		//regular expression taken from http://regexlib.com/REDetails.aspx?regexp_id=818
		
		var psInputs:PropertySet= TheApplication().NewPropertySet();
		var psOutputs:PropertySet= TheApplication().NewPropertySet();
		
		psInputs.SetProperty(&quot;Pattern&quot;,strPattern);
		psInputs.SetProperty(&quot;Value&quot;,strFieldValue);
		
		EvalRegExp(psInputs,psOutputs);
		
		boolIsValid = psOutputs.GetProperty(&quot;IsValid&quot;);
		
		psInputs = null;
		psOutputs = null;
	}

	Outputs.SetProperty(&quot;IsValid&quot;, boolIsValid);
}"
			   SEQUENCE="24"
			   UPDATED="11/10/2016 11:09:55"
			   UPDATED_BY="ESANTOS"
			   CREATED="07/22/2014 15:34:33"
			   CREATED_BY="1-KBRSNM">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
		</BUSINESS_SERVICE>
	</PROJECT>
</REPOSITORY>



