<?xml version="1.0" encoding="UTF-8"?>
<REPOSITORY
   COMMENTS="Siebel 8.1.1.11 repository"
   NAME="Siebel Repository"
   UPDATED="06/17/2014 13:50:12"
   UPDATED_BY="SADMIN"
   CREATED="06/06/2014 19:53:48"
   CREATED_BY="SADMIN"
   FIO_PLACEHOLDER_FIO="TRUE">
	<PROJECT
	   ALLOW_OBJECT_LOCKING="Y"
	   COMMENTS="WA#39  DG - 3/7/14"
	   INACTIVE="N"
	   LOCKED="N"
	   NAME="TELCO Order Management"
	   UI_FREEZE="N"
	   UPDATED="08/04/2016 15:28:46"
	   UPDATED_BY="FCABRAL"
	   CREATED="07/03/2014 18:50:51"
	   CREATED_BY="DGUERREIRO"
	   FIO_PLACEHOLDER_FIO="TRUE">
		<BUSINESS_SERVICE
		   CACHE="Y"
		   CLASS="CSSService"
		   COMMENTS="WA#39  DG - 3/7/14"
		   EXTERNAL_USE="N"
		   HIDDEN="N"
		   INACTIVE="N"
		   NAME="TELCO OM Framework Utilities"
		   OBJECT_LOCKED="N"
		   SERVER_ENABLED="N"
		   STATE_MANAGEMENT_TYPE="Stateful"
		   WEB_SERVICE_ENABLED="N"
		   UPDATED="08/17/2016 15:38:22"
		   UPDATED_BY="FCABRAL"
		   CREATED="07/04/2014 20:26:44"
		   CREATED_BY="DGUERREIRO">
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetBatchValidateErrorMessages"
			   UPDATED="07/04/2014 20:26:44"
			   UPDATED_BY="DGUERREIRO"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="BatchValidateErrorMessages"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Hierarchy"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SiebelMessage"
				   OPTIONAL="N"
				   STORAGE_TYPE="Hierarchy"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetBatchValidateIncompleteErrorMessage"
			   UPDATED="07/04/2014 20:26:44"
			   UPDATED_BY="DGUERREIRO"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="BatchValidateErrorMessages"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Hierarchy"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SiebelMessage"
				   OPTIONAL="N"
				   STORAGE_TYPE="Hierarchy"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetBatchValidateInvalidErrorMessage"
			   UPDATED="07/04/2014 20:26:44"
			   UPDATED_BY="DGUERREIRO"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="BatchValidateErrorMessages"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Hierarchy"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SiebelMessage"
				   OPTIONAL="N"
				   STORAGE_TYPE="Hierarchy"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ALVESR-20081229. Set Multiple profile attributes"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetProfileAttributes"
			   UPDATED="07/04/2014 20:26:44"
			   UPDATED_BY="DGUERREIRO"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 1"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 3"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 4"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 5"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 1"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 3"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 4"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 5"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="ALVESR-20081229. Get Multiple profile attributes"
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="SetProfileAttributes"
			   UPDATED="03/09/2015 11:03:04"
			   UPDATED_BY="JSARMENTO"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 1"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 10"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:02:49"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:44"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 3"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 4"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 5"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 6"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:02:38"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:35"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 7"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:02:40"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:38"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 8"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:02:42"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:40"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Name 9"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:02:44"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:42"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 1"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 10"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:03:04"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:03:00"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 2"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 3"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 4"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 5"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/04/2014 20:26:44"
				   UPDATED_BY="DGUERREIRO"
				   CREATED="07/04/2014 20:26:44"
				   CREATED_BY="DGUERREIRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 6"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:02:54"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:52"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 7"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:02:56"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:54"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 8"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:02:59"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:56"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Attribute Value 9"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/09/2015 11:03:00"
				   UPDATED_BY="JSARMENTO"
				   CREATED="03/09/2015 11:02:59"
				   CREATED_BY="JSARMENTO">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="AddChild_WA_SR_3_12504825041"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function AddChild_WA_SR_3_12504825041(psInputs : PropertySet, psOutputs : PropertySet)
{

	/* ************************************************************************************************************
	Felipe Cabral - 2016/06/20
	
	This function build as SR_3_12504825041 WA. This is a BUG in the product So this structure will be copied to the Hierarqui
	This will be called from TELCO Batch Validate Root Item WorkFlow but this must be removed as the final solution
	***************************************************************************************************************/

	try
	{
		var psParent   : PropertySet = null;
		var psChild    : PropertySet = null;

		var sParentType    = psInputs.GetProperty(&quot;Parent Type&quot;);
		var sChildType     = psInputs.GetProperty(&quot;Child Type&quot;);
		var iChild         = 0;
		var sPropertyName  = &quot;&quot;;
		var sPropertyValue = &quot;&quot;;

		if (psInputs.GetChildCount() &lt; 2)
		{
			return;
		}

		if (sParentType == null || sParentType == &quot;&quot; || sChildType == null || sChildType == &quot;&quot;)
		{
			return;
		}

		for (iChild=0; iChild&lt;psInputs.GetChildCount(); iChild++)
		{
			psParent = psInputs.GetChild(iChild);

			if (psParent.GetType() == sParentType)
			{
				break;
			}

			psParent = null;
		}

		if (psParent == null)
		{
			return;
		}

		for (iChild=0; iChild&lt;psInputs.GetChildCount(); iChild++)
		{
			psChild = psInputs.GetChild(iChild);

			if (psChild.GetType() == sChildType)
			{
				break;
			}

			psChild = null;
		}

		if (psChild == null)
		{
			return;
		}

		/* Erro Message Level and after Eligibility Message Level */ 
		var bEligibilityMessageExist:bool = false;

		var iChildCount:float = 0;
		var iChildIndex:float = 0;
		
		var iChildCountEM:float = 0;
		var iChildIndexEM:float = 0;		

		iChildIndex = 0;		
		iChildCount = psParent.GetChildCount();		
		
		while (iChildIndex &lt; iChildCount)
		{
		
			if (psParent.GetChild(iChildIndex).GetType() == &quot;Error Message&quot;)
			{
				iChildCountEM = psParent.GetChild(iChildIndex).GetChildCount();						
				iChildIndexEM = 0;
				while (iChildIndexEM &lt; iChildCountEM)
				{
					if (psParent.GetChild(iChildIndex).GetChild(iChildIndexEM).GetType() == &quot;Eligibility Message&quot;)
					{
						bEligibilityMessageExist = true;
						break;
					}
					iChildIndexEM = iChildIndexEM + 1;				
				}	
			}
			
			if (bEligibilityMessageExist)
			{
			  break;
			}
		
			iChildIndex = iChildIndex + 1;
		}
		
		if (bEligibilityMessageExist)
		{
			psParent.GetChild(iChildIndex).GetChild(iChildIndexEM).AddChild(psChild);
			psOutputs.AddChild(psParent);
		}

		//psChild.SetType(sChildType);
		//psParent.GetChild(0).AddChild(psChild);
	}
	finally
	{
		psChild    = null;
		psParent   = null;
	}
}"
			   SEQUENCE="1"
			   UPDATED="06/20/2016 20:14:26"
			   UPDATED_BY="FCABRAL"
			   CREATED="06/20/2016 10:40:23"
			   CREATED_BY="FCABRAL">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetInstance"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetInstance(psInputs : PropertySet, psOutputs : PropertySet)
{
	var psSiebelMessage : PropertySet = null;
	var psInstance      : PropertySet = null;

	var sInstanceName  = &quot;&quot;;
	var sEmptyInstance = &quot;Y&quot;;
	var iChildCount    = 0;
	var iChildIndex    = 0;

	try
	{
		sInstanceName = psInputs.GetProperty(&quot;InstanceName&quot;);
		psInstance = TheApplication().NewPropertySet();
		psInstance.SetType(sInstanceName);

		if (psInputs.GetChildCount() == 0)
		{
			return;
		}

		psSiebelMessage = psInputs.GetChild(0);

		iChildCount = psSiebelMessage.GetChildCount();

		while (iChildIndex &lt; iChildCount)
		{
			if (psSiebelMessage.GetChild(iChildIndex).GetType() == sInstanceName)
			{
				if (psSiebelMessage.GetChild(iChildIndex).GetChildCount() &gt; 0)
				{
					psInstance.Reset();
					psInstance = psSiebelMessage.GetChild(iChildIndex).GetChild(0);
					psInstance.SetType(sInstanceName);
					sEmptyInstance = &quot;N&quot;;
				}

				break;
			}
		
			iChildIndex = iChildIndex + 1;
		}

		if (sEmptyInstance == &quot;Y&quot;)
		{
			return;
		}

		RemoveExplanations(psInstance.GetChild(0).GetChild(0).GetChild(0).GetChild(0));
	}
	finally
	{
		psOutputs.SetProperty(&quot;EmptyInstance&quot;, sEmptyInstance);
		psOutputs.AddChild(psInstance);

		psInstance      = null;
		psSiebelMessage = null;
	}
}"
			   SEQUENCE="2"
			   UPDATED="06/20/2016 10:40:23"
			   UPDATED_BY="FCABRAL"
			   CREATED="10/30/2015 09:44:10"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetProfileAttributes"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="/* ************************************************************************************************************
	Rui Alves - 2008/12/29
	
	Get Multiple User Profile Attributes
	
***************************************************************************************************************/

function GetProfileAttributes(oPSInputs:PropertySet, oPSOutputs:PropertySet)
{
	var attrName1:chars = oPSInputs.GetProperty(&quot;Attribute Name 1&quot;);
	var attrName2:chars = oPSInputs.GetProperty(&quot;Attribute Name 2&quot;);
	var attrName3:chars = oPSInputs.GetProperty(&quot;Attribute Name 3&quot;);
	var attrName4:chars = oPSInputs.GetProperty(&quot;Attribute Name 4&quot;);
	var attrName5:chars = oPSInputs.GetProperty(&quot;Attribute Name 5&quot;);
		
	if(attrName1 != &quot;&quot;)	{ oPSOutputs.SetProperty(&quot;Attribute Value 1&quot;, TheApplication().GetProfileAttr(attrName1)); }
	if(attrName2 != &quot;&quot;)	{ oPSOutputs.SetProperty(&quot;Attribute Value 2&quot;, TheApplication().GetProfileAttr(attrName2)); }
	if(attrName3 != &quot;&quot;)	{ oPSOutputs.SetProperty(&quot;Attribute Value 3&quot;, TheApplication().GetProfileAttr(attrName3)); }
	if(attrName4 != &quot;&quot;)	{ oPSOutputs.SetProperty(&quot;Attribute Value 4&quot;, TheApplication().GetProfileAttr(attrName4)); }
	if(attrName5 != &quot;&quot;)	{ oPSOutputs.SetProperty(&quot;Attribute Value 5&quot;, TheApplication().GetProfileAttr(attrName5)); }
}"
			   SEQUENCE="3"
			   UPDATED="06/20/2016 10:40:23"
			   UPDATED_BY="FCABRAL"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ReadAllBatchValidateErrors"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ReadAllBatchValidateErrors(oPSInputs:PropertySet, oPSOutputs:PropertySet)
{

	/* ************************************************************************************************************
	José Cruz - 2008/08/05
	
	This function inspects on the Batch Validate Output the errors and produces a string with all errors occurred
	
	***************************************************************************************************************/

	//Added after revision for 8.1.1.11
	ReadBatchValidateErrorsMessageTag_EC_Message(oPSInputs, oPSOutputs);
	
	// declare variables *****************************************************************************
	var sErrorMessages:chars = oPSOutputs.GetProperty(&quot;BatchValidateErrorMessages&quot;)+&quot;\n\r&quot;;
	var iChildCount:float = 0;
	var iChildIndex:float = 0;
	var iAttrCount:float = 0;
	var iAttrIndex:float = 0;
	
	oPSOutputs.RemoveProperty(&quot;BatchValidateErrorMessages&quot;);	

	// get Batch Validate Siebel Message *************************************************************
	var oPSSiebelMessage:PropertySet = oPSInputs.GetChild(0)	;
	
	// get Missing Required Attributes and Delta Quote Containers **************************************
	//Commented in revision for 8.0.0.4
	//var oPSMissingReqAttribs:PropertySet = TheApplication().NewPropertySet();
	//var bMissingReqAttribsExist:bool = false;
	var oPSDeltaQuote:PropertySet = TheApplication().NewPropertySet();
	var bDeltaQuoteExist:bool = false;
	
	iChildCount = oPSSiebelMessage.GetChildCount();
	
	while (iChildIndex &lt; iChildCount)
	{
	
		//Commented in revision for 8.0.0.4
		/*if (oPSSiebelMessage.GetChild(iChildIndex).GetType() == &quot;MissingRequiredAttr&quot;)
		{
			oPSMissingReqAttribs = oPSSiebelMessage.GetChild(iChildIndex);
			bMissingReqAttribsExist = true;
		}*/
		
		if (oPSSiebelMessage.GetChild(iChildIndex).GetType() == &quot;DeltaQuote&quot;)
		{
			oPSDeltaQuote = oPSSiebelMessage.GetChild(iChildIndex);
			bDeltaQuoteExist = true;
		}		
	
		iChildIndex = iChildIndex + 1;
	}
	
	var oPSRoot:PropertySet = TheApplication().NewPropertySet();
	var oPSChild:PropertySet = TheApplication().NewPropertySet();	
	
	// Get Missing Required Attributes ****************************************************************
	//Commented in revision for 8.0.0.4
	/*if (bMissingReqAttribsExist == true &amp;&amp; oPSMissingReqAttribs.GetChildCount() &gt; 0)
	{

		oPSRoot = oPSMissingReqAttribs.GetChild(0);
		
		iChildCount = oPSRoot.GetChildCount();
		iChildIndex = 0;
		
		while (iChildIndex &lt; iChildCount)
		{
			oPSChild = oPSRoot.GetChild(iChildIndex);
			
			iAttrCount = oPSChild.GetChildCount();
			iAttrIndex = 0;
			
			if (sErrorMessages != &quot;&quot;)
			{
				sErrorMessages = sErrorMessages + &quot;\n\r&quot;;
			}
			
			sErrorMessages = sErrorMessages + &quot;Missing Required Attribute(s) for &quot; + oPSChild.GetProperty(&quot;Name&quot;) + &quot;:&quot;
			
			while (iAttrIndex &lt; iAttrCount)
			{
				sErrorMessages = sErrorMessages + &quot;\n\r\t&quot; + &quot; - &quot; + oPSChild.GetChild(iAttrIndex).GetProperty(&quot;Display Name&quot;);
			
				iAttrIndex = iAttrIndex + 1;
			}
			
			iChildIndex = iChildIndex + 1;
		}
		
	}
	*/
		
	// Get Delta Quote Automated changes *************************************************************		
	if (bDeltaQuoteExist == true)
	{

		var sPropertyExists:bool = false;
		var iPropertyIndex:float = 0;

		var oPSOrder:PropertySet = oPSDeltaQuote.GetChild(0).GetChild(0).GetChild(0);
		oPSRoot = oPSOrder.GetChild(0).GetChild(0);
		
		iChildCount = oPSRoot.GetChildCount();
		iChildIndex = 0;

		// get explanations of line items *************************************************************		
		while (iChildIndex &lt; iChildCount)
		{
			oPSChild = oPSRoot.GetChild(iChildIndex);

			if (oPSChild.GetType() == &quot;Line Item&quot;)
			{
				iPropertyIndex = 0;
				sPropertyExists = oPSChild.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
				
				if (sPropertyExists)
				{
					if (sErrorMessages != &quot;&quot;)				
						sErrorMessages = sErrorMessages + &quot;\n\rThe product &quot; + oPSChild.GetProperty(&quot;Name&quot;) + 
							&quot; has the following messages:&quot;;
					else
						sErrorMessages = &quot;The product &quot; + oPSChild.GetProperty(&quot;Name&quot;) + &quot; has the following messages:&quot;;
						
				}
			
				while (sPropertyExists)	
				{
					sErrorMessages = sErrorMessages + &quot;\n\r\t&quot; + &quot; - &quot; + oPSChild.GetProperty(&quot;Expl&quot; + ToString(iPropertyIndex));
				
					iPropertyIndex = iPropertyIndex + 1;
					sPropertyExists = oPSChild.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
				}	
			}
			
			iChildIndex = iChildIndex + 1;
		}
		
	}	

	// set output ************************************************************************************
	sErrorMessages = sErrorMessages.replace(&quot;&lt;p&gt;&lt;/p&gt;&quot;, &quot;\n\r&quot;);
	oPSOutputs.SetProperty(&quot;BatchValidateErrorMessages&quot;, sErrorMessages);

	//destroy variables ******************************************************************************
	oPSSiebelMessage = null;
	//Commented in revision for 8.0.0.4
	//oPSMissingReqAttribs = null;
	oPSDeltaQuote = null;
	oPSRoot = null;
	oPSChild = null;
	oPSOrder = null;
		
}"
			   SEQUENCE="4"
			   UPDATED="06/20/2016 16:24:40"
			   UPDATED_BY="FCABRAL"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ReadBatchValidateErrorMessageTag"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ReadBatchValidateErrorMessageTag(oPSInputs:PropertySet, oPSOutputs:PropertySet)
{

	/* ************************************************************************************************************
	José Cruz - 2008/08/05
	
	This function inspects on the Batch Validate Output the errors and produces a string with all errors occurred
	
	***************************************************************************************************************/

	// declare variables *****************************************************************************
	var sErrorMessages:chars = &quot;&quot;;
	var iChildCount:float = 0;
	var iChildIndex:float = 0;

	// get Batch Validate Siebel Message *************************************************************
	var oPSSiebelMessage:PropertySet = oPSInputs.GetChild(0)	;
	
	// get Error Messages container *******************************************************************
	var oPSErrorMessages:PropertySet = TheApplication().NewPropertySet();
	
	iChildCount = oPSSiebelMessage.GetChildCount();
	
	while (iChildIndex &lt; iChildCount)
	{
	
		if (oPSSiebelMessage.GetChild(iChildIndex).GetType() == &quot;Error Message&quot;)
		{
			oPSErrorMessages = oPSSiebelMessage.GetChild(iChildIndex);
			break;
		}
	
		iChildIndex = iChildIndex + 1;
	}
	
	// get error messages strings ********************************************************************
	var iUpperChildIndex:float = 0;
	var iUpperChildCount:float = oPSErrorMessages.GetChildCount()
	
	while (iUpperChildIndex &lt; iUpperChildCount)
	{
		var oPSCustomizeMessage:PropertySet = oPSErrorMessages.GetChild(iUpperChildIndex);
		var sPropertyExists:bool = false;
		var iPropertyIndex:float = 0;
	
		sPropertyExists = oPSCustomizeMessage.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
	
		while (sPropertyExists)	
		{
			if (sErrorMessages != &quot;&quot;)
			{
				sErrorMessages = sErrorMessages + &quot;\n\r&quot;;
			}
		
			sErrorMessages = sErrorMessages + oPSCustomizeMessage.GetProperty(&quot;Expl&quot; + ToString(iPropertyIndex));
		
			iPropertyIndex = iPropertyIndex + 1;
			sPropertyExists = oPSCustomizeMessage.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
		}
		
		// get detailled error messages ******************************************************************
		iChildCount = oPSCustomizeMessage.GetChildCount();
		iChildIndex = 0;
		var oPSDetailledMessage:PropertySet = TheApplication().NewPropertySet();
		
		while (iChildIndex &lt; iChildCount)
		{
			iPropertyIndex = 0;
			oPSDetailledMessage = oPSCustomizeMessage.GetChild(iChildIndex);
			sPropertyExists = oPSDetailledMessage.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
		
			while (sPropertyExists)	
			{
				if (sErrorMessages != &quot;&quot;)
				{
					sErrorMessages = sErrorMessages + &quot;\n\r&quot;;
				}
			
				sErrorMessages = sErrorMessages + oPSDetailledMessage.GetProperty(&quot;Expl&quot; + ToString(iPropertyIndex));
			
				iPropertyIndex = iPropertyIndex + 1;
				sPropertyExists = oPSDetailledMessage.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
			}	
			
			iChildIndex = iChildIndex + 1;
		}
		
		iUpperChildIndex = iUpperChildIndex + 1;
	}
		
	// set output ************************************************************************************
	sErrorMessages = sErrorMessages.replace(&quot;&lt;p&gt;&lt;/p&gt;&quot;, &quot;\n\r&quot;);
	oPSOutputs.SetProperty(&quot;BatchValidateErrorMessages&quot;, sErrorMessages);
	
	//destroy variables ******************************************************************************
	oPSSiebelMessage = null;
	oPSErrorMessages = null;
	oPSCustomizeMessage = null;
	oPSDetailledMessage = null;

}"
			   SEQUENCE="5"
			   UPDATED="06/20/2016 10:40:23"
			   UPDATED_BY="FCABRAL"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ReadBatchValidateErrorsMessageTag_EC_Message"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ReadBatchValidateErrorsMessageTag_EC_Message(oPSInputs:PropertySet, oPSOutputs:PropertySet)
{

	/* ************************************************************************************************************
	Felipe Cabral - 2016/06/20
	
	This function inspects on the Batch Validate Output the errors and produces a string with Eligibility_Reason errors occurred
	inside the Eligibility Message session inside Error Message 	
	***************************************************************************************************************/

	//Added after revision for 8.0.0.4
	ReadBatchValidateErrorMessageTag(oPSInputs, oPSOutputs);
	
	// declare variables *****************************************************************************
	var sErrorMessages:chars = oPSOutputs.GetProperty(&quot;BatchValidateErrorMessages&quot;)+&quot;\n\r&quot;;
	var iChildCount:float = 0;
	var iChildIndex:float = 0;
	
	var iChildCountEM:float = 0;
	var iChildIndexEM:float = 0;	
	
	var iAttrCount:float = 0;
	var iAttrIndex:float = 0;
	
	oPSOutputs.RemoveProperty(&quot;BatchValidateErrorMessages&quot;);	

	// get Batch Validate Siebel Message *************************************************************
	var oPSSiebelMessage:PropertySet = oPSInputs.GetChild(0)	;
	
	var oPSErrorMessage:PropertySet = TheApplication().NewPropertySet();
	var oPSREligibilityMessage:PropertySet = TheApplication().NewPropertySet();
	var bEligibilityMessageExist:bool = false;
	
	iChildCount = oPSSiebelMessage.GetChildCount();
	
	while (iChildIndex &lt; iChildCount)
	{
	
		if (oPSSiebelMessage.GetChild(iChildIndex).GetType() == &quot;Error Message&quot;)
		{
			oPSErrorMessage = oPSSiebelMessage.GetChild(iChildIndex);
			iChildCountEM = oPSErrorMessage.GetChildCount();						
			iChildIndexEM = 0;
			while (iChildIndexEM &lt; iChildCountEM)
			{
				if (oPSErrorMessage.GetChild(iChildIndexEM).GetType() == &quot;Eligibility Message&quot;)
				{
					oPSREligibilityMessage = oPSErrorMessage.GetChild(iChildIndexEM);
					bEligibilityMessageExist = true;
				}
				iChildIndexEM = iChildIndexEM + 1;				
			}	
		}
	
		iChildIndex = iChildIndex + 1;
	}
	
	var oPSItems:PropertySet = TheApplication().NewPropertySet();
	var oPSChild:PropertySet = TheApplication().NewPropertySet();	

	
	// Get Delta Quote Automated changes *************************************************************		
	if (bEligibilityMessageExist == true)
	{

		var sPropertyExists:bool = false;
		var iPropertyIndex:float = 0;
		
		sPropertyExists = oPSREligibilityMessage.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
	
		while (sPropertyExists)	
		{
			if (sErrorMessages != &quot;&quot;)
			{
				sErrorMessages = sErrorMessages + &quot;\n\r&quot;;
			}
		
			sErrorMessages = sErrorMessages + oPSREligibilityMessage.GetProperty(&quot;Expl&quot; + ToString(iPropertyIndex));
		
			iPropertyIndex = iPropertyIndex + 1;
			sPropertyExists = oPSREligibilityMessage.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
		}
			

		if (oPSREligibilityMessage.GetChildCount()&gt;0)
		{ 						
			oPSItems = oPSREligibilityMessage.GetChild(0); // Items Level
			//oPSItems = oPSItems.GetChild(0).GetChild(0);
			
			iChildCount = oPSItems.GetChildCount();
			iChildIndex = 0;
	
			// get explanations of line items *************************************************************		
			while (iChildIndex &lt; iChildCount) 
			{
				oPSChild = oPSItems.GetChild(iChildIndex);
	
				if (oPSChild.GetType() == &quot;Line Item&quot;)
				{
					iPropertyIndex = 0;
					sPropertyExists = oPSChild.PropertyExists(&quot;Eligibility Reason&quot;);
					
					if (sPropertyExists)
					{
						if (sErrorMessages != &quot;&quot;)				
							sErrorMessages = sErrorMessages + &quot;\n\rThe product &quot; + oPSChild.GetProperty(&quot;Name&quot;) + 
								&quot; has the following messages:&quot;;
						else
							sErrorMessages = &quot;The product &quot; + oPSChild.GetProperty(&quot;Name&quot;) + &quot; has the following messages:&quot;;
							
					}
				
					//while (sPropertyExists)	
					//{
						sErrorMessages = sErrorMessages + &quot;\n\r\t&quot; + &quot; - &quot; + oPSChild.GetProperty(&quot;Eligibility Reason&quot;);
					
					//	iPropertyIndex = iPropertyIndex + 1;
					//	sPropertyExists = oPSChild.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
					//}	
				}
				
				iChildIndex = iChildIndex + 1;
			}
		}
		
	}	

	// set output ************************************************************************************
	sErrorMessages = sErrorMessages.replace(&quot;&lt;p&gt;&lt;/p&gt;&quot;, &quot;\n\r&quot;);
	oPSOutputs.SetProperty(&quot;BatchValidateErrorMessages&quot;, sErrorMessages);

	//destroy variables ******************************************************************************
	oPSSiebelMessage = null;
	oPSErrorMessage = null;
	oPSREligibilityMessage  = null;

	oPSItems = null;
	oPSChild = null;
	//oPSOrder = null;
		
}"
			   SEQUENCE="6"
			   UPDATED="08/04/2016 15:28:46"
			   UPDATED_BY="FCABRAL"
			   CREATED="06/20/2016 14:35:50"
			   CREATED_BY="FCABRAL">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="RemoveExplanations"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function RemoveExplanations(psLineItem : PropertySet)
{
	try
	{
		var psChild : PropertySet = null;
		var psXA    : PropertySet = null;

		var iPropertyIndex  = 0;
		var bPropertyExists = false;
		var iChildIndex     = 0;
		var iChildCount     = 0;
		var iXAIndex        = 0;
		var iXACount        = 0;

		iPropertyIndex  = 0;
		bPropertyExists = psLineItem.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));

		while (bPropertyExists)	
		{
			psLineItem.RemoveProperty(&quot;Expl&quot; + ToString(iPropertyIndex));
				
			iPropertyIndex  = iPropertyIndex + 1;
			bPropertyExists = psLineItem.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
		}

		iChildIndex = 0;
		iChildCount = psLineItem.GetChildCount();

		while (iChildIndex &lt; iChildCount)
		{
			psChild = psLineItem.GetChild(iChildIndex);

			if (psChild.GetType() == &quot;Line Item&quot;)
			{
				RemoveExplanations(psChild);
			}

			if (psChild.GetType() == &quot;ListOfXA&quot;)
			{
				iXAIndex = 0;
				iXACount = psChild.GetChildCount();

				while (iXAIndex &lt; iXACount)
				{
					psXA = psChild.GetChild(iXAIndex);
					iPropertyIndex  = 0;
					bPropertyExists = psXA.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));

					while (bPropertyExists)	
					{
						psXA.RemoveProperty(&quot;Expl&quot; + ToString(iPropertyIndex));
							
						iPropertyIndex  = iPropertyIndex + 1;
						bPropertyExists = psXA.PropertyExists(&quot;Expl&quot; + ToString(iPropertyIndex));
					}	

					iXAIndex = iXAIndex + 1;
				}
			}

			iChildIndex = iChildIndex + 1;
		}
	}
	finally
	{
	}
}"
			   SEQUENCE="7"
			   UPDATED="06/20/2016 14:35:50"
			   UPDATED_BY="FCABRAL"
			   CREATED="10/30/2015 09:44:10"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreInvokeMethod (MethodName:chars, Inputs:PropertySet, Outputs:PropertySet)
{
	
	switch (MethodName)
	{
		case &quot;GetBatchValidateInvalidErrorMessage&quot;:
			ReadBatchValidateErrorMessageTag(Inputs, Outputs);
			return (CancelOperation);
			
		case &quot;GetBatchValidateIncompleteErrorMessage&quot;:
			ReadAllBatchValidateErrors(Inputs, Outputs);
			return (CancelOperation);
			
		case &quot;GetBatchValidateErrorMessages&quot;:
			ReadAllBatchValidateErrors(Inputs, Outputs);
			return (CancelOperation);
		
		case &quot;SetProfileAttributes&quot;:
			SetProfileAttributes(Inputs, Outputs);
			return (CancelOperation);
		
		case &quot;GetProfileAttributes&quot;:
			GetProfileAttributes(Inputs, Outputs);
			return (CancelOperation);

		case &quot;GetInstance&quot;:
			GetInstance(Inputs, Outputs);
			return (CancelOperation);
		case &quot;AddChild_WA_SR_3_12504825041&quot;:
		    AddChild_WA_SR_3_12504825041(Inputs, Outputs);
		    return (CancelOperation); 
	}

	return (ContinueOperation);
}"
			   SEQUENCE="9"
			   UPDATED="06/20/2016 14:35:50"
			   UPDATED_BY="FCABRAL"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="SetProfileAttributes"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="/* ************************************************************************************************************
	Rui Alves - 2008/12/29
	
	Set Multiple User Profile Attributes
	
***************************************************************************************************************/

function SetProfileAttributes(oPSInputs:PropertySet, oPSOutputs:PropertySet)
{
	var attrName1:chars = oPSInputs.GetProperty(&quot;Attribute Name 1&quot;);
	var attrName2:chars = oPSInputs.GetProperty(&quot;Attribute Name 2&quot;);
	var attrName3:chars = oPSInputs.GetProperty(&quot;Attribute Name 3&quot;);
	var attrName4:chars = oPSInputs.GetProperty(&quot;Attribute Name 4&quot;);
	var attrName5:chars = oPSInputs.GetProperty(&quot;Attribute Name 5&quot;);
	var attrName6:chars = oPSInputs.GetProperty(&quot;Attribute Name 6&quot;);
	var attrName7:chars = oPSInputs.GetProperty(&quot;Attribute Name 7&quot;);
	var attrName8:chars = oPSInputs.GetProperty(&quot;Attribute Name 8&quot;);
	var attrName9:chars = oPSInputs.GetProperty(&quot;Attribute Name 9&quot;);
	var attrName10:chars = oPSInputs.GetProperty(&quot;Attribute Name 10&quot;);
	var attrValue1:chars = oPSInputs.GetProperty(&quot;Attribute Value 1&quot;);
	var attrValue2:chars = oPSInputs.GetProperty(&quot;Attribute Value 2&quot;);
	var attrValue3:chars = oPSInputs.GetProperty(&quot;Attribute Value 3&quot;);
	var attrValue4:chars = oPSInputs.GetProperty(&quot;Attribute Value 4&quot;);
	var attrValue5:chars = oPSInputs.GetProperty(&quot;Attribute Value 5&quot;);
	var attrValue6:chars = oPSInputs.GetProperty(&quot;Attribute Value 6&quot;);
	var attrValue7:chars = oPSInputs.GetProperty(&quot;Attribute Value 7&quot;);
	var attrValue8:chars = oPSInputs.GetProperty(&quot;Attribute Value 8&quot;);
	var attrValue9:chars = oPSInputs.GetProperty(&quot;Attribute Value 9&quot;);
	var attrValue10:chars = oPSInputs.GetProperty(&quot;Attribute Value 10&quot;);
	
	if(attrName1 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName1, attrValue1); }
	if(attrName2 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName2, attrValue2); }
	if(attrName3 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName3, attrValue3); }
	if(attrName4 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName4, attrValue4); }
	if(attrName5 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName5, attrValue5); }
	if(attrName6 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName6, attrValue6); }
	if(attrName7 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName7, attrValue7); }
	if(attrName8 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName8, attrValue8); }
	if(attrName9 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName9, attrValue9); }
	if(attrName10 != &quot;&quot;)	{ TheApplication().SetProfileAttr(attrName10, attrValue10); }
}"
			   SEQUENCE="8"
			   UPDATED="06/20/2016 14:35:50"
			   UPDATED_BY="FCABRAL"
			   CREATED="07/04/2014 20:26:44"
			   CREATED_BY="DGUERREIRO">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
		</BUSINESS_SERVICE>
	</PROJECT>
</REPOSITORY>



