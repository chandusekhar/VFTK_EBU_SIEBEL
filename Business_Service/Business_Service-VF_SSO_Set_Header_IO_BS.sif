<?xml version="1.0" encoding="UTF-8"?>
<REPOSITORY
   NAME="Siebel Repository"
   UPDATED="08/11/2017 16:02:15"
   UPDATED_BY="SADMIN"
   CREATED="08/11/2017 11:53:44"
   CREATED_BY="SADMIN"
   FIO_PLACEHOLDER_FIO="TRUE">
	<PROJECT
	   ALLOW_OBJECT_LOCKING="Y"
	   COMMENTS="New Project for Asset Management"
	   INACTIVE="N"
	   LOCKED="N"
	   NAME="Asset Management"
	   UI_FREEZE="N"
	   UPDATED="01/20/2018 12:56:34"
	   UPDATED_BY="IBM_MSAFA"
	   CREATED="08/17/1998 18:50:31"
	   CREATED_BY="SADMIN"
	   FIO_PLACEHOLDER_FIO="TRUE">
		<BUSINESS_SERVICE
		   CACHE="N"
		   CLASS="CSSService"
		   COMMENTS="VFTK Pallavi R1.4.2 20110411 - Added for WP18"
		   EXTERNAL_USE="N"
		   HIDDEN="N"
		   INACTIVE="N"
		   NAME="VF SSO Set Header IO BS"
		   OBJECT_LOCKED="N"
		   SERVER_ENABLED="Y"
		   STATE_MANAGEMENT_TYPE="Stateful"
		   WEB_SERVICE_ENABLED="N"
		   UPDATED="01/20/2018 15:34:59"
		   UPDATED_BY="IBM_MSAFA"
		   CREATED="05/10/2011 08:47:42"
		   CREATED_BY="SADMIN">
			<BUSINESS_SERVICE_LOCALE
			   APPLICATION_CODE="STD"
			   DISPLAY_NAME="VF SSO Wrapper"
			   INACTIVE="N"
			   LANGUAGE_CODE="ENU"
			   NAME="ENU-STD"
			   TRANSLATE="Y"
			   UPDATED="05/10/2011 08:47:42"
			   UPDATED_BY="SADMIN"
			   CREATED="05/10/2011 08:47:42"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_LOCALE>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetHeaderInfo"
			   UPDATED="03/01/2012 07:48:52"
			   UPDATED_BY="SADMIN"
			   CREATED="03/01/2012 07:48:52"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Application Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/01/2012 07:48:52"
				   UPDATED_BY="SADMIN"
				   CREATED="03/01/2012 07:48:52"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Channel"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="03/01/2012 07:48:52"
				   UPDATED_BY="SADMIN"
				   CREATED="03/01/2012 07:48:52"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="TimeStamp"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="03/01/2012 07:48:52"
				   UPDATED_BY="SADMIN"
				   CREATED="03/01/2012 07:48:52"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="TransactionId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="03/01/2012 07:48:52"
				   UPDATED_BY="SADMIN"
				   CREATED="03/01/2012 07:48:52"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetHeaderInfo"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="03/01/2012 07:48:52"
				   UPDATED_BY="SADMIN"
				   CREATED="03/01/2012 07:48:52"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="QueryUserPass"
			   UPDATED="02/22/2013 14:29:47"
			   UPDATED_BY="SADMIN"
			   CREATED="02/22/2013 14:29:47"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AppIdQuery"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="02/22/2013 14:29:47"
				   UPDATED_BY="SADMIN"
				   CREATED="02/22/2013 14:29:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Application Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="02/22/2013 14:29:47"
				   UPDATED_BY="SADMIN"
				   CREATED="02/22/2013 14:29:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Password"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="02/22/2013 14:29:47"
				   UPDATED_BY="SADMIN"
				   CREATED="02/22/2013 14:29:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="User"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="02/22/2013 14:29:47"
				   UPDATED_BY="SADMIN"
				   CREATED="02/22/2013 14:29:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="QueryUserPass"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="02/22/2013 14:29:47"
				   UPDATED_BY="SADMIN"
				   CREATED="02/22/2013 14:29:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="SetHeaderIO"
			   UPDATED="05/10/2011 08:47:42"
			   UPDATED_BY="SADMIN"
			   CREATED="05/10/2011 08:47:42"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Application Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="05/10/2011 08:47:42"
				   UPDATED_BY="SADMIN"
				   CREATED="05/10/2011 08:47:42"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Hierarchy"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Header"
				   OPTIONAL="N"
				   STORAGE_TYPE="Hierarchy"
				   TYPE="Output"
				   UPDATED="05/10/2011 08:47:42"
				   UPDATED_BY="SADMIN"
				   CREATED="05/10/2011 08:47:42"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="SetHeaderIO"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="05/10/2011 08:47:42"
				   UPDATED_BY="SADMIN"
				   CREATED="05/10/2011 08:47:42"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="XMLData"
			   UPDATED="12/15/2012 11:45:01"
			   UPDATED_BY="SADMIN"
			   CREATED="05/10/2011 08:47:42"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Hierarchy"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AppData"
				   OPTIONAL="N"
				   STORAGE_TYPE="Hierarchy"
				   TYPE="Input"
				   UPDATED="12/15/2012 11:45:01"
				   UPDATED_BY="SADMIN"
				   CREATED="12/15/2012 11:45:01"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   COMMENTS="CR_117/197 inactive"
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AppName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/15/2012 11:45:01"
				   UPDATED_BY="SADMIN"
				   CREATED="07/21/2011 18:13:52"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   COMMENTS="CR_117/197 inactive ----GEN_REQ_730/CR526 : SS :08/11/2012: Created new"
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="Y"
				   NAME="MSISDN"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/15/2012 11:45:01"
				   UPDATED_BY="SADMIN"
				   CREATED="11/08/2012 08:25:55"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="XMLData"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="05/10/2011 08:47:42"
				   UPDATED_BY="SADMIN"
				   CREATED="05/10/2011 08:47:42"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="XMLData"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="05/10/2011 08:47:42"
				   UPDATED_BY="SADMIN"
				   CREATED="05/10/2011 08:47:42"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetHeaderInfo"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetHeaderInfo (Inputs, Outputs) //Set the HEADER IO
{
	try
	{
			var strChannel         = &quot;Siebel&quot;; 
			var strTimeStamp       = &quot;&quot;; 
			var strTransactionID   = &quot;Siebel-&quot;;
			
			var VFSequenceBo		: BusObject = TheApplication().GetBusObject(&quot;VF Sequence BO&quot;);
			var VFSequenceBc		: BusComp = VFSequenceBo.GetBusComp(&quot;VF Sequence BusComp&quot;);
			var strProcessName 		= Inputs.GetProperty(&quot;Application Name&quot;);	

			VFSequenceBc.NewRecord(NewAfter);
			VFSequenceBc.SetFieldValue(&quot;Process Name&quot;,strProcessName);
			VFSequenceBc.WriteRecord();
			var strSearchSpec = VFSequenceBc.GetFieldValue(&quot;Id&quot;);
			
			VFSequenceBc.ClearToQuery();
			//VFTK Junaid 20120519 - Scripting 15 not needed as getfieldvalue of id wont return a null value
			VFSequenceBc.SetSearchSpec(&quot;Id&quot;, strSearchSpec);
			VFSequenceBc.ExecuteQuery(ForwardOnly);
			
			var booRecordExists = VFSequenceBc.FirstRecord ();  
			
			if (booRecordExists)
			{
				var strSequenceNumberMNP = VFSequenceBc.GetFieldValue(&quot;Sequence&quot;);
				strTransactionID = strTransactionID+strSequenceNumberMNP;
			}
							
			var SysDate = Clib.time();
			strTimeStamp = Date.fromSystem(SysDate);
	       	var startYear = strTimeStamp.getFullYear();                                               
	       	var startMonth = strTimeStamp.getMonth() + 1;
	       	var startDay = strTimeStamp.getDate();
	       	var startHour = strTimeStamp.getHours();
	       	var startMinute =strTimeStamp.getMinutes();
	       	var startSecond =strTimeStamp.getSeconds();
	        strTimeStamp = startMonth +&quot;/&quot;+ startDay +&quot;/&quot;+ startYear +&quot; &quot;+startHour+&quot;:&quot;+startMinute+&quot;:&quot;+startSecond;
	        
			Outputs.SetProperty (&quot;Channel&quot;,strChannel);
			Outputs.SetProperty (&quot;TransactionId&quot;,strTransactionID);
			Outputs.SetProperty (&quot;TimeStamp&quot;,strTimeStamp);
	}
	finally
	{
		VFSequenceBc	 = null;
		VFSequenceBo = null;
	}
	return (CancelOperation);
}"
			   SEQUENCE="1"
			   UPDATED="09/03/2012 17:44:17"
			   UPDATED_BY="SADMIN"
			   CREATED="03/01/2012 07:48:52"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="QueryUserPass"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function QueryUserPass(Inputs,Outputs)
{
	try{//DD fix start
			var boListOfVal 		: BusObject =  TheApplication().GetBusObject(&quot;List Of Values&quot;);
			var bcListOfVal 		: BusComp = boListOfVal.GetBusComp(&quot;List Of Values&quot;);
			var strProcessName 		= Inputs.GetProperty(&quot;Application Name&quot;);
			var strAppId = &quot;&quot;;
			
			with(bcListOfVal)
			{
				SetViewMode(AllView);
				ClearToQuery();                                                     
				ActivateField(&quot;High&quot;);
				ActivateField(&quot;Low&quot;);
				ActivateField(&quot;Sub Type&quot;);
				SetSearchExpr(&quot;[Type] = &apos;APP_SSO_USER&apos; AND [Name] = &apos;&quot;+ strProcessName +&quot;&apos;&quot;);    
				ExecuteQuery(ForwardOnly);
				if(FirstRecord())
				{
					var strUser = GetFieldValue(&quot;High&quot;);
					var strPass = GetFieldValue(&quot;Low&quot;);
					strAppId = GetFieldValue(&quot;Sub Type&quot;);
					Outputs.SetProperty(&quot;User&quot;,strUser);
					Outputs.SetProperty(&quot;Password&quot;,strPass);
					Outputs.SetProperty(&quot;AppIdQuery&quot;,strAppId);
				}
				else
				{
					Outputs.SetProperty(&quot;User&quot;,&quot;anonymous&quot;);
					Outputs.SetProperty(&quot;Password&quot;,&quot;anonymous&quot;);
					Outputs.SetProperty(&quot;AppIdQuery&quot;,strAppId);
				}
				
				
			}
		}
		finally{
		
			bcListOfVal = null;
			boListOfVal = null;
		}
}"
			   SEQUENCE="2"
			   UPDATED="02/22/2013 14:29:47"
			   UPDATED_BY="SADMIN"
			   CREATED="02/22/2013 14:29:47"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreCanInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreCanInvokeMethod (MethodName, &amp;CanInvoke)
{
	if (MethodName == &quot;SetHeaderIO&quot;)
	{
		CanInvoke = &apos;TRUE&apos;;
	}
	return (ContinueOperation);
}"
			   SEQUENCE="5"
			   UPDATED="02/22/2013 14:29:47"
			   UPDATED_BY="SADMIN"
			   CREATED="05/10/2011 08:47:42"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreInvokeMethod (MethodName, Inputs, Outputs)
{
	if (MethodName == &quot;SetHeaderIO&quot;)
	{
		SetHeaderIO (Inputs, Outputs)
		return(CancelOperation);
	}
	if (MethodName == &quot;XMLData&quot;)
	{
		XMLData (Inputs, Outputs)
		return(CancelOperation);
	}
	if (MethodName == &quot;GetHeaderInfo&quot;)
	{
		GetHeaderInfo (Inputs, Outputs)
		return(CancelOperation);
	}
	if (MethodName == &quot;QueryUserPass&quot;)
	{
		QueryUserPass (Inputs, Outputs)
		return(CancelOperation);
	}
	return (ContinueOperation);
}"
			   SEQUENCE="6"
			   UPDATED="02/22/2013 14:29:47"
			   UPDATED_BY="SADMIN"
			   CREATED="05/10/2011 08:47:42"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="SetHeaderIO"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function SetHeaderIO (Inputs, Outputs) //Set the HEADER IO
{
	try
	{
			var strChannel         = &quot;Siebel&quot;; 
			var strTimeStamp       = &quot;&quot;; 
			var strTransactionID   = &quot;Siebel-&quot;;
			
			var VFSequenceBo		: BusObject = TheApplication().GetBusObject(&quot;VF Sequence BO&quot;);
			var VFSequenceBc		: BusComp = VFSequenceBo.GetBusComp(&quot;VF Sequence BusComp&quot;);
			var strProcessName 		= Inputs.GetProperty(&quot;Application Name&quot;);	
		
		//DD fix start
			var boListOfVal 		: BusObject =  TheApplication().GetBusObject(&quot;List Of Values&quot;);
			var bcListOfVal 		: BusComp = boListOfVal.GetBusComp(&quot;List Of Values&quot;);
			var strProcessNameLOV	= &quot;&quot;;
			
			with(bcListOfVal)
			{
				SetViewMode(AllView);
				ClearToQuery();                                                     
				ActivateField(&quot;Description&quot;)
				SetSearchExpr(&quot;[Type] = &apos;APP_SSO_USER&apos; AND [Name] = &apos;&quot;+ strProcessName +&quot;&apos;&quot;);    
				ExecuteQuery(ForwardOnly);
				if(FirstRecord())
				{
					strProcessNameLOV = GetFieldValue(&quot;Description&quot;);
				}
				else{
					strProcessNameLOV = strProcessName;
				}
			}
			//if ((strProcessName == &quot;iCRM&quot;)||(strProcessName == &quot;newNSN&quot;)||(strProcessName == &quot;newVMS&quot;))
			//if ((strProcessName == &quot;iCRM&quot;)||(strProcessName.substring(0,3)==&quot;new&quot;))
				//strProcessName = &quot;&quot;;
			//DD fix end
			
			VFSequenceBc.NewRecord(NewAfter);
			//VFSequenceBc.SetFieldValue(&quot;Process Name&quot;,strProcessName);
			VFSequenceBc.SetFieldValue(&quot;Process Name&quot;,strProcessNameLOV);//DD fix
			VFSequenceBc.WriteRecord();
			var strSearchSpec = VFSequenceBc.GetFieldValue(&quot;Id&quot;);
			
			VFSequenceBc.ClearToQuery();
			//VFTK Junaid 20120519 - Scripting 15 not needed as getfieldvalue of id wont return a null value
			VFSequenceBc.SetSearchSpec(&quot;Id&quot;, strSearchSpec);
			VFSequenceBc.ExecuteQuery(ForwardOnly);
			
			var booRecordExists = VFSequenceBc.FirstRecord ();  
			
			if (booRecordExists)
			{
				var strSequenceNumberMNP = VFSequenceBc.GetFieldValue(&quot;Sequence&quot;);
				strTransactionID = strTransactionID+strSequenceNumberMNP;
			}
			
			var psInputIO_HEADER : PropertySet = TheApplication().NewPropertySet();
			var psTempChild : PropertySet  = TheApplication().NewPropertySet();
			var psChild  : PropertySet = TheApplication().NewPropertySet();
				
			var SysDate = Clib.time();
			strTimeStamp = Date.fromSystem(SysDate);
	       	var startYear = strTimeStamp.getFullYear();                                               
	       	var startMonth = strTimeStamp.getMonth() + 1;
	       	var startDay = strTimeStamp.getDate();
	       	var startHour = strTimeStamp.getHours();
	       	var startMinute =strTimeStamp.getMinutes();
	       	var startSecond =strTimeStamp.getSeconds();
	        strTimeStamp = startMonth +&quot;/&quot;+ startDay +&quot;/&quot;+ startYear +&quot; &quot;+startHour+&quot;:&quot;+startMinute+&quot;:&quot;+startSecond;
	        
		  //JIRA-3448:20141205:MSS - Begin
          //psTempChild.SetType(&quot;ListOfHEADER&quot;);
			psTempChild.SetType(&quot;ListOfHEADER_MAXIMO&quot;);
	      //JIRA-3448 - End 			
			psChild.SetType (&quot;HEADER&quot;);
			psChild.SetProperty (&quot;CHANNEL&quot;, strChannel);
			psChild.SetProperty (&quot;TIMESTAMP&quot;, strTimeStamp);
			psChild.SetProperty (&quot;TRANSACTION_ID&quot;, strTransactionID);
			psTempChild.AddChild (psChild);
			
			psInputIO_HEADER.AddChild (psTempChild);
			
			psInputIO_HEADER.SetType(&quot;Header&quot;);
			Outputs.AddChild (psInputIO_HEADER);
	}
	finally
	{
		VFSequenceBc		= null;
		VFSequenceBo		= null;
		psInputIO_HEADER 	= null;
		psTempChild  		= null;
		psChild 			= null;
	}
	return (CancelOperation);
}"
			   SEQUENCE="3"
			   UPDATED="12/17/2014 01:31:23"
			   UPDATED_BY="SADMIN"
			   CREATED="05/10/2011 08:47:42"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="XMLData"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function XMLData(Inputs, Outputs)
{
	try
	{
		var psCreateIn : PropertySet = TheApplication().NewPropertySet();
		var psCreateOut : PropertySet = TheApplication().NewPropertySet();
		var bsUtiService : Service = TheApplication().GetService(&quot;PRM ANI Utility Service&quot;);
		var msisdn = &quot;&quot;;
		var sAccountNum = &quot;&quot;;//RCRISPIM: VFTRCBU-10711 - END
		var GroupId=&quot;&quot;;
		var appName = Inputs.GetProperty(&quot;AppName&quot;);
		// DD CR_117 and CR_197 Go
		var boListOfVal = TheApplication().GetBusObject(&quot;List Of Values&quot;);
		var bcListOfVal = boListOfVal.GetBusComp(&quot;List Of Values&quot;);
		var msisdn1=&quot;&quot;;
		var xmlData=&quot;&quot;;
		var i;		
		psCreateIn.SetProperty(&quot;System Preference Name&quot;,&quot;SSO_DUMAN_APP_USER&quot;);
		bsUtiService.InvokeMethod(&quot;GetSystemPreference&quot;,psCreateIn,psCreateOut);		
		var strDocumentum = psCreateOut.GetProperty(&quot;System Preference Value&quot;);
		if(appName.substring(0,3)==&quot;new&quot;)
		{    
			if (Inputs.GetChildCount()&gt;0)
			{
				for (i=0; i&lt;Inputs.GetChildCount(); i++)
				{
					var sType = Inputs.GetChild(i).GetType();
					if (Inputs.GetChild(i).GetType()==&quot;AppData&quot;)
					{
						with(bcListOfVal)
						{
							SetViewMode(AllView);
							ClearToQuery();                                                     
							ActivateField(&quot;VF Long Description&quot;)
							SetSearchExpr(&quot;[Type] = &apos;APP_SSO_USER&apos; AND [Name] = &apos;&quot;+ appName +&quot;&apos;&quot;);    
							ExecuteQuery(ForwardOnly);
							if(FirstRecord())
							{
								xmlData = GetFieldValue(&quot;VF Long Description&quot;);
							}
							var sPropName = Inputs.GetChild(i).GetFirstProperty();
							var sPropValue;
						
							while (sPropName != &quot;&quot;)       
							{
								sPropValue = Inputs.GetChild(i).GetProperty(sPropName);
								sPropName = sPropName +&quot;Val&quot;;
								xmlData = xmlData.replace(sPropName,sPropValue);
								sPropName = Inputs.GetChild(i).GetNextProperty();
							}
						}
					}
				}
			}
		}
		
		/*if(appName == &apos;NSN&apos;)
		{
            msisdn1 = Inputs.GetProperty(&quot;MSISDN&quot;);
            var xmlData=&quot;&quot;;
		    var userApp1 = TheApplication().LoginName();
		    var strPlatform = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VF_PLATFORM&quot;,&quot;NSN Platform&quot;);
            
			with(bcListOfVal)
			{
				SetViewMode(AllView);
				ClearToQuery();
				ActivateField(&quot;Description&quot;);
				ActivateField(&quot;Type&quot;);
				ActivateField(&quot;Name&quot;);
				SetSearchSpec(&quot;Type&quot;, &quot;VF_PLATFORM&quot;);
				SetSearchSpec(&quot;Name&quot;, &quot;NSN Platform&quot;);
				//SetSearchExpr(&quot;[Type] = &apos;VF_PLATFORM&apos; AND [Name] = &apos;Platform NSN&apos;&quot;);   
				ExecuteQuery(ForwardOnly);
				if(FirstRecord())
				{
					xmlData = GetFieldValue(&quot;Description&quot;);
				}
				//xmlData.replace(&quot;userApp&quot;, userApp);
				//xmlData.replace(&quot;msisdn&quot;, msisdn);
				 xmlData = xmlData.replace(&apos;&quot;+msisdn+&quot;&apos;, msisdn1);
				 xmlData = xmlData.replace(&apos;userApp&apos;, userApp1);
			}
        }   		
	    if(appName == &apos;VMS&apos;)
		{
			msisdn1 = Inputs.GetProperty(&quot;MSISDN&quot;);
			var xmlData=&quot;&quot;;
		    var userApp1 = TheApplication().LoginName();
		    var strPlatform1 = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VF_PLATFORM&quot;,&quot;VMS Platform&quot;);

			
			with(bcListOfVal)
			{
				SetViewMode(AllView);
				ClearToQuery();
				ActivateField(&quot;Description&quot;);
				ActivateField(&quot;Type&quot;);
				ActivateField(&quot;Name&quot;);
				SetSearchSpec(&quot;Type&quot;, &quot;VF_PLATFORM&quot;);
				SetSearchSpec(&quot;Name&quot;, &quot;VMS Platform&quot;);
				//SetSearchExpr(&quot;[Type] = &apos;VF_PLATFORM&apos; AND [Name] = &apos;Platform VMS&apos;&quot;);
				ExecuteQuery(ForwardOnly);
				if(FirstRecord())
				{
					xmlData = GetFieldValue(&quot;Description&quot;);
				}
				//xmlData.replace(&quot;strPlatform&quot;, strPlatform);
				//xmlData.replace(&quot;msisdn&quot;, msisdn);
				//xmlData.replace(&quot;userApp&quot;, userApp);
				xmlData = xmlData.replace(&apos;&quot;+ strPlatform +&quot;&apos;, strPlatform1);
				xmlData = xmlData.replace(&apos;&quot;+msisdn+&quot;&apos;, msisdn1);
				xmlData = xmlData.replace(&apos;userApp&apos;, userApp1);
			}
		}*/
		// DD CR_117 and CR_197 end
		if(appName == &quot;SDF&quot;)
		{
			psCreateIn.SetProperty(&quot;System Preference Name&quot;,&quot;SSO_SDF_APP_USER&quot;);
		    msisdn = TheApplication().GetProfileAttr(&quot;MSISDN_SDF&quot;)
		    bsUtiService.InvokeMethod(&quot;GetSystemPreference&quot;,psCreateIn,psCreateOut);
		    var userApp = psCreateOut.GetProperty(&quot;System Preference Value&quot;);
			TheApplication().SetProfileAttr(&quot;USER_NAME_SDF&quot;,userApp);
			var xmlData = &quot;&lt;data&gt;&lt;userId&gt;&quot;+userApp+&quot;&lt;/userId&gt;&lt;msisdn&gt;&quot;+msisdn+&quot;&lt;/msisdn&gt;&lt;appId&gt;SIEBEL&lt;/appId&gt;&lt;progId&gt;ThirdPartyServisleri&lt;/progId&gt;&lt;/data&gt;&quot;;
		}
		//TLG-4244
			if(appName == &quot;LER&quot;)
		{
		    msisdn = TheApplication().GetProfileAttr(&quot;MSISDN_LER&quot;);
		    userApp = TheApplication().GetProfileAttr(&quot;USER_NAME_LER&quot;);
			var roleid	= &quot;RBT_SALES_AND_REFUND&quot;
			var xmlData = &quot;&lt;root&gt;&lt;gsmno&gt;&quot;+msisdn+&quot;&lt;/gsmno&gt;&lt;userid&gt;&quot;+userApp+&quot;&lt;/userid&gt;&lt;roleid&gt;&quot;+roleid+&quot;&lt;/roleid&gt;&lt;/root&gt;&quot;;
		}	
		
		else if(appName == &quot;VAS&quot;)
		{
			psCreateIn.SetProperty(&quot;System Preference Name&quot;,&quot;SSO_VAS_APP_USER&quot;);
			msisdn = TheApplication().GetProfileAttr(&quot;MSISDN_VAS&quot;);
			bsUtiService.InvokeMethod(&quot;GetSystemPreference&quot;,psCreateIn,psCreateOut);
			var userApp = psCreateOut.GetProperty(&quot;System Preference Value&quot;);
			TheApplication().SetProfileAttr(&quot;USER_NAME_SDF&quot;,userApp);
			var xmlData = &quot;&lt;data&gt;&lt;userId&gt;&quot;+userApp+&quot;&lt;/userId&gt;&lt;msisdn&gt;&quot;+msisdn+&quot;&lt;/msisdn&gt;&lt;appId&gt;SIEBEL&lt;/appId&gt;&lt;progId&gt;ThirdPartyServisleri&lt;/progId&gt;&lt;/data&gt;&quot;;
		}
		//RCRISPIM: VFTRCBU-10711 - START
		else if(appName == &quot;CallNow&quot;)
		{
			psCreateIn.SetProperty(&quot;System Preference Name&quot;,&quot;SSO_CALLNOW_APP_USER&quot;);
			msisdn = TheApplication().GetProfileAttr(&quot;VFTRCBU_CALLNOW_MSISDN&quot;);
			sAccountNum = TheApplication().GetProfileAttr(&quot;VFTRCBU_CALLNOW_ACCOUNTNUM&quot;);
			bsUtiService.InvokeMethod(&quot;GetSystemPreference&quot;,psCreateIn,psCreateOut);
			var userApp = psCreateOut.GetProperty(&quot;System Preference Value&quot;);
			TheApplication().SetProfileAttr(&quot;USER_NAME_SDF&quot;,userApp);
			var xmlData = &quot;&lt;root&gt;&lt;gsmNo&gt;&quot;+msisdn+&quot;&lt;/gsmNo&gt;&lt;userid&gt;&quot;+userApp+&quot;&lt;/userid&gt;&lt;customerid&gt;&quot;+sAccountNum+&quot;&lt;/customerid&gt;&lt;/root&gt;&quot;;
		}
		//RCRISPIM: VFTRCBU-10711 - END
		else if(appName == &quot;PROVUS&quot;)
		{
			if (TheApplication().GetProfileAttr(&quot;ApplicationName&quot;) == &quot;Siebel eChannel&quot;)
			{
				var userId= TheApplication().LoginName();
				var shopCode = TheApplication().GetProfileAttr(&quot;ShopID&quot;);
				var xmlData = &quot;&lt;sessiondata&gt;&lt;userID&gt;&quot;+userId+&quot;&lt;/userID&gt;&lt;shopCode&gt;&quot;+shopCode+&quot;&lt;/shopCode&gt;&lt;isAgent&gt;false&lt;/isAgent&gt;&lt;/sessiondata&gt;&quot;;
			}
			else
			{
				var userId= TheApplication().LoginName();
				var shopCode = TheApplication().GetProfileAttr(&quot;ShopID&quot;);
				var xmlData = &quot;&lt;sessiondata&gt;&lt;userID&gt;&quot;+userId+&quot;&lt;/userID&gt;&lt;shopCode&gt;&quot;+shopCode+&quot;&lt;/shopCode&gt;&lt;isAgent&gt;true&lt;/isAgent&gt;&lt;/sessiondata&gt;&quot;;
			}
		}
		
		else if(appName == &quot;mwallet&quot;)
		{
			var userId= TheApplication().LoginName();
			msisdn = TheApplication().GetProfileAttr(&quot;strMSISDNwallet&quot;);
			var xmlData = &quot;&lt;root&gt;&lt;gsmno&gt;&quot;+msisdn+&quot;&lt;/gsmno&gt;&lt;agentid&gt;&quot;+userId+&quot;&lt;/agentid&gt;&lt;/root&gt;&quot;;
			
		}			
		else if(appName == &quot;VPN&quot;)
		{
			GroupId = TheApplication().GetProfileAttr(&quot;VPN_GROUP&quot;);
			var userApp = &quot;anonymous&quot;;
			TheApplication().SetProfileAttr(&quot;USER_NAME_VPN&quot;,userApp);
			var xmlData = &quot;&lt;data&gt;&lt;userId&gt;&quot;+userApp+&quot;&lt;/userId&gt;&lt;VPNGroupID&gt;&quot;+GroupId+&quot;&lt;/VPNGroupID&gt;&lt;appId&gt;SIEBEL&lt;/appId&gt;&lt;progId&gt;PROGRAM&lt;/progId&gt;&lt;/data&gt;&quot;;
		}
		else if(appName == &quot;iCRM&quot;)
		{
			//CELFOCJSARMENTO - ITSL-1147 - Start
			var userBO = TheApplication().GetBusObject(&quot;Users&quot;);
			var userBC = userBO.GetBusComp(&quot;User&quot;);
			var userApp = &quot;&quot;;
			with (userBC)
			{
				SetViewMode(AllView);
				ClearToQuery();
				ActivateField(&quot;Alias&quot;);
				ActivateField(&quot;Login Name&quot;);
				SetSearchSpec(&quot;Login Name&quot;, TheApplication().LoginName());
				ExecuteQuery(ForwardBackward);
				if(FirstRecord())
				{
					userApp = GetFieldValue(&quot;Alias&quot;);
				}
			}
			//CELFOCJSARMENTO - ITSL-1147 - End
			msisdn = TheApplication().GetProfileAttr(&quot;VFSSOiCRMl_MSISDN&quot;);
			//var userApp = TheApplication().LoginName(); ////CELFOCJSARMENTO - ITSL-1147
			var xmlData = &quot;&lt;data&gt;&lt;userId&gt;&quot;+userApp+&quot;&lt;/userId&gt;&lt;appId&gt;CRM&lt;/appId&gt;&lt;progId&gt;promusage&lt;/progId&gt;&lt;msisdn&gt;&quot;+msisdn+&quot;&lt;/msisdn&gt;&lt;reasonCode&gt;2481&lt;/reasonCode&gt;&lt;/data&gt;&quot;;
		}
		
		else if(appName == &quot;KOLAYFATURA&quot;)
		{
			var msisdn=TheApplication().GetProfileAttr(&quot;MSISDN_EASY_BILL&quot;);
			var bacode = TheApplication().GetProfileAttr(&quot;BILLING_ACCOUNT_EASY_BILL&quot;);
			var userApp = TheApplication().LoginName();
			//TBD
			var xmlData = &quot;&lt;data&gt;&lt;userId&gt;&quot;+userApp+&quot;&lt;/userId&gt;&lt;msisdn&gt;&quot;+msisdn+&quot;&lt;/msisdn&gt;&lt;bacode&gt;&quot;+bacode+&quot;&lt;/bacode&gt;&lt;/data&gt;&quot;
		}
		
		else if(appName == &quot;enterpriseIQ&quot;)
		{
			var accn=TheApplication().GetProfileAttr(&quot;ACCOUNT_ID&quot;);
			var userApp = TheApplication().LoginName();
			//TBD
			var xmlData = &quot;&lt;data&gt;&lt;userId&gt;&quot;+userApp+&quot;&lt;/userId&gt;&lt;accn&gt;&quot;+accn+&quot;&lt;/accn&gt;&lt;/data&gt;&quot;
		}
		
		
		if(appName == &quot;SI&quot;)
		{
			psCreateIn.SetProperty(&quot;System Preference Name&quot;,&quot;SSO_SAFE_INT_APP_USER&quot;);
		    bsUtiService.InvokeMethod(&quot;GetSystemPreference&quot;,psCreateIn,psCreateOut);
		    msisdn = TheApplication().GetProfileAttr(&quot;SI_MSISDN&quot;);
		    var userApp = TheApplication().GetProfileAttr(&quot;SI_USER&quot;);
			var xmlData = &quot;&lt;data&gt;&lt;userId&gt;&quot;+userApp+&quot;&lt;/userId&gt;&lt;msisdn&gt;&quot;+msisdn+&quot;&lt;/msisdn&gt;&lt;appId&gt;SIEBEL&lt;/appId&gt;&lt;progId&gt;PROGRAM&lt;/progId&gt;&lt;/data&gt;&quot;;	
		}
		if(appName == strDocumentum ) //CR 471  Modified 20.08.2013
		{

		    msisdn = TheApplication().GetProfileAttr(&quot;MSISDN_DUMAN&quot;);
		    var userApp = TheApplication().LoginName();
		    var xmlData=&quot;&quot;;
		    var dumanPortal=TheApplication().GetProfileAttr(&quot;DUMAN_PORTAL&quot;);
		    var customerId = TheApplication().GetProfileAttr(&quot;CUSTOMERID_DUMAN&quot;);
		    var billingAccount=TheApplication().GetProfileAttr(&quot;BILLID_DUMAN&quot;);
		    if(dumanPortal==&quot;Customer Portal&quot;)
		    {
				xmlData = &quot;&lt;root&gt;&lt;userid&gt;&quot; + userApp + &quot;&lt;/userid&gt;&lt;customer_id&gt;&quot; + customerId + &quot;&lt;/customer_id&gt;&lt;/root&gt;&quot;;	
			} 
				else if(dumanPortal==&quot;Billing Account Portal&quot;)
				{
					xmlData = &quot;&lt;root&gt;&lt;userid&gt;&quot; + userApp + &quot;&lt;/userid&gt;&lt;customer_id&gt;&quot; + customerId + &quot;&lt;/customer_id&gt;&lt;billing_account&gt;&quot; + billingAccount + &quot;&lt;/billing_account&gt;&lt;/root&gt;&quot;;	
				}
					else if(dumanPortal==&quot;Subscriber Portal&quot;)
					{
						xmlData = &quot;&lt;root&gt;&lt;userid&gt;&quot; + userApp + &quot;&lt;/userid&gt;&lt;customer_id&gt;&quot; + customerId + &quot;&lt;/customer_id&gt;&lt;billing_account&gt;&quot; + billingAccount +  &quot;&lt;/billing_account&gt;&lt;gsm_no&gt;&quot; + msisdn + &quot;&lt;/gsm_no&gt;&lt;/root&gt;&quot;;	
					}
		}
		if(appName == &quot;MPS&quot;)
		{
		/*	psCreateIn.SetProperty(&quot;System Preference Name&quot;,&quot;SSO_MPS_APP_USER&quot;);
		    msisdn = TheApplication().GetProfileAttr(&quot;MSISDN&quot;); // GEN_REQ_730/CR526 : IDC-SS :08/11/2012: Changed Profile Attribute from &quot;MPS_MSISDN&quot; to &quot;MSISDN&quot;
		    		    bsUtiService.InvokeMethod(&quot;GetSystemPreference&quot;,psCreateIn,psCreateOut);
		    var userApp = TheApplication().LoginName(); // GEN_REQ_730/CR526 : IDC-SS :08/11/2012: Changed from &quot;psCreateOut.GetProperty(&quot;System Preference Value&quot;);&quot;
			var xmlData = &quot;&lt;data&gt;&lt;userId&gt;&quot;+userApp+&quot;&lt;/userId&gt;&lt;msisdn&gt;&quot;+msisdn+&quot;&lt;/msisdn&gt;&lt;appId&gt;SIEBEL&lt;/appId&gt;&lt;progId&gt;PROGRAM&lt;/progId&gt;&lt;/data&gt;&lt;progId&gt;PROGRAM&lt;/progId&gt;&lt;/data&gt;&quot;; // GEN_REQ_730/CR526 : IDC-SS :08/11/2012: Added &quot;&lt;progId&gt;PROGRAM&lt;/progId&gt;&lt;/data&gt;&quot;
		*/
		//++Updated as per GEN_REQ_730: GEN_REQ_730/CR526 : IDC-GPS :30/11/2012	
			msisdn = Inputs.GetProperty(&quot;MSISDN&quot;);
            var xmlData=&quot;&quot;;
		    var userApp = TheApplication().LoginName();
		    var strPlatform = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VF_PLATFORM&quot;,&quot;MPS&quot;);
		    with(bcListOfVal)
			{
				SetViewMode(AllView);
				ClearToQuery();
				ActivateField(&quot;Description&quot;);
				ActivateField(&quot;Type&quot;);
				ActivateField(&quot;Name&quot;);
				SetSearchExpr(&quot;[Type] = &apos;VF_PLATFORM&apos; AND [Name] = &apos;MPS&apos;&quot;);
				ExecuteQuery(ForwardOnly);
				if(FirstRecord())
				{
					xmlData = GetFieldValue(&quot;Description&quot;);
				}
				xmlData.replace(&quot;strPlatform&quot;, strPlatform);
				xmlData.replace(&quot;msisdn&quot;, msisdn);
				xmlData.replace(&quot;userApp&quot;, userApp);
			}
		//--Updated as per GEN_REQ_730: GEN_REQ_730/CR526 : IDC-GPS :30/11/2012	
		}
		Outputs.SetProperty(&quot;XMLData&quot;,xmlData);
	}
	finally
	{
		psCreateIn 		= null;
		psCreateOut 	= null;
		bsUtiService 	= null;
		bcListOfVal = null;
		boListOfVal = null;
		
	}
}"
			   SEQUENCE="4"
			   UPDATED="01/20/2018 12:56:34"
			   UPDATED_BY="IBM_MSAFA"
			   CREATED="05/10/2011 08:47:42"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
		</BUSINESS_SERVICE>
	</PROJECT>
</REPOSITORY>



