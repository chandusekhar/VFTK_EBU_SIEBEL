<?xml version="1.0" encoding="UTF-8"?>
<REPOSITORY
   NAME="Siebel Repository"
   UPDATED="04/28/2018 18:51:18"
   UPDATED_BY="SADMIN"
   CREATED="04/28/2018 10:52:36"
   CREATED_BY="SADMIN"
   FIO_PLACEHOLDER_FIO="TRUE">
	<PROJECT
	   ALLOW_OBJECT_LOCKING="Y"
	   INACTIVE="N"
	   LANGUAGE_LOCKED="ENU"
	   LOCKED="N"
	   NAME="- PLW Request"
	   UI_FREEZE="N"
	   UPDATED="05/02/2018 17:26:21"
	   UPDATED_BY="DEVUSER"
	   CREATED="01/31/2009 12:28:34"
	   CREATED_BY="SADMIN"
	   FIO_PLACEHOLDER_FIO="TRUE">
		<BUSINESS_SERVICE
		   CACHE="N"
		   CLASS="CSSService"
		   EXTERNAL_USE="N"
		   HIDDEN="N"
		   INACTIVE="N"
		   NAME="VF Assignment Manager"
		   OBJECT_LOCKED="N"
		   SERVER_ENABLED="N"
		   STATE_MANAGEMENT_TYPE="Stateful"
		   WEB_SERVICE_ENABLED="N"
		   UPDATED="05/02/2018 17:26:21"
		   UPDATED_BY="DEVUSER"
		   CREATED="03/05/2013 22:14:35"
		   CREATED_BY="SADMIN">
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="Assign"
			   UPDATED="05/28/2013 13:37:47"
			   UPDATED_BY="SADMIN"
			   CREATED="03/05/2013 22:14:35"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Area"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="05/28/2013 13:37:47"
				   UPDATED_BY="SADMIN"
				   CREATED="05/28/2013 13:37:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CallAssignMan"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="03/06/2013 23:19:50"
				   UPDATED_BY="SADMIN"
				   CREATED="03/06/2013 23:19:50"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CloseFlag"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/05/2013 22:14:36"
				   UPDATED_BY="SADMIN"
				   CREATED="03/05/2013 22:14:36"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CustomerCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/06/2013 23:19:50"
				   UPDATED_BY="SADMIN"
				   CREATED="03/06/2013 23:19:50"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ObjRowId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/05/2013 22:14:36"
				   UPDATED_BY="SADMIN"
				   CREATED="03/05/2013 22:14:36"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ShopCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="03/08/2013 18:51:03"
				   UPDATED_BY="SADMIN"
				   CREATED="03/08/2013 18:51:03"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Sub-Area"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="05/28/2013 13:37:47"
				   UPDATED_BY="SADMIN"
				   CREATED="05/28/2013 13:37:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="TripletNo"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="05/28/2013 13:37:47"
				   UPDATED_BY="SADMIN"
				   CREATED="05/28/2013 13:37:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Type"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="05/28/2013 13:37:47"
				   UPDATED_BY="SADMIN"
				   CREATED="05/28/2013 13:37:47"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Assign"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Assign(Inputs,Outputs)
{
	try
	{
		var SRBO 				:BusObject	= TheApplication().GetBusObject(&quot;Service Request&quot;);
		var SRBOAcc 			:BusObject	= TheApplication().GetBusObject(&quot;Account&quot;);
		var SRBOPar				:BusObject	= TheApplication().GetBusObject(&quot;ACS NI Parameter&quot;);
		var SRBCPos 			:BusComp	= SRBO.GetBusComp(&quot;Position&quot;);	
		var SRBCPar 			:BusComp	= SRBOPar.GetBusComp(&quot;ACS NI Parameter&quot;);
		var SRBC 				:BusComp	= SRBO.GetBusComp(&quot;HP Service Request&quot;);
		var Account 			:BusComp	= SRBOAcc.GetBusComp(&quot;Account&quot;);
		var Employee 			:BusComp	= SRBO.GetBusComp(&quot;Employee&quot;);
		var CallScriptRunsBC	:BusComp 	= SRBO.GetBusComp(&quot;Call Script Runs&quot;);	
		var strCloseFlag = Inputs.GetProperty(&quot;CloseFlag&quot;);
		var strrowid = Inputs.GetProperty(&quot;ObjRowId&quot;);
		var strCustCode = Inputs.GetProperty(&quot;CustomerCode&quot;);
		var strShopCode = Inputs.GetProperty(&quot;ShopCode&quot;);
		var strType = Inputs.GetProperty(&quot;Type&quot;);
		var strArea = Inputs.GetProperty(&quot;Area&quot;);
		var strTripletNo = Inputs.GetProperty(&quot;TripletNo&quot;);	
		var strMaximoID = Inputs.GetProperty(&quot;VF Maximo Id&quot;); //DEF-27142 Maximo Link
		var strSubArea = Inputs.GetProperty(&quot;Sub-Area&quot;);
		Account.ActivateField(&quot;VF Dedicated Agent Code&quot;);
		Account.ActivateField(&quot;VF IVR Agent&quot;);
		Account.ClearToQuery ();
		Account.SetViewMode (AllView);
		Account.SetSearchSpec(&quot;CSN&quot;,strCustCode);
		Account.ExecuteQuery (ForwardOnly);
		var strdedicatedAg = Account.GetFieldValue(&quot;VF Dedicated Agent Code&quot;);
		var strIVRCode = Account.GetFieldValue(&quot;VF IVR Agent&quot;);
		var strPosId = &quot;&quot;;
		var strAgentPosition = &quot;&quot;;
		var strPosShopId = &quot;&quot;;
		var strShopId = &quot;&quot;;
		var strposname = &quot;&quot;;
		var sTimestamp = &quot;&quot;;
		var strOwnerGroup = &quot;&quot;;
		var strTripletCount = &quot;&quot;;
		
		if ((strShopCode != &quot;&quot; &amp;&amp; strShopCode != null) || (strdedicatedAg != &quot;&quot; &amp;&amp; strdedicatedAg != null))
		{	
			if(strdedicatedAg != &quot;&quot; &amp;&amp; strdedicatedAg != null &amp;&amp; strTripletNo != &quot;&quot; &amp;&amp; strTripletNo != null) //|| strCloseFlag is not null)	
			{
				SRBCPar.ActivateField(&quot;Function&quot;);			
				SRBCPar.ActivateField(&quot;Name&quot;);
				SRBCPar.ActivateField(&quot;Value&quot;);
				SRBCPar.ActivateField(&quot;Value&quot;);									
				SRBCPar.ClearToQuery ();
				SRBCPar.SetViewMode (AllView);
				SRBCPar.SetSearchSpec(&quot;Function&quot;,&quot;VFDedicatedAgent&quot;);
				SRBCPar.SetSearchSpec(&quot;Value&quot;,strTripletNo);								
				SRBCPar.ExecuteQuery (ForwardOnly);
				if(SRBCPar.FirstRecord())
				{
					Employee.ActivateField(&quot;Primary Position Id&quot;);
					Employee.ActivateField(&quot;VF Shop Id&quot;);
					Employee.ActivateField(&quot;Primary Position&quot;);	
					Employee.ClearToQuery ();
					Employee.SetViewMode (AllView);
					Employee.SetSearchSpec(&quot;VF Dedicated Agent IVR Code&quot;,strdedicatedAg);
					Employee.ExecuteQuery (ForwardOnly);
					if(Employee.FirstRecord())
					{
						strposname = Employee.GetFieldValue(&quot;Primary Position&quot;);
						strAgentPosition = Employee.GetFieldValue(&quot;Primary Position Id&quot;);	
						strShopId	= Employee.GetFieldValue(&quot;VF Shop Id&quot;);	
						if (strAgentPosition != &quot;&quot; &amp;&amp; strAgentPosition != null)	
						{						
							strPosId = strAgentPosition;
							
						}
					}
				}
			}
			else if (strShopCode != &quot;&quot; &amp;&amp; strShopCode != null &amp;&amp; strPosId == &quot;&quot;)	
			{
				Employee.ActivateField(&quot;VF Shop Id&quot;);			
				Employee.ActivateField(&quot;Position&quot;);	
				Employee.ActivateField(&quot;Primary Position&quot;);			
				Employee.ClearToQuery ();
				Employee.SetViewMode (AllView);
				Employee.SetSearchSpec(&quot;VF Shop Id&quot;,strShopCode);
				Employee.ExecuteQuery (ForwardOnly);
				
				if(Employee.FirstRecord())
				{   
				    strposname = Employee.GetFieldValue(&quot;Primary Position&quot;);
					strPosShopId = Employee.GetFieldValue(&quot;Primary Position Id&quot;);
					if (strPosShopId != &quot;&quot; &amp;&amp; strPosShopId != null)	
					{						
						strPosId = strPosShopId;
					}
				}
			}
		}
		else
		{
			//To set OwnerGroup into Service Request &quot;Business Component&quot;. DEF-24957 Start
			
			SRBCPar.ActivateField(&quot;Function&quot;);
			SRBCPar.ActivateField(&quot;Attrib01&quot;); // type strType
			SRBCPar.ActivateField(&quot;Attrib02&quot;); // area strArea
			SRBCPar.ActivateField(&quot;Attrib03&quot;); // OwnerGroup strOwnerGroup
			SRBCPar.ActivateField(&quot;Comments&quot;); // subarea strSubArea
			SRBCPar.ActivateField(&quot;Value&quot;); // triplet strTripletNo
			SRBCPar.ClearToQuery();
			SRBCPar.SetViewMode(AllView);
			SRBCPar.SetSearchSpec(&quot;Function&quot;, &quot;VF Maximo Triplet&quot;);
			//SRBCPar.SetSearchSpec(&quot;Attrib01&quot;, strType);
			//SRBCPar.SetSearchSpec(&quot;Attrib02&quot;, strArea);
			//SRBCPar.SetSearchSpec(&quot;Comments&quot;, strSubArea);
			SRBCPar.SetSearchSpec(&quot;Value&quot;, strTripletNo);
			SRBCPar.ExecuteQuery(ForwardOnly);
			if(SRBCPar.FirstRecord())
			{
				strOwnerGroup = SRBCPar.GetFieldValue(&quot;Attrib03&quot;);
				strTripletCount = SRBCPar.CountRecords();
			}
			var Searchexpression = SRBCPar.GetSearchExpr();
			var SearchCount = SRBCPar.CountRecords();
			//TheApplication().RaiseErrorText(Searchexpression + &quot; Count: &quot; + SearchCount);
			//TheApplication().RaiseErrorText(&quot;VF Maximo Triplet - strOwnerGroup: &quot; + strOwnerGroup + &quot; Count: &quot; + strTripletCount ); // TEST
		}
		
		//DEF-24957 End
		
		// Start TLGA-4833
		var sSaved = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;CALL_SCRIPT_SAVE_STATUS&quot;,&quot;Saved&quot;);
		var strSmartScriptStatus = &quot;&quot;;
		/*with(CallScriptRunsBC)
		{
			SetViewMode(AllView);
			ClearToQuery();
			ActivateField(&quot;Status Code&quot;);
			SetSearchSpec(&quot;Target Row Id&quot;, strrowid);
			ExecuteQuery(ForwardOnly);
			var isSmartSession = FirstRecord();
			var isSRwithSmartscript = TheApplication().GetProfileAttr(&quot;LaunchSmartScript&quot;);
			
			if(isSmartSession)
			{
				strSmartScriptStatus = GetFieldValue(&quot;Status Code&quot;);
				if(strSmartScriptStatus == sSaved)
					TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;VF Message Category&quot;,&quot;Stab_005&quot;));		
			}	
			else
			{ 
				if (isSRwithSmartscript == &quot;Y&quot;)
					TheApplication().RaiseErrorText(TheApplication().LookupMessage(&quot;VF Message Category&quot;,&quot;Stab_005&quot;));
			}					
		} // End TLGA-4833*/
		
		SRBC.SetViewMode(AllView);
		SRBC.ActivateField(&quot;Timestamp Calc&quot;);
		SRBC.ActivateField(&quot;Owned By Group Id&quot;);
		SRBC.ActivateField(&quot;Owned By Id&quot;);
		SRBC.ActivateField(&quot;VF Auto Assign Enable Flag&quot;);
		SRBC.ActivateField(&quot;VF Maximo Id&quot;); //DEF-27142 Maximo Link
		SRBC.ActivateField(&quot;Owner Group&quot;); //DEF-24957 Assign Button
		SRBC.ClearToQuery ();
		SRBC.SetSearchSpec(&quot;Id&quot;,strrowid);
		SRBC.ExecuteQuery (ForwardOnly);		
		
		if(SRBC.FirstRecord())
		{	
		   	sTimestamp = SRBC.GetFieldValue(&quot;Timestamp Calc&quot;);
		
			var strClosedStatus	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;SR_STATUS&quot;,&quot;Closed&quot;); //DEF-2501
			var strOpenStatus = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;SR_STATUS&quot;,&quot;Open&quot;);
			
			if(strCloseFlag == &quot;Y&quot;)	
			{
				SRBC.ActivateField(&quot;HR SR Close Date&quot;);
				sTimestamp = SRBC.GetFieldValue(&quot;Timestamp Calc&quot;);
				SRBC.SetFieldValue(&quot;VF Auto Assign Enable Flag&quot;, &quot;N&quot;);
				SRBC.SetFieldValue(&quot;HP SR Status&quot;,strClosedStatus);
				SRBC.SetFieldValue(&quot;HR SR Close Date&quot;, sTimestamp);
			}
			else{
					SRBC.SetFieldValue(&quot;HP SR Status&quot;,strOpenStatus); //DEF-24957 Assign Button
					SRBC.SetFieldValue(&quot;Owned By Group Id&quot;,&quot;&quot;);		
					SRBC.SetFieldValue(&quot;Owned By Id&quot;,&quot;&quot;);
					var option = &quot;1&quot;;
					
						
					if (strPosId != &quot;&quot;)	
					{
						SRBC.SetFieldValue(&quot;Owned By Group Id&quot;,strPosId);
						SRBC.SetFieldValue(&quot;VF Auto Assign Enable Flag&quot;, &quot;N&quot;);
						option = &quot;2&quot;;			
						Outputs.SetProperty(&quot;CallAssignMan&quot;, &quot;N&quot;);
					}
					   HistoryTracking(option, &quot;2&quot;, strrowid, strPosId, sTimestamp, strPosId, strTripletNo);
				}
		/*	if(strCloseFlag == &quot;Y&quot;)	
			{			
				var strClosedStatus	= TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;SR_STATUS&quot;,&quot;Closed&quot;);
				SRBC.SetFieldValue(&quot;VF Auto Assign Enable Flag&quot;, &quot;N&quot;);
				SRBC.SetFieldValue(&quot;HP SR Status&quot;,strClosedStatus);
			}*/
			
			//DEF-27142 Maximo Link
			if (strMaximoID != &quot;&quot; || strMaximoID != null)
				SRBC.SetFieldValue(&quot;VF Maximo Id&quot;, strMaximoID);
			
			//DEF-24957 Assign Button
			SRBC.SetFieldValue(&quot;Owner Group&quot;, strOwnerGroup);
			
			SRBC.WriteRecord();					
		}
	}
	finally
	{	
		SRBCPos = null;
		SRBC = null;
		Account = null;
		Employee = null;
		SRBO = null;
		SRBOAcc = null;
	}					
}"
			   SEQUENCE="1"
			   UPDATED="05/02/2018 17:25:31"
			   UPDATED_BY="DEVUSER"
			   CREATED="03/05/2013 22:14:36"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="HistoryTracking"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function HistoryTracking(option, theValue, srId, OwnedByGroupId, TimeStamp, strposname, strTripletNo) {
       
	try {
	    
	    var TrackBO = TheApplication ().GetBusObject (&quot;Service Request&quot;);
		var TrackBC = TrackBO.GetBusComp(&quot;VF Request History&quot;);
	

		TrackBC.ActivateField(&quot;Request Id&quot;);
		TrackBC.ActivateField(&quot;End Date&quot;);
		TrackBC.ActivateField(&quot;Created&quot;);
		TrackBC.ActivateField(&quot;Owner Group&quot;);
		TrackBC.ActivateField(&quot;Owner&quot;);
		TrackBC.ActivateField(&quot;Start Date&quot;);
		TrackBC.ActivateField(&quot;VF Timestamp&quot;);

		TrackBC.SetViewMode(AllView);
		TrackBC.ClearToQuery();
		TrackBC.SetSortSpec(&quot;End Date (DESCENDING)&quot;);
		TrackBC.SetSearchSpec(&quot;Request Id&quot;, srId);
		TrackBC.ExecuteQuery(ForwardOnly);

		if (TrackBC.FirstRecord()) {
			
			TrackBC.SetFieldValue(&quot;End Date&quot;, TrackBC.GetFieldValue(&quot;VF Timestamp&quot;));
		
		}
		TrackBC.NewRecord(NewAfter);

	    TrackBC.SetFieldValue(&quot;Request Id&quot;, srId);
	    
	    
	
		var SRBOPar				:BusObject	= TheApplication().GetBusObject(&quot;ACS NI Parameter&quot;);
		var SRBCPar 			:BusComp	= SRBOPar.GetBusComp(&quot;ACS NI Parameter&quot;);
	
	    SRBCPar.ActivateField(&quot;Function&quot;);			
		SRBCPar.ActivateField(&quot;Name&quot;);
		SRBCPar.ActivateField(&quot;Value&quot;);
		SRBCPar.ActivateField(&quot;Attrib03&quot;);								
		SRBCPar.ClearToQuery ();
		SRBCPar.SetViewMode (AllView);
		SRBCPar.SetSearchSpec(&quot;Function&quot;,&quot;VF Maximo Triplet&quot;);
		SRBCPar.SetSearchSpec(&quot;Value&quot;,strTripletNo);								
		SRBCPar.ExecuteQuery (ForwardOnly);
		if(SRBCPar.FirstRecord())
		
	       {
	       
	    var attrib03=SRBCPar.GetFieldValue(&quot;Attrib03&quot;); 	
	    TrackBC.SetFieldValue(&quot;Owner&quot;, &quot;&quot;);
	    TrackBC.SetFieldValue(&quot;Owner Group&quot;, attrib03);
	
	     }
		
		TrackBC.WriteRecord();
	
		
	} catch (e) {
		throw(e);
	}
	finally {
		TrackBC = null;
	}
}"
			   SEQUENCE="2"
			   UPDATED="05/22/2016 22:03:41"
			   UPDATED_BY="SADMIN"
			   CREATED="05/04/2015 22:49:33"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreInvokeMethod (MethodName, Inputs, Outputs)
{
	if (MethodName == &quot;Assign&quot;)
	{
			Assign(Inputs, Outputs);
			return(CancelOperation);
	}
	return (ContinueOperation);
}"
			   SEQUENCE="4"
			   UPDATED="02/26/2018 08:50:36"
			   UPDATED_BY="SADMIN"
			   CREATED="03/05/2013 22:14:36"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Timestamp"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Timestamp() {
	//var d = Date.fromSystem(Clib.time());
	//return Clib.rsprintf(&quot;%02d/%02d/%04d %02d:%02d:%02d&quot;, d.getMonth() + 1, d.getDate(), d.getFullYear(), d.getHours(), d.getMinutes(), d.getSeconds());
	
	var timestamp = &quot;&quot;;
	var dateFormat = &quot;%m/%d/%Y %H:%M:%S&quot;;
	Clib.strftime(timestamp, dateFormat, Clib.localtime(Clib.time()));
	return (timestamp);
}"
			   SEQUENCE="3"
			   UPDATED="05/02/2018 17:25:31"
			   UPDATED_BY="DEVUSER"
			   CREATED="05/04/2015 22:49:33"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
		</BUSINESS_SERVICE>
	</PROJECT>
</REPOSITORY>



