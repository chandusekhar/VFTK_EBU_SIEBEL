<?xml version="1.0" encoding="UTF-8"?>
<REPOSITORY
   COMMENTS="Siebel 8.1.1.11 repository"
   NAME="Siebel Repository"
   UPDATED="06/17/2014 13:50:12"
   UPDATED_BY="SADMIN"
   CREATED="06/06/2014 19:53:48"
   CREATED_BY="SADMIN"
   FIO_PLACEHOLDER_FIO="TRUE">
	<PROJECT
	   ALLOW_OBJECT_LOCKING="Y"
	   INACTIVE="N"
	   LOCKED="N"
	   NAME="CRM VF PRM"
	   UI_FREEZE="N"
	   UPDATED="10/12/2016 12:46:08"
	   UPDATED_BY="IMARTINS"
	   CREATED="06/07/2011 17:37:04"
	   CREATED_BY="SADMIN"
	   FIO_PLACEHOLDER_FIO="TRUE">
		<BUSINESS_SERVICE
		   CACHE="N"
		   CLASS="CSSService"
		   EXTERNAL_USE="N"
		   HIDDEN="N"
		   INACTIVE="N"
		   NAME="CRM VF PRM Integration"
		   OBJECT_LANGUAGE_LOCKED="ENU"
		   OBJECT_LOCKED="Y"
		   OBJECT_LOCKED_DATE="10/12/2016 12:27:10"
		   SERVER_ENABLED="N"
		   STATE_MANAGEMENT_TYPE="Stateful"
		   WEB_SERVICE_ENABLED="N"
		   OBJECT_LOCKED_BY_NAME="IMARTINS"
		   UPDATED="10/12/2016 12:46:08"
		   UPDATED_BY="IMARTINS"
		   CREATED="06/07/2011 17:37:04"
		   CREATED_BY="SADMIN">
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="AddDealer"
			   UPDATED="04/19/2013 15:25:42"
			   UPDATED_BY="SADMIN"
			   CREATED="11/25/2011 13:17:10"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Black White List"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Dealer Type Code"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Code"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Description"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Organization Code"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Parent Division Flag"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Parent Position Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="01/23/2012 13:46:17"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Parent Position Name"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Region"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Result"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="11/25/2011 13:17:10"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Shop Id"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Shop Name"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Status Code"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/19/2013 15:25:42"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="AddDealer"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="11/25/2011 13:17:10"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="DivisionCreationHandOver"
			   UPDATED="02/23/2012 18:17:26"
			   UPDATED_BY="SADMIN"
			   CREATED="02/23/2012 18:17:26"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Position Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="02/23/2012 18:17:26"
				   UPDATED_BY="SADMIN"
				   CREATED="02/23/2012 18:17:26"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Shop Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="02/23/2012 18:17:26"
				   UPDATED_BY="SADMIN"
				   CREATED="02/23/2012 18:17:26"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="DivisionCreationHandOver"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="02/23/2012 18:17:26"
				   UPDATED_BY="SADMIN"
				   CREATED="02/23/2012 18:17:26"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ParentDivisionCheck"
			   UPDATED="11/25/2011 13:17:10"
			   UPDATED_BY="SADMIN"
			   CREATED="11/25/2011 13:17:10"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Parent Position Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="11/25/2011 13:17:10"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Result"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="11/25/2011 13:17:10"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="ParentDivisionCheck"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="11/25/2011 13:17:10"
				   UPDATED_BY="SADMIN"
				   CREATED="11/25/2011 13:17:10"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ParentPositionCheck"
			   UPDATED="12/13/2012 10:47:31"
			   UPDATED_BY="SADMIN"
			   CREATED="12/13/2012 10:47:31"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="ParentPositionCheck"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="12/13/2012 10:47:31"
				   UPDATED_BY="SADMIN"
				   CREATED="12/13/2012 10:47:31"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="Transfer"
			   UPDATED="12/19/2011 13:15:32"
			   UPDATED_BY="SADMIN"
			   CREATED="12/19/2011 13:15:32"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="DealerTypeCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Description"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ShopId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Status Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="Transfer"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="TransferDiv"
			   UPDATED="12/19/2011 13:15:32"
			   UPDATED_BY="SADMIN"
			   CREATED="12/19/2011 13:15:32"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Description"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Id"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Parent Position Name"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Status Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="TransferDiv"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="12/19/2011 13:15:32"
				   UPDATED_BY="SADMIN"
				   CREATED="12/19/2011 13:15:32"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="UpdateResp_Employee"
			   UPDATED="06/04/2013 00:30:39"
			   UPDATED_BY="SADMIN"
			   CREATED="06/04/2013 00:30:39"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="EmployeeID"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/04/2013 00:30:39"
				   UPDATED_BY="SADMIN"
				   CREATED="06/04/2013 00:30:39"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="EmployeeResponsibility"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/04/2013 00:30:39"
				   UPDATED_BY="SADMIN"
				   CREATED="06/04/2013 00:30:39"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Code"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="06/04/2013 00:30:39"
				   UPDATED_BY="SADMIN"
				   CREATED="06/04/2013 00:30:39"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Description"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="06/04/2013 00:30:39"
				   UPDATED_BY="SADMIN"
				   CREATED="06/04/2013 00:30:39"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OldEmpResponsibility"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/04/2013 00:30:39"
				   UPDATED_BY="SADMIN"
				   CREATED="06/04/2013 00:30:39"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Status Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="06/04/2013 00:30:39"
				   UPDATED_BY="SADMIN"
				   CREATED="06/04/2013 00:30:39"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="UpdateResp_Employee"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="06/04/2013 00:30:39"
				   UPDATED_BY="SADMIN"
				   CREATED="06/04/2013 00:30:39"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="UpsertEmployee"
			   UPDATED="12/13/2012 10:47:31"
			   UPDATED_BY="SADMIN"
			   CREATED="06/07/2011 17:37:05"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Active"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="BlackWhiteList"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="DealerTypeCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="EmployeeID"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="EmployeeResponsibility"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/13/2012 10:47:31"
				   UPDATED_BY="SADMIN"
				   CREATED="12/13/2012 10:47:31"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="EmployeeTypeCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/11/2012 17:58:17"
				   UPDATED_BY="SADMIN"
				   CREATED="12/11/2012 17:58:17"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Error Description"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/11/2012 17:58:17"
				   UPDATED_BY="SADMIN"
				   CREATED="12/11/2012 17:58:17"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="FirstName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="GSMNumber"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="JobTitle"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LastName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OriginatingDealerCode"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Profile Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/11/2012 17:58:17"
				   UPDATED_BY="SADMIN"
				   CREATED="12/11/2012 17:58:17"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ShopId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ShopName"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Status Code"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/11/2012 17:58:17"
				   UPDATED_BY="SADMIN"
				   CREATED="12/11/2012 17:58:17"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="UserID"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/11/2012 17:58:17"
				   UPDATED_BY="SADMIN"
				   CREATED="12/11/2012 17:58:17"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="UpsertEmployee"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="06/07/2011 17:37:05"
				   UPDATED_BY="SADMIN"
				   CREATED="06/07/2011 17:37:05"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="calcAlias"
			   UPDATED="07/01/2013 19:39:15"
			   UPDATED_BY="SADMIN"
			   CREATED="07/01/2013 19:39:15"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Alias"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/01/2013 19:39:15"
				   UPDATED_BY="SADMIN"
				   CREATED="07/01/2013 19:39:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Login"
				   OPTIONAL="Y"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/01/2013 19:39:15"
				   UPDATED_BY="SADMIN"
				   CREATED="07/01/2013 19:39:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="calcAlias"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="07/01/2013 19:39:15"
				   UPDATED_BY="SADMIN"
				   CREATED="07/01/2013 19:39:15"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="AddDealer"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function AddDealer(Inputs, Outputs) 
{
	try
	{
		var shopId = Inputs.GetProperty(&quot;Shop Id&quot;);
		var shopName = Inputs.GetProperty(&quot;Shop Name&quot;);
		var regionCode = Inputs.GetProperty(&quot;Organization Code&quot;);
		var region = Inputs.GetProperty(&quot;Region&quot;);
		var blackWhiteList = Inputs.GetProperty(&quot;Black White List&quot;);
				
		/* Create new Position */
		var boPosition :  BusObject = TheApplication().GetBusObject(&quot;Position&quot;); //ORACLE REVIEW 2013
		var bcPosition :  BusComp   = boPosition.GetBusComp(&quot;Position&quot;); //ORACLE REVIEW 2013
		bcPosition.ActivateField(&quot;Name&quot;);
		bcPosition.ActivateField(&quot;Party Name&quot;);
		bcPosition.ActivateField(&quot;VF TK PRM Region&quot;);
		bcPosition.ActivateField(&quot;VF TK PRM Region Code&quot;);
		bcPosition.ActivateField(&quot;VF TK PRM Black Whist List&quot;);
		bcPosition.ActivateField(&quot;Parent Position Name&quot;);
		bcPosition.ActivateField(&quot;Parent Position Id&quot;);
		
		bcPosition.NewRecord(NewAfter);            
		
		bcPosition.SetFieldValue(&quot;Name&quot;, shopId);
		bcPosition.SetFieldValue(&quot;Party Name&quot;, shopName);
		bcPosition.SetFieldValue(&quot;VF TK PRM Region&quot;, region);
		bcPosition.SetFieldValue(&quot;VF TK PRM Region Code&quot;, regionCode);
		bcPosition.SetFieldValue(&quot;VF TK PRM Black Whist List&quot;, blackWhiteList);
		
		bcPosition.WriteRecord();
		
		var positionId = bcPosition.GetFieldValue(&quot;Id&quot;);
				
		/* Check if exist a Parent Position */
		if (Inputs.GetProperty(&quot;Parent Division Flag&quot;) == &quot;Y&quot;)
		{ 
			var parDivName = Inputs.GetProperty(&quot;Parent Position Name&quot;)
			
			var inputParentDivCheck = TheApplication().NewPropertySet();
			var outputParentDivCheck = TheApplication().NewPropertySet();
			inputParentDivCheck.SetProperty(&quot;Parent Position Name&quot;, parDivName);
			
			ParentPositionCheck(inputParentDivCheck, outputParentDivCheck);
			
			var result = outputParentDivCheck.GetProperty(&quot;Result&quot;);
	
			/* Set Parent Position */
			if(result == &quot;True&quot;){
				var parDivId = outputParentDivCheck.GetProperty(&quot;Parent Position Id&quot;);

				bcPosition.SetFieldValue(&quot;Parent Position Name&quot;, parDivName);
				bcPosition.SetFieldValue(&quot;Parent Position Id&quot;, parDivId);

				bcPosition.WriteRecord();
			}
		}
		
		Outputs.SetProperty(&quot;Status Code&quot;, &quot;0&quot;);
	}
	catch(e) 
	{
		TheApplication().RaiseErrorText(e.toString());
	}
	finally
	{
		parDivId = null;
		result = null;
		outputParentDivCheck = null;
		inputParentDivCheck = null;
		parDivName = null;
		positionId = null;
		region = null;
		regionCode = null;
		shopName = null;
		shopId = null;
		bcPosition = null;
		boPosition = null;
		
	}//ORACLE REVIEW 2013
}"
			   SEQUENCE="1"
			   UPDATED="04/19/2013 15:25:42"
			   UPDATED_BY="SADMIN"
			   CREATED="11/25/2011 13:17:10"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="AddRegionalInfo"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function AddRegionalInfo(Inputs, Outputs) 
{
	try
	{
		var areaCode = Inputs.GetProperty(&quot;AreaCode&quot;);
		var areaName = Inputs.GetProperty(&quot;AreaName&quot;);
		var regionCode = Inputs.GetProperty(&quot;RegionCode&quot;);
		var regionName = Inputs.GetProperty(&quot;RegionName&quot;);
		var actionCode = Inputs.GetProperty(&quot;ActionCode&quot;);
		var currPos = 0;
		var currentPosition;
		var dealerPosId;
		var dealerPosName;
		var dealerParPosId;
		var dealerParPosName;
		var auxPosId = &quot;&quot;;
		var auxDivId = &quot;&quot;;
		var existPosId = &quot;&quot;;
		var hierCreated = false;
				
		var boPosition :  BusObject = TheApplication().GetBusObject(&quot;Position&quot;);
		var bcPosition :  BusComp   = boPosition.GetBusComp(&quot;Position&quot;);
		var wkfSvc = TheApplication().GetService(&quot;Workflow Process Manager&quot;);
		var wkfInputs = TheApplication().NewPropertySet();
		var wkfOutputs = TheApplication().NewPropertySet();
		bcPosition.SetViewMode(AllView);
		bcPosition.ClearToQuery();   
		bcPosition.SetSearchExpr(&quot;[VFTRCBU Area Code] = &apos;&quot;+areaCode+&quot;&apos; AND [Name] = &apos;&quot; + areaName + &quot; Sales Executive&apos;&quot;);
		bcPosition.ExecuteQuery(ForwardOnly);
			
		var posRec = bcPosition.FirstRecord();
						
		if(posRec &amp;&amp; actionCode == &quot;1&quot;)
		{
			Outputs.SetProperty(&quot;Error Code&quot;,&quot;1&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;,TheApplication().LookupMessage(&quot;VFTRCBU User Defined Errors&quot;, &quot;0600&quot;));
			return;
		}
		
		bcPosition.ClearToQuery();   
		bcPosition.ActivateField(&quot;Name&quot;);
		bcPosition.ActivateField(&quot;Position Id&quot;);
		bcPosition.ActivateField(&quot;Parent Position Id&quot;);
		bcPosition.SetSearchExpr(&quot;[VFTRCBU Area Code] = &apos;&quot;+areaCode+&quot;&apos;&quot;);
		bcPosition.ExecuteQuery(ForwardOnly);
		
		posRec = bcPosition.FirstRecord();
		
		if(!posRec)
		{
			// ++IMARTINS VFTRCBU-28772 10052016 Comment error message 
			//   Add the same logic to create the high level hierarchy for the scenario when there are no dealers
			
			//Outputs.SetProperty(&quot;Error Code&quot;,&quot;1&quot;);
			//Outputs.SetProperty(&quot;Error Message&quot;,&quot;There are no Dealers for the input area.&quot;);

			wkfInputs.SetProperty(&quot;ProcessName&quot;,&quot;VFTRCBU Manage Regional Information Aux WF&quot;);
			wkfInputs.SetProperty(&quot;DealerAreaName&quot;,areaName);
			wkfInputs.SetProperty(&quot;DealerAreaCode&quot;,areaCode);
			wkfInputs.SetProperty(&quot;DealerRegionName&quot;,regionName);
			wkfInputs.SetProperty(&quot;DealerRegionCode&quot;,regionCode);
			for(currPos=0;currPos&lt;4;currPos++)
			{
				if(currPos&gt;0)
					wkfInputs.SetProperty(&quot;AuxPositionId&quot;,auxPosId);
					
				wkfInputs.SetProperty(&quot;CurrentPosition&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VFTRCBU_REGIONAL_POSITIONS&quot;,currPos));
				wkfSvc.InvokeMethod(&quot;RunProcess&quot;,wkfInputs,wkfOutputs);
				auxPosId = wkfOutputs.GetProperty(&quot;AuxPositionId&quot;);
				auxDivId = wkfOutputs.GetProperty(&quot;AuxDivisionId&quot;);
				existPosId = wkfOutputs.GetProperty(&quot;ExistPositionId&quot;);
				
				if(existPosId != &quot;&quot; &amp;&amp; existPosId != null &amp;&amp; auxDivId != &quot;&quot; &amp;&amp; auxDivId != null)
				{
					UpdatePositionRegion(existPosId,auxDivId);
				}
			}
			// --IMARTINS VFTRCBU-28772 10052016

		}
		else
		{
			while(posRec)
			{
				dealerPosId = bcPosition.GetFieldValue(&quot;Position Id&quot;);
				dealerParPosId = bcPosition.GetFieldValue(&quot;Parent Position Id&quot;);
				dealerPosName = bcPosition.GetFieldValue(&quot;Name&quot;);
		
				if(!hierCreated)
				{
					wkfInputs.SetProperty(&quot;ProcessName&quot;,&quot;VFTRCBU Manage Regional Information Aux WF&quot;);
					wkfInputs.SetProperty(&quot;DealerAreaName&quot;,areaName);
					wkfInputs.SetProperty(&quot;DealerAreaCode&quot;,areaCode);
					wkfInputs.SetProperty(&quot;DealerRegionName&quot;,regionName);
					wkfInputs.SetProperty(&quot;DealerRegionCode&quot;,regionCode);
					for(currPos=0;currPos&lt;4;currPos++)
					{
						if(currPos&gt;0)
							wkfInputs.SetProperty(&quot;AuxPositionId&quot;,auxPosId);
							
						wkfInputs.SetProperty(&quot;CurrentPosition&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VFTRCBU_REGIONAL_POSITIONS&quot;,currPos));
						wkfSvc.InvokeMethod(&quot;RunProcess&quot;,wkfInputs,wkfOutputs);
						auxPosId = wkfOutputs.GetProperty(&quot;AuxPositionId&quot;);
						auxDivId = wkfOutputs.GetProperty(&quot;AuxDivisionId&quot;);
						existPosId = wkfOutputs.GetProperty(&quot;ExistPositionId&quot;);
						
						if(existPosId != &quot;&quot; &amp;&amp; existPosId != null &amp;&amp; auxDivId != &quot;&quot; &amp;&amp; auxDivId != null)
						{
							UpdatePositionRegion(existPosId,auxDivId);
						}
					}
					hierCreated = true;
				}
				if((dealerParPosId == null || dealerParPosId == &quot;&quot;) &amp;&amp; auxPosId != &quot;&quot; &amp;&amp; auxPosId != null &amp;&amp; dealerPosName != (areaName + &quot; &quot; + TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VFTRCBU_REGIONAL_POSITIONS&quot;,&quot;0&quot;)))
				{	
					bcPosition.SetFieldValue(&quot;Parent Position Id&quot;,auxPosId);
					bcPosition.WriteRecord();
				}
				if((dealerParPosId == null || dealerParPosId == &quot;&quot;) &amp;&amp; auxDivId != &quot;&quot; &amp;&amp; auxDivId != null &amp;&amp; dealerPosName != (areaName + &quot; &quot; + TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VFTRCBU_REGIONAL_POSITIONS&quot;,&quot;0&quot;)))
				{	
					bcPosition.SetFieldValue(&quot;Division Id&quot;,auxDivId);
					bcPosition.WriteRecord();
				}
				posRec = bcPosition.NextRecord();
			}
			
			Outputs.SetProperty(&quot;Error Code&quot;, &quot;0&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;, &quot;OK&quot;);
		}
	}
	catch(e) 
	{
		Outputs.SetProperty(&quot;Error Code&quot;, e.errCode);
		Outputs.SetProperty(&quot;Error Message&quot;,e.errText);
	}
	finally
	{
		bcPosition = null;
		boPosition = null;
	}
}"
			   SEQUENCE="2"
			   UPDATED="05/10/2016 10:45:45"
			   UPDATED_BY="IMARTINS"
			   CREATED="12/16/2014 15:45:00"
			   CREATED_BY="RPIRES">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetChildByType"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetChildByType(psInput, sChildType, &amp;psChild)
{
//*****************************************************
//** Function:GetChildByType
//** Inputs : Inputs
//** Outputs: Outputs
//** Returns: None.
//*****************************************************
//** Revision History:
//** 01 - 08/02/2011 - Parasuram Mainam
//**    Create New - VFTK Project R142-WP15 Release 
//*****************************************************
  for(var i=0; i&lt;psInput.GetChildCount(); i++)
  {
    var sCurrType = psInput.GetChild(i).GetType();
    if(sCurrType == sChildType)
    {
      psChild = psInput.GetChild(i);
      return;
    }
    if(psChild == &quot;&quot;)
			GetChildByType(psInput.GetChild(i), sChildType,psChild);	
  }
}"
			   SEQUENCE="4"
			   UPDATED="12/17/2014 12:02:49"
			   UPDATED_BY="RPIRES"
			   CREATED="12/17/2014 12:02:49"
			   CREATED_BY="RPIRES">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetShopCodeInitialLetters"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetShopCodeInitialLetters (Inputs:PropertySet, Outputs:PropertySet)
{
	var string = Inputs.GetProperty(&quot;ShopCode&quot;);
	var aux = &quot;&quot;;
	var sReturn = &quot;&quot;;
	for(var i=0;i&lt;string.length;i++)
	{
		aux = string.charAt(i);
		if(isNaN(ToNumber(aux)))
			sReturn = sReturn + aux;
		else break;
	}
	Outputs.SetProperty(&quot;ShopCodeLetters&quot;,sReturn);
}"
			   SEQUENCE="5"
			   UPDATED="03/31/2015 12:27:52"
			   UPDATED_BY="RPIRES"
			   CREATED="03/30/2015 15:31:51"
			   CREATED_BY="RPIRES">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ParentPositionCheck"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ParentPositionCheck(Inputs, Outputs)
{
	try
	{
		var parentPositionName = Inputs.GetProperty(&quot;Parent Position Name&quot;);//Position Id if is trasfert method
		var trasfert = Inputs.GetProperty(&quot;Trasfert&quot;);
	
		var boParentPosition : BusObject = TheApplication().GetBusObject(&quot;Position&quot;);//Oracle Review 2013
		var bcParentPosition : BusComp   = boParentPosition.GetBusComp(&quot;Position&quot;);//Oracle Review 2013
		bcParentPosition.ActivateField(&quot;Name&quot;);
		bcParentPosition.ActivateField(&quot;VF TK PRM Active&quot;);
		bcParentPosition.ActivateField(&quot;Parent Position Name&quot;);
		bcParentPosition.ActivateField(&quot;Parent Position Id&quot;);
	
		if (trasfert ==&quot;True&quot;)
			bcParentPosition.SetSearchExpr(&quot;[Parent Position Id] = &apos;&quot;+parentPositionName+&quot;&apos; and [VF TK PRM Active]= &apos;Y&apos;&quot;);
		else
			bcParentPosition.SetSearchExpr(&quot;[Name] = &apos;&quot;+parentPositionName+&quot;&apos; and [VF TK PRM Active]= &apos;Y&apos;&quot;);

		bcParentPosition.ExecuteQuery(ForwardOnly);
		if (bcParentPosition.FirstRecord()) 
		{
			var parPosId = bcParentPosition.GetFieldValue(&quot;Id&quot;);
			Outputs.SetProperty(&quot;Result&quot;, &quot;True&quot;);
			Outputs.SetProperty(&quot;Parent Position Id&quot;,parPosId);
			return(CancelOperation);
		}
		Outputs.SetProperty(&quot;Result&quot;, &quot;False&quot;);
		return(ContinueOperation);
	}//End Try
	
	finally
	{
		parPosId = null;
		trasfert = null;
		parentPositionName = null;
		bcParentPosition = null;
		boParentPosition = null;
	}//Oracle Review 2013
}"
			   SEQUENCE="6"
			   UPDATED="03/30/2015 15:31:51"
			   UPDATED_BY="RPIRES"
			   CREATED="01/23/2012 13:46:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="PositionCreation"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function PositionCreation(Inputs)
{
	try 
	{
		var ShopId= Inputs.GetProperty(&quot;Shop Id&quot;);
		var DealerTypeCode = Inputs.GetProperty(&quot;Dealer Type Code&quot;);
		var DivisionId= Inputs.GetProperty(&quot;Division Id&quot;);
				
		var boPosition : BusObject = TheApplication().GetBusObject(&quot;Internal Division&quot;);//ORACLE REVIEW 2013
		var bcPosition : BusComp   = boPosition.GetBusComp(&quot;Position&quot;);//ORACLE REVIEW 2013
		bcPosition.ActivateField(&quot;Name&quot;);
		bcPosition.ActivateField(&quot;Position Type&quot;);

		bcPosition.NewRecord(NewAfter);            
		
		bcPosition.SetFieldValue(&quot;Name&quot;, ShopId);
		bcPosition.SetFieldValue(&quot;VFTRCBU Dealer Type Code&quot;, DealerTypeCode); //VFTRCBU-9037 RPIRES
		bcPosition.SetFieldValue(&quot;Division&quot;,ShopId);
		bcPosition.SetFieldValue(&quot;Division Id&quot;,DivisionId);
		
		bcPosition.WriteRecord();
	}//End Try
	catch (e) 
	{
		TheApplication().RaiseErrorText(e.toString());
    }
    finally 
    {
	    ShopId = null;
	    DealerTypeCode = null;
	    DivisionId = null;
	    boPosition = null;
	    bcPosition = null;
    }//ORACLE REVIEW 2013
}"
			   SEQUENCE="7"
			   UPDATED="05/05/2015 17:46:40"
			   UPDATED_BY="RPIRES"
			   CREATED="11/25/2011 13:17:10"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreCanInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreCanInvokeMethod (MethodName, &amp;CanInvoke)
{
	return (ContinueOperation);
}"
			   SEQUENCE="15"
			   UPDATED="03/30/2015 15:31:51"
			   UPDATED_BY="RPIRES"
			   CREATED="12/11/2012 17:58:17"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreInvokeMethod (MethodName, Inputs, Outputs)
{
	if (MethodName == &quot;UpdateResp_Employee&quot;) { 
   	UpdateResp_Employee(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;UpsertEmployee&quot;) { 
   	UpsertEmployee(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;Transfer&quot;) { 
   	Transfer(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;AddDealer&quot;) { 
   	AddDealer(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;ParentPositionCheck&quot;) { 
   	ParentPositionCheck(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;ParentDivisionCheck&quot;) { 
   	ParentPositionCheck(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;TransferDiv&quot;) {
   	TransferDiv(Inputs, Outputs);
	return (CancelOperation);
   }
   
   if (MethodName == &quot;calcAlias&quot;) {
   	calcAlias(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;AddRegionalInfo&quot;) {
	AddRegionalInfo(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;UpdateRegionalInfo&quot;) {
   	UpdateRegionalInfo(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;UpdateEmployeePosition&quot;) {
   	UpdateEmployeePosition(Inputs, Outputs);
	return (CancelOperation);
   }
   if (MethodName == &quot;GetShopCodeInitialLetters&quot;) {
   	GetShopCodeInitialLetters(Inputs,Outputs)
   	return (CancelOperation);
   }

return (ContinueOperation);
}"
			   SEQUENCE="16"
			   UPDATED="01/20/2016 12:42:39"
			   UPDATED_BY="RPIRES"
			   CREATED="06/07/2011 17:37:05"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Transfer"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Transfer(Inputs, Outputs) 
{
/* Fambio : October 7th 2011 for VF TK Rel2.1 (Lotus Notes Integration) */

/* IMARTINS October 2015 Review code as per WA#32 Drop 1 Take 2 */

    try 
    {
	    /* Get Inputs information */
		var empId = Inputs.GetProperty(&quot;Id&quot;);
        var MappedDealerTypeCode = Inputs.GetProperty(&quot;DealerTypeCode&quot;);//Position Type and relative Responsibility
		var DealerTypeCode = MappedDealerTypeCode;
		var ShopId = Inputs.GetProperty(&quot;ShopId&quot;);//Dealer Code
		var inProp :PropertySet     = TheApplication().NewPropertySet();
		var outProp :PropertySet    = TheApplication().NewPropertySet();
		var AccessType = Inputs.GetProperty(&quot;AccessType&quot;);
		var EmployeeResponsibility = Inputs.GetProperty(&quot;EmployeeResponsibility&quot;); // IMARTINS Added
		var EmployeeRole = Inputs.GetProperty(&quot;EmployeeRole&quot;); // IMARTINS Added
		var newPosId = Inputs.GetProperty(&quot;PositionId&quot;); // IMARTINS Added
		var ParentShopId = Inputs.GetProperty(&quot;ParentShopId&quot;); // IMARTINS Added
		var DealerGroup = Inputs.GetProperty(&quot;DealerGroup&quot;); // IMARTINS VFTRCBU-24115 -- Added to indicate Sub-Dealer scenario
		var newRespId;
		var newSalesTeam;
		var sHavePosition = &quot;N&quot;; //JMARQUES
		
		var boEmployee : BusObject = TheApplication().GetBusObject(&quot;Employee&quot;);//ORACLE REVIEW 2013
		var bcEmployee : BusComp   = boEmployee.GetBusComp(&quot;Employee&quot;);//ORACLE REVIEW 2013
		bcEmployee.ClearToQuery();
		bcEmployee.SetViewMode(AllView);
		bcEmployee.ActivateField(&quot;Dealer Type Code&quot;);
		bcEmployee.ActivateField(&quot;VF Shop Id&quot;);
		bcEmployee.ActivateField(&quot;Position&quot;);
		bcEmployee.ActivateField(&quot;Responsibility&quot;);
		bcEmployee.ActivateField(&quot;Primary Position Id&quot;);
		bcEmployee.ActivateField(&quot;Primary Responsibility Id&quot;);
		bcEmployee.ActivateField(&quot;Primary Sales Rep Id&quot;);
		bcEmployee.ActivateField(&quot;Alias&quot;);
		
		/* Get old values */
		var loginName = null;
		bcEmployee.SetSearchSpec(&quot;Id&quot;, empId);
		bcEmployee.ExecuteQuery(ForwardOnly);
		if(bcEmployee.FirstRecord())
		{
			var oldPosition = bcEmployee.GetFieldValue(&quot;Primary Position Id&quot;);
			var oldResponsibility = bcEmployee.GetFieldValue(&quot;Primary Responsibility Id&quot;);
			var oldSalesTeam = bcEmployee.GetFieldValue(&quot;Primary Sales Rep Id&quot;);	
			loginName = bcEmployee.GetFieldValue(&quot;Login Name&quot;);//DEF-3575		
		}

		/* Associate new MVG Position */
		var positionMVGBC = bcEmployee.GetMVGBusComp(&quot;Position&quot;);
		var positionAssocBC = positionMVGBC.GetAssocBusComp();
	
		//JMARQUES
		positionMVGBC.ClearToQuery();
		positionMVGBC.SetViewMode(AllView);
		positionMVGBC.SetSearchExpr(&quot;[Id] = &apos;&quot;+newPosId+&quot;&apos;&quot;);
		positionMVGBC.ExecuteQuery(ForwardOnly);
		if(positionMVGBC.FirstRecord())
			sHavePosition = &quot;Y&quot;;
		//JMARQUES		
		
		
		positionAssocBC.ClearToQuery();
		positionAssocBC.SetViewMode(AllView);
		positionAssocBC.SetSearchExpr(&quot;[Id] = &apos;&quot;+newPosId+&quot;&apos;&quot;);
		positionAssocBC.ExecuteQuery(ForwardOnly);
		
			if (newPosId != oldPosition &amp;&amp; positionAssocBC.FirstRecord())
			{ //Check for skip

				if(sHavePosition == &quot;N&quot;)	//JMARQUES
					positionAssocBC.Associate(NewBefore);				
				
				bcEmployee.SetFieldValue(&quot;Primary Position Id&quot;,newPosId);				
				bcEmployee.SetFieldValue(&quot;VF Shop Id&quot;,ShopId);
				/* Dissociate old MVG Position */
				positionMVGBC.SetSearchExpr(&quot;[Id] = &apos;&quot;+oldPosition+&quot;&apos;&quot;);
				positionMVGBC.ExecuteQuery(ForwardOnly);
				if (positionMVGBC.FirstRecord()) 
				{
					positionMVGBC.DeleteRecord();
				}
				
				bcEmployee.WriteRecord();
				
				// IMARTINS VFTRCBU-24115 21012016 :: Sub-Dealer scenario :: Skip Position Profile insert if Sub-Dealer
				if (DealerGroup != &quot;Y&quot; &amp;&amp; EmployeeRole != &quot;&quot; &amp;&amp; EmployeeRole != null)
				{
					/* Get Dealer Position Profile :: IMARTINS 30092015 Added as per WA#32 Drop 1 Take 2*/
					var boPosProfile : BusObject = TheApplication().GetBusObject(&quot;Position&quot;);
					var bcPosProfile : BusComp   = boPosProfile.GetBusComp(&quot;TELCO Position Profiles&quot;);
					
					with(bcPosProfile)
					{
						ActivateField(&quot;TELCO Category&quot;);
						ActivateField(&quot;TELCO Attribute&quot;);
						ActivateField(&quot;TELCO Attribute Value&quot;);
						ActivateField(&quot;TELCO Position Id&quot;);
						SetSearchExpr(&quot;[TELCO Category] = &apos;Role&apos; AND [TELCO Attribute] =&apos;&quot;+EmployeeRole+&quot;&apos; AND [TELCO Position Id]=&apos;&quot;+newPosId+&quot;&apos; &quot;);
						ExecuteQuery(ForwardOnly);
						if (FirstRecord()) 
						{
							// check if position profile is active
							if (GetFieldValue(&quot;TELCO Attribute Value&quot;) == &quot;N&quot;)
							{
								SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
								WriteRecord();
							}
						}
						else
						{
							// insert position profile role
							NewRecord(NewAfter); 
							SetFieldValue(&quot;TELCO Category&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Role&quot;));
							SetFieldValue(&quot;TELCO Attribute&quot;,EmployeeRole);
							SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
							SetFieldValue(&quot;TELCO Position Id&quot;,newPosId);
							WriteRecord();
							
							// profile agent type exists?
							ClearToQuery();
							ActivateField(&quot;TELCO Category&quot;);
							ActivateField(&quot;TELCO Attribute&quot;);
							ActivateField(&quot;TELCO Attribute Value&quot;);
							ActivateField(&quot;TELCO Position Id&quot;);
							SetSearchSpec(&quot;TELCO Category&quot;, TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Agent Type&quot;));
							SetSearchSpec(&quot;TELCO Attribute&quot;, TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Dealer&quot;));
							SetSearchSpec(&quot;TELCO Position Id&quot;, newPosId);
							ExecuteQuery(ForwardOnly);
							//SetSearchExpr(&quot;[TELCO Category] = &apos;&quot;++&quot;&apos; AND [TELCO Attribute] =&apos;&quot;+EmployeeRole+&quot;&apos; AND [TELCO Position Id]=&apos;&quot;+newPosId+&quot;&apos; &quot;);
							
							if (FirstRecord()) 
							{						
								// check if position profile is active
								if (GetFieldValue(&quot;TELCO Attribute Value&quot;) == &quot;N&quot;)
								{
									SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
									WriteRecord();
								}
							}
							else
							{	
								// insert position profile agent type
								NewRecord(NewAfter); 
								SetFieldValue(&quot;TELCO Category&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Agent Type&quot;));
								SetFieldValue(&quot;TELCO Attribute&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Dealer&quot;));
								SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
								SetFieldValue(&quot;TELCO Position Id&quot;,newPosId);
								WriteRecord();
							}
						}
					}
				}
			}
		//}
		/*else 
		{
			Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
			Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-00003&quot;);		
			Outputs.SetProperty(&quot;Error Description&quot;,&quot;The dealer code does not exists&quot;); //IMARTINS Changed message
			return(CancelOperation);
		}*/
		
		
		/* Associate Sales Team to Employee (need to Originating Dealer Code pickapplet on PRM) */
		//if (MappedDealerTypeCode == &quot;Role19&quot;) 
		if (ParentShopId == &quot;&quot; || ParentShopId == null) // IMARTINS Changed condition
		{ //Just for Shops 
		//	DealerTypeCode = &quot;PRM_SHOP MERKEZ&quot;;
			var salesTeamMVGBC = bcEmployee.GetMVGBusComp(&quot;Sales Team&quot;);
			var salesTeamAssocBC = salesTeamMVGBC.GetAssocBusComp();
			salesTeamAssocBC.ClearToQuery();
			salesTeamAssocBC.SetViewMode(AllView);
			salesTeamAssocBC.ActivateField(&quot;Name&quot;);
			salesTeamAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+ShopId+&quot;&apos;&quot;);
			salesTeamAssocBC.ExecuteQuery(ForwardOnly);
			if (salesTeamAssocBC.FirstRecord()) 
			{
				newSalesTeam = salesTeamAssocBC.GetFieldValue(&quot;Id&quot;);
				if (newSalesTeam != oldSalesTeam) 
				{ //Check for skip
					salesTeamAssocBC.Associate(NewBefore);
					bcEmployee.SetFieldValue(&quot;Primary Sales Rep Id&quot;, newSalesTeam);

					/* Dissociate old Sales Team */
					salesTeamMVGBC.SetSearchExpr(&quot;[Id] = &apos;&quot;+oldSalesTeam+&quot;&apos;&quot;);
					salesTeamMVGBC.ExecuteQuery(ForwardOnly);
					if (salesTeamMVGBC.FirstRecord()) 
					{
						salesTeamMVGBC.DeleteRecord();
					}
					bcEmployee.SetFieldValue(&quot;Primary Position Id&quot;,newPosId); //Add for Primary Position Id unlinked
				}
			}
			else 
			{
				Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
				Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-00003&quot;);		
				Outputs.SetProperty(&quot;Error Description&quot;,&quot;The dealer code does not exists&quot;);
				return(CancelOperation);
			}
		}
		

		/* Associate new MVG Responsibility */
		/*if (MappedDealerTypeCode == &quot;Role4&quot;) - IMARTINS commented as per WA#32 Drop 1 Take 2
			DealerTypeCode = &quot;SME Dealer&quot;; //Responsibility for KSK
		else if (MappedDealerTypeCode == &quot;Role64&quot;)
			DealerTypeCode = &quot;PRM_EXPRESS&quot;;	*/

		// IMARTINS VFTRCBU-24115 21012016 :: Sub-Dealer scenario :: Skip Responsability association if Sub-Dealer
		if(DealerGroup != &quot;Y&quot; &amp;&amp; EmployeeResponsibility != &quot;&quot; &amp;&amp; EmployeeResponsibility != null) 
		{
			var responsibilityMVGBC = bcEmployee.GetMVGBusComp(&quot;Responsibility&quot;);
			var responsibilityAssocBC = responsibilityMVGBC.GetAssocBusComp();
			responsibilityAssocBC.ClearToQuery();
			responsibilityAssocBC.SetViewMode(AllView);
			responsibilityAssocBC.ActivateField(&quot;Name&quot;);
			responsibilityAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+EmployeeResponsibility+&quot;&apos;&quot;); // IMARTINS changed to EmployeeResponsibility
			responsibilityAssocBC.ExecuteQuery(ForwardOnly);
			
			if (responsibilityAssocBC.FirstRecord()) 
			{
				newRespId = responsibilityAssocBC.GetFieldValue(&quot;Id&quot;)
				if (newRespId != oldResponsibility)
				{
					responsibilityAssocBC.Associate(NewBefore);
					bcEmployee.SetFieldValue(&quot;Primary Responsibility Id&quot;,newRespId);
					bcEmployee.SetFieldValue(&quot;Dealer Type Code&quot;, MappedDealerTypeCode);
					
					/* Dissociate old MVG Responsibility */		
					responsibilityMVGBC.SetSearchExpr(&quot;[Id] = &apos;&quot;+oldResponsibility+&quot;&apos;&quot;);
					responsibilityMVGBC.ExecuteQuery(ForwardOnly);
					if ( responsibilityMVGBC.FirstRecord()) 
					{
						responsibilityMVGBC.DeleteRecord();
					}
				}
			}
			else 
			{
				Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
				Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-00006&quot;);		
				Outputs.SetProperty(&quot;Error Description&quot;,&quot;The responsibility does not exists&quot;);
				return(CancelOperation);
			}
		}

		inProp.SetProperty(&quot;Login&quot;,loginName);
		calcAlias(inProp,outProp);
		bcEmployee.SetFieldValue(&quot;Alias&quot;,outProp.GetProperty(&quot;Alias&quot;));//DEF-3575
		
		bcEmployee.WriteRecord();

		Outputs.SetProperty(&quot;Error Code&quot;,&quot;0&quot;);		
		Outputs.SetProperty(&quot;Error Description&quot;,&quot;Success&quot;);
		Outputs.SetProperty(&quot;Status Code&quot;, &quot;0&quot;);
    }//End Try
    catch (e) 
    {
        TheApplication().RaiseErrorText(e.toString());
    } 
    finally 
    {
        empId = null;
        MappedDealerTypeCode = null;
        DealerTypeCode = null;
        ShopId = null;
        newPosId = null;
        newRespId = null;
        newSalesTeam = null;
        
		positionAssocBC = null;
        positionMVGBC = null;
        responsibilityAssocBC = null;
	    responsibilityMVGBC = null;
		salesTeamAssocBC = null;
        salesTeamMVGBC = null;
        
		oldPosition= null;
		oldResponsibility = null;
		oldSalesTeam = null;
		bcEmployee = null;
        boEmployee = null;
    }//ORACLE REVIEW 2013
}"
			   SEQUENCE="8"
			   UPDATED="04/27/2016 17:01:56"
			   UPDATED_BY="JMARQUES"
			   CREATED="12/19/2011 13:15:32"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="TransferDiv"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function TransferDiv(Inputs, Outputs)
{
	try 
	{
		var positionId = Inputs.GetProperty(&quot;Id&quot;);
		var parentPositionName = Inputs.GetProperty(&quot;Parent Position Name&quot;);

		/* Check Position Target*/
		ParentPositionCheck(Inputs, Outputs);

		var result = Outputs.GetProperty(&quot;Result&quot;);
		if (result == &quot;True&quot;)
		{
			var parentPositionTargetId = Outputs.GetProperty(&quot;Parent Position Id&quot;);
			
			/* Check if exist an activeted Sub-Division */
			var InputsSubDiv = TheApplication().NewPropertySet();
			var OutputsSubDiv = TheApplication().NewPropertySet();

			InputsSubDiv.SetProperty(&quot;Parent Position Name&quot;,positionId); //I would re-use the ParentPositionCheck func
			InputsSubDiv.SetProperty(&quot;Trasfert&quot;,&quot;True&quot;);	//Change SetSearchExpr on ParentPositionCheck func

			ParentPositionCheck(InputsSubDiv, OutputsSubDiv);

			var resultSubDiv = OutputsSubDiv.GetProperty(&quot;Result&quot;);
			if (resultSubDiv ==&quot;False&quot;)
			{

				/*Trasfert to Position target */
				var boPosition : BusObject = TheApplication().GetBusObject(&quot;Position&quot;);//ORACLE REVIEW 2013
				var bcPosition : BusComp   = boPosition.GetBusComp(&quot;Position&quot;);//ORACLE REVIEW 2013
				bcPosition.ActivateField(&quot;Parent Position Id&quot;);
				bcPosition.ActivateField(&quot;Parent Position Name&quot;);
				bcPosition.SetSearchExpr(&quot;[Id] = &apos;&quot;+positionId+&quot;&apos; and [VF TK PRM Active]= &apos;Y&apos;&quot;);
				bcPosition.ExecuteQuery(ForwardOnly);
				if (bcPosition.FirstRecord()) 
				{
					bcPosition.SetFieldValue(&quot;Parent Position Name&quot;, parentPositionName);
					bcPosition.SetFieldValue(&quot;Parent Position Id&quot;, parentPositionTargetId);
					bcPosition.WriteRecord();
					Outputs.SetProperty(&quot;Status Code&quot;,&quot;0&quot;);
					return(CancelOperation);
				}
			}
			Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
			Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-10003&quot;);		
			Outputs.SetProperty(&quot;Error Description&quot;,&quot;Transfer action cannot be processed since there are active sub-dealers under the transferred dealer.&quot;);
			return(CancelOperation);			
		}
		Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
		Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-10005&quot;);		
		Outputs.SetProperty(&quot;Error Description&quot;,&quot;The parent dealer code does not exist&quot;);
	}//End Try
	catch (e) 
	{
		TheApplication().RaiseErrorText(e.toString());
    }
    finally 
    {
	    positionId = null;
	    parentPositionName = null;
	    result = null;
	    parentPositionTargetId = null;
	    InputsSubDiv = null;
	    OutputsSubDiv = null;
	    resultSubDiv = null;
	    boPosition = null;
	    bcPosition = null;
    }//ORACLE REVIEW 2013
}"
			   SEQUENCE="9"
			   UPDATED="03/30/2015 15:31:51"
			   UPDATED_BY="RPIRES"
			   CREATED="12/19/2011 13:15:32"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="UpdateEmployeePosition"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function UpdateEmployeePosition(Inputs, Outputs) 
{
	try
	{
		var sourcePropSet = Inputs.GetProperty(&quot;SiebelMessage&quot;);
		var empError = false;
		var posError = false;
		var empErrorMsg = &quot;Following Employees were not found: &quot;;
		var posErrorMsg = &quot;Following Employees already have same position: &quot;;
		var i;
		
		var boEmp :  BusObject = TheApplication().GetBusObject(&quot;Employee&quot;);
		var bcEmp :  BusComp   = boEmp.GetBusComp(&quot;Employee&quot;);
		var bcPos :  BusComp   = boEmp.GetBusComp(&quot;Position&quot;);
		var positionMVGBC;
		var positionAssocBC;
		
		var actionType;
		var areaId;
		var areaName;
		var areaManagerId;
		var areaManagerName;
		var regionManagerId;
		var regionManagerName;
		var salesId;
		var salesName;
		
		var cnt;
		var strP1;
		
		var psChild=&quot;&quot;;
		GetChildByType(Inputs, &quot;ListOfVFTRCBUManageRegionalUserInformation&quot;, psChild);
		if(psChild==&quot;&quot;)
		{
			Outputs.SetProperty(&quot;Error Code&quot;,&quot;1&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;,&quot;Wrong input message format!&quot;);
		}
		else
		{
			var psChild1=&quot;&quot;;
			GetChildByType(Inputs, &quot;Request&quot;, psChild1);
			if(psChild1==&quot;&quot;)
			{
				Outputs.SetProperty(&quot;Error Code&quot;,&quot;1&quot;);
				Outputs.SetProperty(&quot;Error Message&quot;,&quot;Wrong input message format!&quot;);
			}
			else
			{
				actionType = psChild1.GetProperty(&quot;ActionType&quot;);
				areaId = psChild1.GetProperty(&quot;AreaId&quot;); 
				areaName = psChild1.GetProperty(&quot;AreaName&quot;); 
				areaManagerId = psChild1.GetProperty(&quot;AreaManagerId&quot;); 
				areaManagerName = psChild1.GetProperty(&quot;AreaManagerName&quot;); 
				regionManagerId = psChild1.GetProperty(&quot;RegionManagerId&quot;); 
				regionManagerName = psChild1.GetProperty(&quot;RegionManagerName&quot;);
				
				bcEmp.SetViewMode(AllView);
				bcEmp.ClearToQuery();  
				bcEmp.SetSearchSpec(&quot;Login Name&quot;, areaManagerId);
				bcEmp.ExecuteQuery(ForwardOnly);
				
				var empRec = bcEmp.FirstRecord();
				
				if(!empRec)
				{
					empError = true;
					empErrorMsg = empErrorMsg + areaManagerId + &quot;;&quot;;
				}
				else
				{
					positionMVGBC = bcEmp.GetMVGBusComp(&quot;Position&quot;);
					positionAssocBC = positionMVGBC.GetAssocBusComp();
					positionAssocBC.ActivateField(&quot;Name&quot;);
					positionAssocBC.SetSearchSpec(&quot;Name&quot;,areaName + &quot; Area Manager&quot;);
					positionAssocBC.ExecuteQuery(ForwardOnly);
					if (positionAssocBC.FirstRecord()) 
					{
						try
						{
							positionAssocBC.Associate(NewBefore);
						}
						catch(e)
						{
							posError = true;
							posErrorMsg = posErrorMsg + areaManagerId + &quot;;&quot;;
						}
					}
					bcEmp.WriteRecord();
				}
				
				bcEmp.SetViewMode(AllView);
				bcEmp.ClearToQuery();  
				bcEmp.SetSearchSpec(&quot;Login Name&quot;, regionManagerId);
				bcEmp.ExecuteQuery(ForwardOnly);
				
				empRec = bcEmp.FirstRecord();
				
				if(!empRec)
				{
					empError = true;
					empErrorMsg = empErrorMsg + regionManagerId + &quot;;&quot;;
				}
				else
				{
					positionMVGBC = bcEmp.GetMVGBusComp(&quot;Position&quot;);
					positionAssocBC = positionMVGBC.GetAssocBusComp();
					positionAssocBC.ActivateField(&quot;Name&quot;);
					positionAssocBC.SetSearchSpec(&quot;Name&quot;,areaName + &quot; Region Manager&quot;);
					positionAssocBC.ExecuteQuery(ForwardOnly);
					if (positionAssocBC.FirstRecord()) 
					{
						try
						{
							positionAssocBC.Associate(NewBefore);
						}
						catch(e)
						{
							posError = true;
							posErrorMsg = posErrorMsg + regionManagerId + &quot;;&quot;;
						}
					}
					bcEmp.WriteRecord();
				}
				
				var psChild2=&quot;&quot;;
				GetChildByType(Inputs, &quot;ListOfSalesExecutiveList&quot;, psChild2);
				if(psChild2!=&quot;&quot;)
				{
					cnt = psChild2.GetChildCount();
					for(i=0;i&lt;cnt;i++)
					{
						strP1=psChild2.GetChild(i).GetType();
						if (strP1 == &quot;SalesExecutiveList&quot;)
						{
							salesId = psChild2.GetChild(i).GetProperty(&quot;SalesExecutiveId&quot;);
							salesName = psChild2.GetChild(i).GetProperty(&quot;SalesExecutiveName&quot;);
						
							bcEmp.SetViewMode(AllView);
							bcEmp.ClearToQuery();  
							bcEmp.SetSearchSpec(&quot;Login Name&quot;, salesId);
							bcEmp.ExecuteQuery(ForwardOnly);
							
							empRec = bcEmp.FirstRecord();
							
							if(!empRec)
							{
								empError = true;
								empErrorMsg = empErrorMsg + salesId + &quot;;&quot;;
							}
							else
							{
								positionMVGBC = bcEmp.GetMVGBusComp(&quot;Position&quot;);
								positionAssocBC = positionMVGBC.GetAssocBusComp();
								positionAssocBC.ActivateField(&quot;Name&quot;);
								positionAssocBC.SetSearchSpec(&quot;Name&quot;,areaName + &quot; Sales Executive&quot;);
								positionAssocBC.ExecuteQuery(ForwardOnly);
								if (positionAssocBC.FirstRecord()) 
								{
									try
									{
										positionAssocBC.Associate(NewBefore);
									}
									catch(e)
									{
										posError = true;
										posErrorMsg = posErrorMsg + salesId + &quot;;&quot;;
									}
								}
								bcEmp.WriteRecord();
							}
						}
						else
						{
							Outputs.SetProperty(&quot;Error Code&quot;,&quot;1&quot;);
							Outputs.SetProperty(&quot;Error Message&quot;,&quot;Wrong input message format!&quot;);
						}
					}
				}
				
				psChild2=&quot;&quot;;
				GetChildByType(Inputs, &quot;ListOfSalesSupportList&quot;, psChild2);
				if(psChild2!=&quot;&quot;)
				{
					cnt = psChild2.GetChildCount();
					for(i=0;i&lt;cnt;i++)
					{
						strP1=psChild2.GetChild(i).GetType();
						if (strP1 == &quot;SalesSupportList&quot;)
						{
							salesId = psChild2.GetChild(i).GetProperty(&quot;SalesSupportId&quot;);
							salesName = psChild2.GetChild(i).GetProperty(&quot;SalesSupportName&quot;);
								
							bcEmp.SetViewMode(AllView);
							bcEmp.ClearToQuery();  
							bcEmp.SetSearchSpec(&quot;Login Name&quot;, salesId);
							bcEmp.ExecuteQuery(ForwardOnly);
							
							empRec = bcEmp.FirstRecord();
							
							if(!empRec)
							{
								empError = true;
								empErrorMsg = empErrorMsg + salesId + &quot;;&quot;;
							}
							else
							{
								positionMVGBC = bcEmp.GetMVGBusComp(&quot;Position&quot;);
								positionAssocBC = positionMVGBC.GetAssocBusComp();
								positionAssocBC.ActivateField(&quot;Name&quot;);
								positionAssocBC.SetSearchSpec(&quot;Name&quot;,areaName + &quot; Sales Support&quot;);
								positionAssocBC.ExecuteQuery(ForwardOnly);
								if (positionAssocBC.FirstRecord()) 
								{
									try
									{
										positionAssocBC.Associate(NewBefore);
									}
									catch(e)
									{
										posError = true;
										posErrorMsg = posErrorMsg + salesId + &quot;;&quot;;
									}
								}
								bcEmp.WriteRecord();
							}
						}
						else
						{
							Outputs.SetProperty(&quot;Error Code&quot;,&quot;1&quot;);
							Outputs.SetProperty(&quot;Error Message&quot;,&quot;Wrong input message format!&quot;);
						}
					}
				}
			}
		}
		
		if(empError)
		{
			Outputs.SetProperty(&quot;Error Code&quot;, &quot;2&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;, empErrorMsg);
		}
		else if(posError)
		{
			Outputs.SetProperty(&quot;Error Code&quot;, &quot;3&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;, posErrorMsg);
		}
		else if(empError &amp;&amp; posError)
		{
			Outputs.SetProperty(&quot;Error Code&quot;, &quot;4&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;, empErrorMsg + &quot; / &quot; + posErrorMsg);
		}
		else
		{
			Outputs.SetProperty(&quot;Error Code&quot;, &quot;0&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;, &quot;OK&quot;);
		}
	}
	catch(e) 
	{
		Outputs.SetProperty(&quot;Error Code&quot;, e.errCode);
		Outputs.SetProperty(&quot;Error Message&quot;,e.errText);
	}
	finally
	{
		bcPos = null;
		bcEmp = null;
		boEmp = null;
	}
}"
			   SEQUENCE="10"
			   UPDATED="03/30/2015 15:31:51"
			   UPDATED_BY="RPIRES"
			   CREATED="12/17/2014 14:43:54"
			   CREATED_BY="RPIRES">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="UpdatePositionRegion"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function UpdatePositionRegion(posId,divId) 
{
	try
	{
		var currPos = 0;
		var currentPosition;
		var dealerPosId;
		var dealerParPosId;
		var dealerParPosName;
		var auxPosId;
		var divisionId;
				
		var boPosition :  BusObject = TheApplication().GetBusObject(&quot;Position&quot;);
		var bcPosition :  BusComp   = boPosition.GetBusComp(&quot;Position&quot;);
		var boDivision :  BusObject = TheApplication().GetBusObject(&quot;Internal Division&quot;);
		var bcDiv :  BusComp   = boDivision.GetBusComp(&quot;Internal Division&quot;);
		var wkfSvc = TheApplication().GetService(&quot;Workflow Process Manager&quot;);
		var wkfInputs = TheApplication().NewPropertySet();
		var wkfOutputs = TheApplication().NewPropertySet();
		
		bcDiv.SetViewMode(AllView);
		bcDiv.ClearToQuery();   
		bcDiv.SetSearchSpec(&quot;Id&quot;,divId);
		bcDiv.ExecuteQuery(ForwardOnly);
		
		var rec = bcDiv.FirstRecord();
		
		if(rec)
		{
			bcPosition.SetViewMode(AllView);
			bcPosition.ClearToQuery();   
			bcPosition.SetSearchSpec(&quot;Id&quot;,posId);
			bcPosition.ExecuteQuery(ForwardOnly);
			
			rec = bcPosition.FirstRecord();
			
			if(rec)
			{
				bcPosition.SetFieldValue(&quot;Division Id&quot;,divId);
				bcPosition.WriteRecord();
			}
		}
	}
	catch(e) 
	{
		Outputs.SetProperty(&quot;Error Code&quot;, e.errCode);
		Outputs.SetProperty(&quot;Error Message&quot;,e.errText);
	}
	finally
	{
		bcPosition = null;
		boPosition = null;
	}
}"
			   SEQUENCE="11"
			   UPDATED="03/30/2015 15:31:51"
			   UPDATED_BY="RPIRES"
			   CREATED="03/11/2015 10:07:58"
			   CREATED_BY="RPIRES">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="UpdateRegionalInfo"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function UpdateRegionalInfo(Inputs, Outputs) 
{
	try
	{
		var areaCode = Inputs.GetProperty(&quot;AreaCode&quot;);
		var areaName = Inputs.GetProperty(&quot;AreaName&quot;);
		var regionCode = Inputs.GetProperty(&quot;RegionCode&quot;);
		var regionName = Inputs.GetProperty(&quot;RegionName&quot;);
		var currPos = 0;
		var currentPosition;
		var dealerPosId;
		var dealerParPosId;
		var dealerParPosName;
		var auxPosId;
		var divisionId;
				
		var boPosition :  BusObject = TheApplication().GetBusObject(&quot;Position&quot;);
		var bcPosition :  BusComp   = boPosition.GetBusComp(&quot;Position&quot;);
		var boDivision :  BusObject = TheApplication().GetBusObject(&quot;Internal Division&quot;);
		var bcDiv :  BusComp   = boDivision.GetBusComp(&quot;Internal Division&quot;);
		var wkfSvc = TheApplication().GetService(&quot;Workflow Process Manager&quot;);
		var wkfInputs = TheApplication().NewPropertySet();
		var wkfOutputs = TheApplication().NewPropertySet();
		
		bcDiv.SetViewMode(AllView);
		bcDiv.ClearToQuery();   
		bcDiv.SetSearchExpr(&quot;[Name] = &apos;&quot;+regionCode+&quot;&apos;&quot;);
		bcDiv.ExecuteQuery(ForwardOnly);
		
		var posRec = bcDiv.FirstRecord();
		
		if(!posRec)
		{
			Outputs.SetProperty(&quot;Error Code&quot;,&quot;1&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;,&quot;Division not found.&quot;);
			return;
		}
		else
		{
			divisionId = bcDiv.GetFieldValue(&quot;Id&quot;);
		}
		
		bcPosition.SetViewMode(AllView);
		bcPosition.ClearToQuery();   
		bcPosition.SetSearchExpr(&quot;[VFTRCBU Area Code] = &apos;&quot;+areaCode+&quot;&apos;&quot;);
		bcPosition.ExecuteQuery(ForwardOnly);
		
		posRec = bcPosition.FirstRecord();
		
		if(!posRec)
		{
			Outputs.SetProperty(&quot;Error Code&quot;,&quot;1&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;,&quot;There are no Dealers for the input area.&quot;);
		}
		else
		{
			while(posRec)
			{
				bcPosition.SetFieldValue(&quot;Division Id&quot;,divisionId);
				bcPosition.WriteRecord();
				
				posRec = bcPosition.NextRecord();
			}
			
			Outputs.SetProperty(&quot;Error Code&quot;, &quot;0&quot;);
			Outputs.SetProperty(&quot;Error Message&quot;, &quot;OK&quot;);
		}
	}
	catch(e) 
	{
		Outputs.SetProperty(&quot;Error Code&quot;, e.errCode);
		Outputs.SetProperty(&quot;Error Message&quot;,e.errText);
	}
	finally
	{
		bcPosition = null;
		boPosition = null;
	}
}"
			   SEQUENCE="12"
			   UPDATED="01/20/2016 12:09:57"
			   UPDATED_BY="RPIRES"
			   CREATED="12/16/2014 17:45:37"
			   CREATED_BY="RPIRES">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="UpdateResp_Employee"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function UpdateResp_Employee(Inputs, Outputs) 
{
    try 
    {
		/* Get inputs information */
        var EmployeeResponsibility = Inputs.GetProperty(&quot;EmployeeResponsibility&quot;);
        var OldEmpResponsibility = Inputs.GetProperty(&quot;OldEmpResponsibility&quot;);
        var EmployeeID = Inputs.GetProperty(&quot;EmployeeID&quot;);
		var primaryResp;
        /* Create Employee */
		var boEmployee : BusObject = TheApplication().GetBusObject(&quot;Employee&quot;);//ORACLE REVIEW 2013
		var bcEmployee : BusComp   = boEmployee.GetBusComp(&quot;Employee&quot;);//ORACLE REVIEW 2013    
		bcEmployee.SetViewMode(AllView);
		bcEmployee.ClearToQuery();     
		bcEmployee.ActivateField(&quot;Employee ID&quot;);
		bcEmployee.ActivateField(&quot;Responsibility&quot;);
		bcEmployee.ActivateField(&quot;Primary Responsibility Id&quot;);	
		bcEmployee.SetSearchSpec(&quot;Id&quot;, EmployeeID);
		bcEmployee.ExecuteQuery(ForwardOnly);
		if(bcEmployee.FirstRecord())
		{	
			/* Associate Responsibility to Employee  */
			var responsibilityMVGBC = bcEmployee.GetMVGBusComp(&quot;Responsibility&quot;);
			var responsibilityAssocBC = responsibilityMVGBC.GetAssocBusComp();
			responsibilityAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+EmployeeResponsibility+&quot;&apos;&quot;);
			responsibilityAssocBC.ExecuteQuery(ForwardOnly);
			if (responsibilityAssocBC.FirstRecord()) 
			{
				try
				{
					primaryResp = responsibilityAssocBC.GetFieldValue(&quot;Id&quot;);
					responsibilityAssocBC.Associate(NewBefore);
					bcEmployee.SetFieldValue(&quot;Primary Responsibility Id&quot;, primaryResp);
					/* Dissociate Old Responsibility*/
					responsibilityMVGBC.ClearToQuery();
					responsibilityMVGBC.SetSearchExpr(&quot;[Id] = &apos;&quot;+OldEmpResponsibility+&quot;&apos;&quot;);
					responsibilityMVGBC.ExecuteQuery(ForwardOnly);
					if (responsibilityMVGBC.FirstRecord()) 
					{
						responsibilityMVGBC.DeleteRecord();
					}
				}
				catch (e)
				{
					Outputs.SetProperty(&quot;Status Code&quot;, &quot;0&quot;);
				}	
			}
			else 
			{
				Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
				Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-00006&quot;);		
				Outputs.SetProperty(&quot;Error Description&quot;,&quot;The Responsibility does not exists&quot;);
				return(CancelOperation);
			}
	
			bcEmployee.WriteRecord();
			Outputs.SetProperty(&quot;Status Code&quot;, &quot;0&quot;);
		}
    }
    finally 
    {
		responsibilityAssocBC = null;
		responsibilityMVGBC = null;
		bcEmployee = null;
		boEmployee = null;
    }//ORACLE REVIEW 2013
}"
			   SEQUENCE="13"
			   UPDATED="10/22/2015 15:52:50"
			   UPDATED_BY="SADMIN"
			   CREATED="06/04/2013 00:30:39"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="UpsertEmployee"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function UpsertEmployee(Inputs, Outputs) 
{

/* IMARTINS October 2015 Review code as per WA#32 Drop 1 Take 2 */

    try 
    {
		/* Get inputs information */
        var LoginName = Inputs.GetProperty(&quot;UserID&quot;);
        var FirstName = Inputs.GetProperty(&quot;FirstName&quot;);
        var LastName = Inputs.GetProperty(&quot;LastName&quot;);        
        var EmployeeID = Inputs.GetProperty(&quot;EmployeeID&quot;);
        var EmployeeResponsibility = Inputs.GetProperty(&quot;EmployeeResponsibility&quot;); // IMARTINS uncommented as per WA#32 Drop 1 Take 2
        var EmployeeRole = Inputs.GetProperty(&quot;EmployeeRole&quot;);
        //var EmployeeResponsibility ;
        var ProfileCode = Inputs.GetProperty(&quot;Profile Code&quot;);
        var Active = Inputs.GetProperty(&quot;Active&quot;);
        var BlackWhiteList = Inputs.GetProperty(&quot;BlackWhiteList&quot;);
        var DealerTypeCode = Inputs.GetProperty(&quot;DealerTypeCode&quot;);
        var GSMNumber = Inputs.GetProperty(&quot;GSMNumber&quot;);
        var JobTitle = Inputs.GetProperty(&quot;JobTitle&quot;);
        var ShopId = Inputs.GetProperty(&quot;ShopId&quot;);//Dealer Code       
        var ShopName = Inputs.GetProperty(&quot;ShopName&quot;);//Dealer Name
        var OriginatingDealerCode = Inputs.GetProperty(&quot;OriginatingDealerCode&quot;);
        var PositionInput = Inputs.GetProperty(&quot;PositionInput&quot;);
        var PositionId = Inputs.GetProperty(&quot;PositionId&quot;); //IMARTINS added as per WA#32 Drop 1 Take 2
        var ParentShopId = Inputs.GetProperty(&quot;ParentShopId&quot;); // IMARTINS added as per WA#32 Drop 1 Take 2
        var DealerGroup = Inputs.GetProperty(&quot;DealerGroup&quot;); // IMARTINS VFTRCBU-24115 -- Added to indicate Sub-Dealer scenario
        var EmployeeEmail = Inputs.GetProperty(&quot;EmployeeEmail&quot;); // JMARQUES
        
        var regMgnrPos = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VFTRCBU_ACCESS_TYPE_POS&quot;,&quot;4&quot;);
        var areaMgnrPos = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VFTRCBU_ACCESS_TYPE_POS&quot;,&quot;5&quot;);
        var salesSupp = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VFTRCBU_ACCESS_TYPE_POS&quot;,&quot;6&quot;);
        var salesExec = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;VFTRCBU_ACCESS_TYPE_POS&quot;,&quot;7&quot;);  
        var highHier = false;  
        
        if(PositionInput == regMgnrPos || PositionInput == areaMgnrPos || PositionInput == salesSupp || PositionInput == salesExec)   
			highHier = true;        	          
        
        var In : PropertySet;
        var Out : PropertySet;
        In = TheApplication().NewPropertySet();
        Out = TheApplication().NewPropertySet();
        
        /* IMARTINS 30092015 - commented as per WA#32 Drop 1 Take 2
        if (DealerTypeCode==&quot;Role64&quot;)
		{	
			EmployeeResponsibility= &quot;PRM_EXPRESS&quot;;
		}
        else if (DealerTypeCode==&quot;Role19&quot;)
		{	
			EmployeeResponsibility= &quot;PRM_SHOP MERKEZ&quot;;
		}
		else
		{
			EmployeeResponsibility = Inputs.GetProperty(&quot;EmployeeResponsibility&quot;);
		}*/
		
        /* Create Employee */
		var boEmployee : BusObject = TheApplication().GetBusObject(&quot;Employee&quot;);//ORACLE REVIEW 2013
		var bcEmployee : BusComp   = boEmployee.GetBusComp(&quot;Employee&quot;);//ORACLE REVIEW 2013         
		bcEmployee.ActivateField(&quot;First Name&quot;);
		bcEmployee.ActivateField(&quot;Last Name&quot;);
		bcEmployee.ActivateField(&quot;Login Name&quot;); 
		bcEmployee.ActivateField(&quot;Employee ID&quot;);
		bcEmployee.ActivateField(&quot;Job Title&quot;);
		bcEmployee.ActivateField(&quot;Black White List&quot;);
		bcEmployee.ActivateField(&quot;Dealer Type Code&quot;);
		bcEmployee.ActivateField(&quot;Employee Type Code&quot;);
		bcEmployee.ActivateField(&quot;VF Dealer Code&quot;);
		bcEmployee.ActivateField(&quot;Cell Phone #&quot;);
		bcEmployee.ActivateField(&quot;Profile Code&quot;);
		bcEmployee.ActivateField(&quot;VF Shop Id&quot;);
		bcEmployee.ActivateField(&quot;VF Shop Name&quot;);
		bcEmployee.ActivateField(&quot;Active&quot;);
		bcEmployee.ActivateField(&quot;Position&quot;);
		bcEmployee.ActivateField(&quot;Alias&quot;);
		bcEmployee.ActivateField(&quot;Employee Organization&quot;);
		bcEmployee.ActivateField(&quot;Responsibility&quot;);
		bcEmployee.ActivateField(&quot;Sales Team&quot;);
		bcEmployee.ActivateField(&quot;Primary Sales Rep Id&quot;);	
		bcEmployee.ActivateField(&quot;EMail Addr&quot;);	 //JMARQUES
             
		bcEmployee.NewRecord(NewAfter);            
		
		bcEmployee.SetFieldValue(&quot;Login Name&quot;, LoginName);
		bcEmployee.SetFieldValue(&quot;First Name&quot;, FirstName);
		bcEmployee.SetFieldValue(&quot;Last Name&quot;, LastName);
		bcEmployee.SetFieldValue(&quot;Employee ID&quot;, EmployeeID);
		bcEmployee.SetFieldValue(&quot;Job Title&quot;,JobTitle);
		bcEmployee.SetFieldValue(&quot;Black White List&quot;, BlackWhiteList);
		bcEmployee.SetFieldValue(&quot;Dealer Type Code&quot;, DealerTypeCode);
		bcEmployee.SetFieldValue(&quot;Employee Type Code&quot;,&quot;Employee&quot;);
		bcEmployee.SetFieldValue(&quot;EMail Addr&quot;,EmployeeEmail);
		if (OriginatingDealerCode !=&quot;&quot; &amp;&amp; OriginatingDealerCode != null)
			bcEmployee.SetFieldValue(&quot;VF Dealer Code&quot;,OriginatingDealerCode);
		if (GSMNumber !=&quot;&quot; &amp;&amp; GSMNumber != null)//Check for null value
			bcEmployee.SetFieldValue(&quot;Cell Phone #&quot;,&quot;+90&quot;+GSMNumber);
		bcEmployee.SetFieldValue(&quot;Profile Code&quot;, ProfileCode);
		bcEmployee.SetFieldValue(&quot;VF Shop Id&quot;,ShopId);
		bcEmployee.SetFieldValue(&quot;VF Shop Name&quot;,ShopName);
		bcEmployee.SetFieldValue(&quot;Active&quot;,Active);
		
		
		/* Get Dealer Position Information */
		var boPos : BusObject = TheApplication().GetBusObject(&quot;Position&quot;);
		var bcPos : BusComp   = boEmployee.GetBusComp(&quot;Position&quot;);
		var dealerAreaName = &quot;&quot;;
		var dealerName = &quot;&quot;;
		var dealerPositionId = &quot;&quot;;
		bcPos.ActivateField(&quot;VF TK PRM Region&quot;);
		bcPos.ActivateField(&quot;VF PRM Shop Name&quot;);
		bcPos.SetSearchExpr(&quot;[Name] = &apos;&quot;+ShopId+&quot;&apos;&quot;);
		bcPos.ExecuteQuery(ForwardOnly);
		if (bcPos.FirstRecord()) 
		{
			dealerAreaName = bcPos.GetFieldValue(&quot;VF TK PRM Region&quot;);
			dealerName = bcPos.GetFieldValue(&quot;VF PRM Shop Name&quot;);
			dealerPositionId = bcPos.GetFieldValue(&quot;Id&quot;);
		}
		
		
		/* Associate Position to Employee */
		var positionMVGBC = bcEmployee.GetMVGBusComp(&quot;Position&quot;);
		var positionAssocBC = positionMVGBC.GetAssocBusComp();
		positionAssocBC.ActivateField(&quot;Name&quot;);
		
		/* IMARTINS 30092015 - Revise code as per WA#32 Drop 1 Take 2
		if(Inputs.GetProperty(&quot;DealerGroup&quot;) == &quot;Y&quot;)
			positionAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+ShopId+&quot;&apos;&quot;);
		else if(highHier)
			positionAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+dealerAreaName+&quot; &quot;+PositionInput+&quot;&apos;&quot;);
		else
			positionAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+PositionInput+&quot;&apos; AND [VF PRM Shop Name] = &apos;&quot;+dealerName+&quot;&apos;&quot;);
		*/ 
		if(highHier)
			positionAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+dealerAreaName+&quot; &quot;+PositionInput+&quot;&apos;&quot;);
		else
			positionAssocBC.SetSearchExpr(&quot;[Id] = &apos;&quot;+PositionId+&quot;&apos;&quot;); // positionAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+ShopId+&quot;&apos;&quot;);
	
		positionAssocBC.ExecuteQuery(ForwardOnly);
		if (positionAssocBC.FirstRecord()) 
		{
			positionAssocBC.Associate(NewBefore);
			
			/* Get Dealer Position Profile */
			var boPosProfile : BusObject = TheApplication().GetBusObject(&quot;Position&quot;);
			var bcPosProfile : BusComp   = boPosProfile.GetBusComp(&quot;TELCO Position Profiles&quot;);
				
			
			// IMARTINS VFTRCBU-24115 21012016 :: Sub-Dealer scenario :: Skip Position Profile insert if Sub-Dealer
			if (DealerGroup != &quot;Y&quot; &amp;&amp; EmployeeRole != &quot;&quot; &amp;&amp; EmployeeRole != null)
			{

				with(bcPosProfile)
				{
					ActivateField(&quot;TELCO Category&quot;);
					ActivateField(&quot;TELCO Attribute&quot;);
					ActivateField(&quot;TELCO Attribute Value&quot;);
					ActivateField(&quot;TELCO Position Id&quot;);
					SetSearchExpr(&quot;[TELCO Category] = &apos;Role&apos; AND [TELCO Attribute] =&apos;&quot;+EmployeeRole+&quot;&apos; AND [TELCO Position Id]=&apos;&quot;+PositionId+&quot;&apos; &quot;);
					ExecuteQuery(ForwardOnly);
					if (FirstRecord()) 
					{
						// check if position profile is active
						if (GetFieldValue(&quot;TELCO Attribute Value&quot;) == &quot;N&quot;)
						{
							SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
							WriteRecord();
						}
					}
					else
					{
						// insert position profile role
						NewRecord(NewAfter); 
						SetFieldValue(&quot;TELCO Category&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Role&quot;));
						SetFieldValue(&quot;TELCO Attribute&quot;,EmployeeRole);
						SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
						SetFieldValue(&quot;TELCO Position Id&quot;,PositionId);
						WriteRecord();
						
						// profile agent type exists?
						ClearToQuery();
						ActivateField(&quot;TELCO Category&quot;);
						ActivateField(&quot;TELCO Attribute&quot;);
						ActivateField(&quot;TELCO Attribute Value&quot;);
						ActivateField(&quot;TELCO Position Id&quot;);
						SetSearchSpec(&quot;TELCO Category&quot;, TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Agent Type&quot;));
						SetSearchSpec(&quot;TELCO Attribute&quot;, TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Dealer&quot;));
						SetSearchSpec(&quot;TELCO Position Id&quot;, PositionId);
						ExecuteQuery(ForwardOnly);
						//SetSearchExpr(&quot;[TELCO Category] = &apos;&quot;++&quot;&apos; AND [TELCO Attribute] =&apos;&quot;+EmployeeRole+&quot;&apos; AND [TELCO Position Id]=&apos;&quot;+newPosId+&quot;&apos; &quot;);
						
						if (FirstRecord()) 
						{						
							// check if position profile is active
							if (GetFieldValue(&quot;TELCO Attribute Value&quot;) == &quot;N&quot;)
							{
								SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
								WriteRecord();
							}
						}
						else
						{	
							// insert position profile agent type
							NewRecord(NewAfter); 
							SetFieldValue(&quot;TELCO Category&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Agent Type&quot;));
							SetFieldValue(&quot;TELCO Attribute&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Dealer&quot;));
							SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
							SetFieldValue(&quot;TELCO Position Id&quot;,PositionId);
							WriteRecord();
						}
					}	
				}
			}
			if (DealerGroup == &quot;Y&quot;) // iMARTINS VFTRCBU-34008 10122016 It is necessary to identify the subdealers with agent type = Dealer to better identify all the dealers on application
			{
				with(bcPosProfile)
				{
					ActivateField(&quot;TELCO Category&quot;);
					ActivateField(&quot;TELCO Attribute&quot;);
					ActivateField(&quot;TELCO Attribute Value&quot;);
					ActivateField(&quot;TELCO Position Id&quot;);// insert position profile agent type
					NewRecord(NewAfter); 
					SetFieldValue(&quot;TELCO Category&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Agent Type&quot;));
					SetFieldValue(&quot;TELCO Attribute&quot;,TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;TELCO_SECURITY_PROFILE&quot;,&quot;Dealer&quot;));
					SetFieldValue(&quot;TELCO Attribute Value&quot;,&quot;Y&quot;);
					SetFieldValue(&quot;TELCO Position Id&quot;,PositionId);
					WriteRecord();
				}
			}
		}
		else 
		{
			Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
			Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-00003&quot;);		
			Outputs.SetProperty(&quot;Error Description&quot;,&quot;Error associating position to the Employee. Position not found.&quot;);
			return(CancelOperation);
		}
		
 		/* Associate Sales Team to Employee (need to Originating Dealer Code pickapplet on PRM) */
		//if (DealerTypeCode == &quot;Shops&quot;) 
		if (ParentShopId == &quot;&quot; || ParentShopId == null)
		{ //Just for Shops 
			var salesTeamMVGBC = bcEmployee.GetMVGBusComp(&quot;Sales Team&quot;);
			var salesTeamAssocBC = salesTeamMVGBC.GetAssocBusComp();
			salesTeamAssocBC.ActivateField(&quot;Name&quot;);
			salesTeamAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+ShopId+&quot;&apos;&quot;);
			salesTeamAssocBC.ExecuteQuery(ForwardOnly);
			if (salesTeamAssocBC.FirstRecord()) 
			{
				var primarySalesTeam = salesTeamAssocBC.GetFieldValue(&quot;Id&quot;);
				salesTeamAssocBC.Associate(NewBefore);
				bcEmployee.SetFieldValue(&quot;Primary Sales Rep Id&quot;, primarySalesTeam);

				/* Dissociate my Sales Team */
				var mySalesTeamId = TheApplication().PositionId();
				salesTeamMVGBC.SetSearchExpr(&quot;[Id] = &apos;&quot;+mySalesTeamId+&quot;&apos;&quot;);
				salesTeamMVGBC.ExecuteQuery(ForwardOnly);
				if (salesTeamMVGBC.FirstRecord()) 
				{
					salesTeamMVGBC.DeleteRecord();
				}

			}
			else 
			{
				Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
				Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-00003&quot;);		
				Outputs.SetProperty(&quot;Error Description&quot;,&quot;Error associating Sales Team to the Employee. Sales Team not found.&quot;);
				return(CancelOperation);
			}
		}
		
		
		
		/* Associate Responsibility to Employee */
		//if (DealerTypeCode == &quot;Role4&quot;)
		//	DealerTypeCode=&quot;SME Dealer&quot;; //Responsibility for KSK
		
		// IMARTINS VFTRCBU-24115 21012016 :: Sub-Dealer scenario :: Skip Responsability association if Sub-Dealer
		if(DealerGroup != &quot;Y&quot; &amp;&amp; EmployeeResponsibility != &quot;&quot; &amp;&amp; EmployeeResponsibility != null) 
		{
			var responsibilityMVGBC = bcEmployee.GetMVGBusComp(&quot;Responsibility&quot;);
			var responsibilityAssocBC = responsibilityMVGBC.GetAssocBusComp();
			responsibilityAssocBC.ActivateField(&quot;Name&quot;);
			responsibilityAssocBC.SetSearchExpr(&quot;[Name] = &apos;&quot;+EmployeeResponsibility+&quot;&apos;&quot;);
			responsibilityAssocBC.ExecuteQuery(ForwardOnly);
			if (responsibilityAssocBC.FirstRecord()) 
			{
				responsibilityAssocBC.Associate(NewBefore);
			}
			else 
			{
				Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
				Outputs.SetProperty(&quot;Error Code&quot;,&quot;SBL-00006&quot;);		
				Outputs.SetProperty(&quot;Error Description&quot;,&quot;Error associating responsibility to the employee. Invalid access type code.&quot;);
				return(CancelOperation);
			}
		}
		
		In.SetProperty(&quot;Login&quot;,LoginName);
		calcAlias(In,Out);
		var alias = Out.GetProperty(&quot;Alias&quot;);
		bcEmployee.SetFieldValue(&quot;Alias&quot;,alias);
		bcEmployee.WriteRecord();
		
		
		Outputs.SetProperty(&quot;Status Code&quot;, &quot;0&quot;);
		Outputs.SetProperty(&quot;Error Code&quot;,&quot;0&quot;);		
		Outputs.SetProperty(&quot;Error Description&quot;,&quot;Success&quot;);
    }
    catch (e) 
    {
  		Outputs.SetProperty(&quot;Status Code&quot;,&quot;1&quot;);
		Outputs.SetProperty(&quot;Error Code&quot;,e.errCode);		
		Outputs.SetProperty(&quot;Error Description&quot;,e.errText);
    } 
    finally 
    {
        FirstName = null;
        LastName = null;
        EmployeeID = null;
        Active = null;
        BlackWhiteList = null;
        DealerTypeCode = null;
        GSMNumber = null;
        JobTitle = null;
        ShopId = null;
        ShopName = null;
		LoginName = null;
		ProfileCode = null;
		OriginatingDealerCode = null;
		primarySalesTeam = null;
		mySalesTeamId = null;
		In = null
		Out = null;
		positionAssocBC = null;
		positionMVGBC = null;
		responsibilityAssocBC = null;
		responsibilityMVGBC = null;
		salesTeamAssocBC = null;
		salesTeamMVGBC = null;
		bcEmployee = null;
		boEmployee = null;
    }//ORACLE REVIEW 2013
}"
			   SEQUENCE="14"
			   UPDATED="10/12/2016 12:46:08"
			   UPDATED_BY="IMARTINS"
			   CREATED="06/07/2011 17:37:05"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="calcAlias"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function calcAlias(Inputs,Outputs)
{
	var Login = Inputs.GetProperty(&quot;Login&quot;);
	var UnderscLogin1 = Login.substr(0,Login.indexOf(&quot;_&quot;));
		UnderscLogin1 = UnderscLogin1.toLowerCase();
	var UnderscLogin2 = Login.substr(Login.indexOf(&quot;_&quot;)+1,Login.length);
		UnderscLogin2 = UnderscLogin2.toLowerCase();
	
	var LowLogin = Login.toLowerCase();
	
	if(UnderscLogin1 != &quot;&quot; &amp;&amp; UnderscLogin1 != null){ //login with _
	
		LowLogin = UnderscLogin1 + &quot; &quot; + UnderscLogin2;
	
	}
	
	Outputs.SetProperty(&quot;Alias&quot;,LowLogin);
	return;
}"
			   SEQUENCE="3"
			   UPDATED="12/16/2014 15:45:00"
			   UPDATED_BY="RPIRES"
			   CREATED="07/01/2013 19:39:15"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
		</BUSINESS_SERVICE>
	</PROJECT>
</REPOSITORY>



