<?xml version="1.0" encoding="UTF-8"?>
<REPOSITORY
   NAME="Siebel Repository"
   UPDATED="08/11/2017 16:02:15"
   UPDATED_BY="SADMIN"
   CREATED="08/11/2017 11:53:44"
   CREATED_BY="SADMIN"
   FIO_PLACEHOLDER_FIO="TRUE">
	<PROJECT
	   ALLOW_OBJECT_LOCKING="Y"
	   INACTIVE="N"
	   LOCKED="N"
	   NAME="VF MNP RED2"
	   UI_FREEZE="N"
	   UPDATED="01/16/2018 15:38:02"
	   UPDATED_BY="IBM_TFERREIRA"
	   CREATED="12/16/2013 15:12:51"
	   CREATED_BY="SADMIN"
	   FIO_PLACEHOLDER_FIO="TRUE">
		<BUSINESS_SERVICE
		   CACHE="N"
		   CLASS="CSSService"
		   EXTERNAL_USE="Y"
		   HIDDEN="N"
		   INACTIVE="N"
		   NAME="VF OTP Utils"
		   OBJECT_LANGUAGE_LOCKED="ENU"
		   OBJECT_LOCKED="Y"
		   OBJECT_LOCKED_DATE="01/16/2018 15:26:59"
		   SERVER_ENABLED="N"
		   STATE_MANAGEMENT_TYPE="Stateful"
		   WEB_SERVICE_ENABLED="N"
		   OBJECT_LOCKED_BY_NAME="IBM_TFERREIRA"
		   UPDATED="01/16/2018 15:38:02"
		   UPDATED_BY="IBM_TFERREIRA"
		   CREATED="12/17/2013 12:50:53"
		   CREATED_BY="SADMIN">
			<BUSINESS_SERVICE_LOCALE
			   APPLICATION_CODE="STD"
			   DISPLAY_NAME="VF OTP Utils"
			   INACTIVE="N"
			   LANGUAGE_CODE="ENU"
			   NAME="ENU-STD"
			   TRANSLATE="Y"
			   UPDATED="12/17/2013 12:50:53"
			   UPDATED_BY="SADMIN"
			   CREATED="12/17/2013 12:50:53"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_LOCALE>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CheckPosition"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Output"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/02/2015 14:11:55"
				   UPDATED_BY="SADMIN"
				   CREATED="04/02/2015 14:11:55"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CustomerMaskValidation"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CustomerId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/02/2015 14:11:55"
				   UPDATED_BY="SADMIN"
				   CREATED="04/02/2015 14:11:55"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Output"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/02/2015 14:11:55"
				   UPDATED_BY="SADMIN"
				   CREATED="04/02/2015 14:11:55"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="TaxId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="04/02/2015 14:11:55"
				   UPDATED_BY="SADMIN"
				   CREATED="04/02/2015 14:11:55"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CustomerValidation"
			   UPDATED="08/18/2014 22:20:06"
			   UPDATED_BY="SADMIN"
			   CREATED="08/18/2014 22:20:06"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="CustomerId"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SearchExpression"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SkipValidation"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   COMMENTS="Invokes the Math.random() function to generate a random integer number, with a dynamic number of digits.
The number of digits must be provided as input for this process."
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GenerateOTPassword"
			   UPDATED="08/18/2014 22:20:06"
			   UPDATED_BY="SADMIN"
			   CREATED="12/17/2013 12:50:53"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Number"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="NumOfDigits"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="12/17/2013 12:50:53"
				   UPDATED_BY="SADMIN"
				   CREATED="12/17/2013 12:50:53"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Number"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Number"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="12/17/2013 12:50:53"
				   UPDATED_BY="SADMIN"
				   CREATED="12/17/2013 12:50:53"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ParseInputMessage"
			   UPDATED="08/18/2014 22:20:06"
			   UPDATED_BY="SADMIN"
			   CREATED="08/18/2014 22:20:06"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ContextNavigation"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Customer"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Entity"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="LogicalOperator"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="OTPMSISDN"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SearchCriteria"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="SearchedCriteria"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="08/18/2014 22:20:06"
				   UPDATED_BY="SADMIN"
				   CREATED="08/18/2014 22:20:06"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="ValidationCompleted"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="ValidationCompleted"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="04/02/2015 14:11:55"
				   UPDATED_BY="SADMIN"
				   CREATED="04/02/2015 14:11:55"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CheckPosition"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CheckPosition(Inputs, Outputs)
{
	//IBM_TFERREIRA 20180116 DEF-24990 - Siebel Crash
	try
	{
		var lovBO = TheApplication().GetBusObject(&quot;List Of Values&quot;);
		var lovBC = lovBO.GetBusComp(&quot;List Of Values&quot;); 

		//SANTOSP 04/2015 - VFTRCBU-1769 - Updated Code
		var sHasRoles = &quot;&quot;;
		
		with (lovBC)
		{
			SetViewMode(AllView);
			ClearToQuery();
			ActivateField(&quot;VFTRCBU Role List&quot;);
			ActivateField(&quot;VFTRCBU Visible To User Roles Calc&quot;);
			SetSearchSpec(&quot;Type&quot;, &quot;VF_OTP_POS_NAME&quot;);
			SetSearchSpec(&quot;Active&quot;, &quot;Y&quot;);
			//SetSearchSpec(&quot;Name&quot;, positionType); //SANTOSP 04/2015 - VFTRCBU-1769
			ExecuteQuery(ForwardOnly);

			if (FirstRecord())
			{
				sHasRoles = GetFieldValue(&quot;VFTRCBU Visible To User Roles Calc&quot;);
				//continue with Validation
				if(sHasRoles == &quot;Y&quot;)
					Outputs.SetProperty(&quot;Output&quot;, &quot;Y&quot;);
				else
					Outputs.SetProperty(&quot;Output&quot;, &quot;N&quot;);
			}
			else {
				//skip Validation
				Outputs.SetProperty(&quot;Output&quot;, &quot;N&quot;);
			}
		}
	}
	finally
	{
		lovBC	= null;
		lovBO	= null;
	}
}"
			   SEQUENCE="1"
			   UPDATED="01/16/2018 15:31:15"
			   UPDATED_BY="IBM_TFERREIRA"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CreateSearchCriteria"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CreateSearchCriteria(sFieldName, sFieldValue, sLogicalOperator, sInitialValue)
{
	//36516 (TC-4730) - Function created for context handling.
	var sResult = &quot;&quot;;
	
	if (sFieldValue != &quot;&quot; &amp;&amp; sInitialValue != &quot;&quot;)
	{
		sResult = sInitialValue + sLogicalOperator + &quot; &quot; + &quot;[&quot; + sFieldName + &quot;]&quot; + &quot;=&quot; + sFieldValue + &quot; &quot;;
	}
	else
	{
		sResult = &quot;[VF Searched Criteria]=&quot; + &quot;[&quot; + sFieldName + &quot;]&quot; + &quot;=&quot; + sFieldValue + &quot; &quot;;
	}
	return sResult;

}"
			   SEQUENCE="2"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CustomerMaskValidation"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CustomerMaskValidation(Inputs, Outputs)
{	
		var strAssetSearchExpr;
		var CustomerId= &quot;&quot;;
		var TaxId= &quot;&quot;;
		var len = 0;
		var recordId;
		
		//36516 (TC-4730) - Init			
		var sContext = &quot;&quot;;
		var sOutputResult = &quot;&quot;;
		var sOTPValidView = Clib.strstr(TheApplication().GetProfileAttr(&quot;VF_OTP_VIEWS&quot;), TheApplication().GetProfileAttr(&quot;ActiveViewName&quot;)); //36516 (TC-4730) - End
		CustomerId = Inputs.GetProperty(&quot;CustomerId&quot;);
		TaxId = Inputs.GetProperty(&quot;TaxId&quot;);
			
		//search customer using Ids/Passport No or at least one of Ids and the MSISDN
		if ( CustomerId != &quot;&quot; ) {
				if(sOTPValidView) {
					sContext = CreateSearchCriteria(&quot;CSN&quot;, CustomerId, &quot;AND&quot;, sContext); //36516 (TC-4730)
					sOutputResult = CustomerMasking(CustomerId, &quot;Customer&quot;, CustomerId, sContext);
					Outputs.SetProperty(&quot;Output&quot;, sOutputResult);
				}
		}
		if ( TaxId != &quot;&quot; ) {
			Outputs.SetProperty(&quot;Output&quot;, &quot;Y&quot;);
		}
						
}"
			   SEQUENCE="4"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CustomerMasking"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CustomerMasking(sCustomerId, sEntity, sContextNavigation, sSearchCriteria)
{
	//36516 (TC-4730) - created for: 
	//1) Check if it&apos;s necessary to navigate to VF Customer Validation Management View.
	//2) Navigate if required.
	
	//IBM_TFERREIRA 20180116 DEF-24990 - Siebel Crash
	try
	{
		var bsExpProcess:Service = TheApplication().GetService(&quot;VF OTP Utils&quot;);
		var sPInputs = TheApplication().NewPropertySet();
		var sPOutputs = TheApplication().NewPropertySet();
		var sSearchExp = &quot;&quot;;
		
		sSearchCriteria = CreateSearchCriteria(&quot;VF Entity&quot;, sEntity, &quot;/AND&quot;, sSearchCriteria); //36516 (TC-4730)
		sSearchCriteria = CreateSearchCriteria(&quot;VF Context Navigation&quot;, sContextNavigation, &quot;/AND&quot;, sSearchCriteria); //36516 (TC-4730)
	
		sSearchExp = &quot;[VF Customer] = &apos;&quot; + sCustomerId + &quot;&apos; AND [VF Searched Criteria] = &apos;&quot; + sSearchCriteria + &quot;&apos;&quot;;
		
		
		var sResultOutput = CustomerValidationMethod(sCustomerId, sSearchExp);
		
		
	
		sPOutputs = null;
		sPInputs = null;
		bsExpProcess = null;
		
		return sResultOutput;
	}
	finally
	{
		sPOutputs		= null;
		sPInputs		= null;
		bsExpProcess	= null;
	}
}"
			   SEQUENCE="3"
			   UPDATED="01/16/2018 15:33:18"
			   UPDATED_BY="IBM_TFERREIRA"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CustomerValidation"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CustomerValidation(Inputs, Outputs)
{
	//36516 (TC-4730) - created for: 
	//1) Check if it&apos;s necessary to navigate to VF Customer Validation Management View.
	//2) Navigate if required.
	
	//IBM_TFERREIRA 20180116 DEF-24990 - Siebel Crash
	try
	{	
		TheApplication().SetProfileAttr(&quot;VFSkipQueryWF&quot;,&quot;N&quot;);//VFTRCBU-36300	
		
		var bsExpProcess:Service = TheApplication().GetService(&quot;Workflow Process Manager&quot;);
		var sPInputs = TheApplication().NewPropertySet();
		var sPOutputs = TheApplication().NewPropertySet();
		var sSkippedValidation = &quot;&quot;;
		var sSearchExp = &quot;&quot;;
		var sCustomerId = &quot;&quot;;
		var BOCV : BusObject = TheApplication().GetBusObject(&quot;VF OTP Identity UI&quot;); 
		var pBCCV : BusComp = BOCV.GetBusComp(&quot;VF OTP Identity VBC&quot;);
		
		sCustomerId = Inputs.GetProperty(&quot;CustomerId&quot;);
		sSearchExp = Inputs.GetProperty(&quot;SearchExpression&quot;);
		
	/*TheApplication().TraceOn(&quot;C:\\Temp\\OTP.txt&quot;, &quot;Allocation&quot;, &quot;All&quot;);
	TheApplication().Trace(&quot;-------------------------------&quot;);
	TheApplication().Trace(&quot;sSearchExp &quot; + sSearchExp);
	TheApplication().TraceOff();*/
		
		sPInputs.SetProperty(&quot;ProcessName&quot;, &quot;VF Manage OTP Identity Request WF&quot;);
		sPInputs.SetProperty(&quot;Object Id&quot;, sCustomerId);
		bsExpProcess.InvokeMethod(&quot;RunProcess&quot;, sPInputs, sPOutputs);
		var sResultOutput = sPOutputs.GetProperty(&quot;GoToValidationView&quot;);
		if (sResultOutput == &quot;Y&quot;)
		{
				pBCCV.SetViewMode(AllView);
				pBCCV.ClearToQuery();
				pBCCV.ActivateField(&quot;VF Customer&quot;);
				pBCCV.ActivateField(&quot;VF Searched Criteria&quot;);
				pBCCV.SetSearchExpr(sSearchExp);
				pBCCV.ExecuteQuery(ForwardOnly);
				if (pBCCV.FirstRecord())
				{
					TheApplication().GotoView(&quot;VF Customer Validation Management View&quot;, BOCV);
					sSkippedValidation = &quot;N&quot;;
				}	
				else
				{
					sSkippedValidation = &quot;Y&quot;;	
				}
		}
		else
		{
					sSkippedValidation = &quot;Y&quot;;	
		}
		/*sPOutputs = null;
		sPInputs = null;
		bsExpProcess = null;
		pBCCV = null;
		BOCV = null;*/
		
		Outputs.SetProperty(&quot;SkipValidation&quot;, sSkippedValidation);
	}
	finally
	{
		sPOutputs = null;
		sPInputs = null;
		bsExpProcess = null;
		pBCCV = null;
		BOCV = null;
	}
}"
			   SEQUENCE="5"
			   UPDATED="01/16/2018 15:35:15"
			   UPDATED_BY="IBM_TFERREIRA"
			   CREATED="08/18/2014 22:20:06"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CustomerValidationMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CustomerValidationMethod(Customer_Id, Search_Expression)
{
	//36516 (TC-4730) - created for: 
	//1) Check if it&apos;s necessary to navigate to VF Customer Validation Management View.
	//2) Navigate if required.
	
	//IBM_TFERREIRA 20180116 DEF-24990 - Siebel Crash
	try
	{
		var bsExpProcess:Service = TheApplication().GetService(&quot;Workflow Process Manager&quot;);
		var sPInputs = TheApplication().NewPropertySet();
		var sPOutputs = TheApplication().NewPropertySet();
		var sSkippedValidation = &quot;&quot;;
		var sSearchExp = &quot;&quot;;
		var sCustomerId = &quot;&quot;;
		var BOCV : BusObject = TheApplication().GetBusObject(&quot;VF OTP Identity UI&quot;); 
		var pBCCV : BusComp = BOCV.GetBusComp(&quot;VF OTP Identity VBC&quot;);
		
		
		sCustomerId = Customer_Id;
		sSearchExp = Search_Expression;
		
		sPInputs.SetProperty(&quot;ProcessName&quot;, &quot;VF Manage OTP Identity Request WF&quot;);
		sPInputs.SetProperty(&quot;Object Id&quot;, sCustomerId);
		bsExpProcess.InvokeMethod(&quot;RunProcess&quot;, sPInputs, sPOutputs);
		var sResultOutput = sPOutputs.GetProperty(&quot;GoToValidationView&quot;);
		if (sResultOutput == &quot;Y&quot;)
		{
				pBCCV.SetViewMode(AllView);
				pBCCV.ClearToQuery();
				pBCCV.ActivateField(&quot;VF Customer&quot;);
				pBCCV.ActivateField(&quot;VF Searched Criteria&quot;);
				pBCCV.SetSearchExpr(sSearchExp);
				pBCCV.ExecuteQuery(ForwardOnly);
				if (pBCCV.FirstRecord())
				{
					//TheApplication().GotoView(&quot;VF Customer Validation Management View&quot;, BOCV);
					sSkippedValidation = &quot;N&quot;;
				}	
				else
				{
					sSkippedValidation = &quot;Y&quot;;	
				}
		}
		else
		{
					sSkippedValidation = &quot;Y&quot;;	
		}
		
		return sSkippedValidation;
	}
	finally
	{
		sPOutputs		= null;
		sPInputs		= null;
		bsExpProcess	= null;
		pBCCV			= null;
		BOCV			= null;
	}
}"
			   SEQUENCE="6"
			   UPDATED="01/16/2018 15:38:02"
			   UPDATED_BY="IBM_TFERREIRA"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GenerateOTPassword"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GenerateOTPassword(Inputs, Outputs){

	var numOfDigits = Inputs.GetProperty(&quot;NumOfDigits&quot;);
	
	//Example for 6-digit number
	//var numResult= 100000 + Math.round( Math.random() * 899999 );
	
	var numResult= Math.pow(10, numOfDigits-1) + Math.round( Math.random() * (Math.pow(10, numOfDigits)-(Math.pow(10, numOfDigits-1)+1)) );
	
	Outputs.SetProperty(&quot;Number&quot;,numResult);
	
	
}"
			   SEQUENCE="7"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="12/17/2013 12:50:53"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="LogDataString"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function LogDataString(logString:String)
{
      var filename = &quot;c:\\temp\\dosya.txt&quot;;
      var file = Clib.fopen(filename, &quot;at&quot;);
      Clib.fputs((logString + &quot;\n&quot;), file);
      Clib.fflush(file);
      Clib.fclose(file) ; 
     
    
}//end function"
			   SEQUENCE="8"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ParseInputMessage"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ParseInputMessage(Inputs, Outputs){

	var search = Inputs.GetProperty(&quot;SearchCriteria&quot;);
	var logicalOperator=&quot; &quot;+Inputs.GetProperty(&quot;LogicalOperator&quot;);
	
	var Customer=&quot;&quot;;
	var Entity=&quot;&quot;;
	var SearchCriteria=&quot;&quot;;
	var ContextNavigation=&quot;&quot;;
	var OTPMSISDN=&quot;&quot;;
	
	var CustomerPos;
	var EntityPos;
	var SearchCriteriaPos;
	var ContextNavigationPos;
	var OTPMSISDNPos;
	
	var strippedStringArr = search.split(logicalOperator);
	
	for (var i = 0; i &lt; strippedStringArr.length; i++){
		if(strippedStringArr[i].indexOf(&quot;VF Customer&quot;) != -1){
			Customer = strippedStringArr[i];
			CustomerPos  = Customer.indexOf(&quot;=&quot;);
			Customer = Customer.substring(CustomerPos+1);			
		}
		else if(strippedStringArr[i].indexOf(&quot;VF Entity&quot;) != -1){
			Entity = strippedStringArr[i];
			EntityPos  = Entity.indexOf(&quot;=&quot;);
			Entity = Entity.substring(EntityPos+1);			
		}
		else if(strippedStringArr[i].indexOf(&quot;VF Searched Criteria&quot;) != -1){			
			SearchCriteria = strippedStringArr[i];			
			SearchCriteriaPos  = SearchCriteria.indexOf(&quot;=&quot;);
			SearchCriteria = SearchCriteria.substring(SearchCriteriaPos+1);			
		}
		else if(strippedStringArr[i].indexOf(&quot;VF Context Navigation&quot;) != -1){			
			ContextNavigation = strippedStringArr[i];			
			ContextNavigationPos  = ContextNavigation.indexOf(&quot;=&quot;);
			ContextNavigation = ContextNavigation.substring(ContextNavigationPos+1);
		}
		else if(strippedStringArr[i].indexOf(&quot;VF OTP MSISDN&quot;) != -1 
				|| strippedStringArr[i].indexOf(&quot;VF MSISDN&quot;) != -1){			
			OTPMSISDN = strippedStringArr[i];			
			OTPMSISDNPos  = OTPMSISDN.indexOf(&quot;=&quot;);
			OTPMSISDN = OTPMSISDN.substring(OTPMSISDNPos+1);			
		}		
	}	
	Outputs.SetProperty(&quot;Customer&quot;,Customer);
	Outputs.SetProperty(&quot;Entity&quot;,Entity);
	if(SearchCriteria==&quot;&quot;)
		SearchCriteria = search;
	Outputs.SetProperty(&quot;SearchCriteria&quot;,SearchCriteria);
	Outputs.SetProperty(&quot;ContextNavigation&quot;,ContextNavigation);
	Outputs.SetProperty(&quot;OTPMSISDN&quot;,OTPMSISDN);
	
}"
			   SEQUENCE="9"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="08/18/2014 22:20:06"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreInvokeMethod (MethodName:chars, Inputs:PropertySet, Outputs:PropertySet)
{
	switch(MethodName)
	{
		case &quot;ParseInputMessage&quot;:
		    ParseInputMessage(Inputs, Outputs);
			return(CancelOperation);	
		case &quot;GenerateOTPassword&quot;:
		    GenerateOTPassword(Inputs, Outputs);
			return(CancelOperation);	
		case &quot;CustomerValidation&quot;:
		    CustomerValidation(Inputs, Outputs);
			return(CancelOperation);
		case &quot;CustomerMaskValidation&quot;:
		    CustomerMaskValidation(Inputs, Outputs);
			return(CancelOperation);
		case &quot;ValidationCompleted&quot;:
		    ValidationCompleted(Inputs, Outputs);
			return(CancelOperation);
		case &quot;CheckPosition&quot;:
		    CheckPosition(Inputs, Outputs);
			return(CancelOperation);
	}
	
	return (ContinueOperation);
}"
			   SEQUENCE="11"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="12/17/2013 12:50:53"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="ValidationCompleted"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function ValidationCompleted(Inputs, Outputs)
{
	Outputs.SetProperty(&quot;ValidationCompleted&quot;, &quot;Y&quot;);
	TheApplication().SetProfileAttr(&quot;ValidationCompleted&quot;, &quot;Y&quot;);
}"
			   SEQUENCE="10"
			   UPDATED="04/02/2015 14:11:55"
			   UPDATED_BY="SADMIN"
			   CREATED="04/02/2015 14:11:55"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
		</BUSINESS_SERVICE>
	</PROJECT>
</REPOSITORY>



