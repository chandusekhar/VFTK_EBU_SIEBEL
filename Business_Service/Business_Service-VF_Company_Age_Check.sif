<?xml version="1.0" encoding="UTF-8"?>
<REPOSITORY
   COMMENTS="Siebel 8.1.1.11 repository"
   NAME="Siebel Repository"
   UPDATED="06/17/2014 13:50:12"
   UPDATED_BY="SADMIN"
   CREATED="06/06/2014 19:53:48"
   CREATED_BY="SADMIN"
   FIO_PLACEHOLDER_FIO="TRUE">
	<PROJECT
	   ALLOW_OBJECT_LOCKING="Y"
	   COMMENTS="LOCKED BY VTAO UI UPGRADE"
	   INACTIVE="N"
	   LOCKED="N"
	   NAME="Account (SSE)"
	   UI_FREEZE="N"
	   UPDATED="08/24/2016 18:12:52"
	   UPDATED_BY="JFONSECA"
	   CREATED="01/01/1980 00:00:00"
	   CREATED_BY="SADMIN"
	   FIO_PLACEHOLDER_FIO="TRUE">
		<BUSINESS_SERVICE
		   CACHE="N"
		   CLASS="CSSService"
		   COMMENTS="Created CR690"
		   EXTERNAL_USE="N"
		   HIDDEN="N"
		   INACTIVE="N"
		   NAME="VF Company Age Check"
		   OBJECT_LANGUAGE_LOCKED="ENU"
		   OBJECT_LOCKED="Y"
		   OBJECT_LOCKED_DATE="08/24/2016 17:29:53"
		   SERVER_ENABLED="N"
		   STATE_MANAGEMENT_TYPE="Stateful"
		   WEB_SERVICE_ENABLED="N"
		   OBJECT_LOCKED_BY_NAME="JFONSECA"
		   UPDATED="08/24/2016 18:12:12"
		   UPDATED_BY="JFONSECA"
		   CREATED="05/20/2013 15:12:43"
		   CREATED_BY="SADMIN">
			<BUSINESS_SERVICE_LOCALE
			   APPLICATION_CODE="STD"
			   DISPLAY_NAME="VF Company Age Check"
			   INACTIVE="N"
			   LANGUAGE_CODE="ENU"
			   NAME="ENU-STD"
			   TRANSLATE="Y"
			   UPDATED="05/20/2013 15:13:37"
			   UPDATED_BY="SADMIN"
			   CREATED="05/20/2013 15:13:37"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_LOCALE>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="CampPortInCheck"
			   UPDATED="07/17/2014 13:38:51"
			   UPDATED_BY="PCASTRO"
			   CREATED="07/17/2014 13:38:51"
			   CREATED_BY="PCASTRO">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Campaign PortOut Age"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="07/17/2014 13:38:51"
				   UPDATED_BY="PCASTRO"
				   CREATED="07/17/2014 13:38:51"
				   CREATED_BY="PCASTRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="MSISDN"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/17/2014 13:38:51"
				   UPDATED_BY="PCASTRO"
				   CREATED="07/17/2014 13:38:51"
				   CREATED_BY="PCASTRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Number"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="Optin Threshold"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="07/17/2014 13:38:51"
				   UPDATED_BY="PCASTRO"
				   CREATED="07/17/2014 13:38:51"
				   CREATED_BY="PCASTRO">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="CampPortInCheck"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="07/17/2014 13:38:51"
				   UPDATED_BY="PCASTRO"
				   CREATED="07/17/2014 13:38:51"
				   CREATED_BY="PCASTRO">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_METHOD
			   HIDDEN="N"
			   INACTIVE="N"
			   NAME="GetCompanyAge"
			   UPDATED="05/22/2013 08:00:52"
			   UPDATED_BY="SADMIN"
			   CREATED="05/21/2013 08:08:36"
			   CREATED_BY="SADMIN">
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="Number"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="AgeThreshold"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="05/21/2013 15:13:59"
				   UPDATED_BY="SADMIN"
				   CREATED="05/21/2013 15:12:21"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="VF Company Age"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Output"
				   UPDATED="05/21/2013 15:13:44"
				   UPDATED_BY="SADMIN"
				   CREATED="05/21/2013 15:12:51"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_ARG
				   DATA_TYPE="String"
				   HIDDEN="N"
				   INACTIVE="N"
				   NAME="VF Establish Date"
				   OPTIONAL="N"
				   STORAGE_TYPE="Property"
				   TYPE="Input"
				   UPDATED="05/21/2013 08:09:33"
				   UPDATED_BY="SADMIN"
				   CREATED="05/21/2013 08:09:33"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_ARG>
				<BUSINESS_SERVICE_METHOD_LOCALE
				   APPLICATION_CODE="STD"
				   DISPLAY_NAME="GetCompanyAge"
				   INACTIVE="N"
				   LANGUAGE_CODE="ENU"
				   NAME="ENU-STD"
				   TRANSLATE="Y"
				   UPDATED="05/21/2013 08:08:48"
				   UPDATED_BY="SADMIN"
				   CREATED="05/21/2013 08:08:48"
				   CREATED_BY="SADMIN">
				</BUSINESS_SERVICE_METHOD_LOCALE>
			</BUSINESS_SERVICE_METHOD>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CampPortInCheck"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CampPortInCheck(Input, Output)
{
	try
	{
		var boMLItem      : BusObject   = TheApplication().GetBusObject(&quot;TELCO Order Item - Simple&quot;);
		var bcMLItem      : BusComp     = boMLItem.GetBusComp(&quot;TELCO Line Items - Simple&quot;);
		var boItem        : BusObject   = TheApplication().GetBusObject(&quot;VF Duman BO - Line Items&quot;);
		var bcItem        : BusComp     = boItem.GetBusComp(&quot;VF Order Entry - Line Items (Simple)&quot;);
		var psHandset     : PropertySet = null;
		var psHandsetList : PropertySet = TheApplication().NewPropertySet();
	   	var psFunctionIn  : PropertySet = TheApplication().NewPropertySet();
		var psFunctionOut : PropertySet = TheApplication().NewPropertySet();

	   	var	sMSISDN	          = Input.GetProperty(&quot;MSISDN&quot;);
	   	var sThreshold        = Input.GetProperty(&quot;Optin Threshold&quot;);
	   	var sMLItemSearchExpr = &quot;&quot;;
		var bHasMLItem        = false;
		var sOrderId          = &quot;&quot;;
		var sItemSearchExpr   = &quot;&quot;;
		var bHasItem          = false;
		var sBillAccountId    = &quot;&quot;;
		var sCreated          = &quot;&quot;;	
		var iHandset          = 0; 	
		var sIsOptin1         = &quot;&quot;;
		var sIsOptin2         = &quot;&quot;;

		var sOrderTypeModify    = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;FS_ORDER_TYPE&quot;,&quot;Modify Product &amp; Service&quot;);
		var sOrderSubTypeModify = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;ORDER_SUB_TYPE&quot;,&quot;111&quot;);
		var sActionDeleted      = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;DELTA_ACTION_CODE&quot;,&quot;Deleted&quot;);
		var sStatusComplete     = TheApplication().InvokeMethod(&quot;LookupValue&quot;,&quot;FS_ORDER_STATUS&quot;,&quot;Complete&quot;);

		if (sMSISDN == null || sMSISDN == &quot;&quot;)
		{
			Output.SetProperty(&quot;Campaign PortOut Age&quot;, &quot;Y&quot;);
			return;
		}

		sMLItemSearchExpr = &quot;[MSISDN]=&apos;&quot; + sMSISDN + &quot;&apos; AND [Order Type]=&apos;&quot; + sOrderTypeModify +
							&quot;&apos; AND [TELCO Action Type]=&apos;&quot; + sOrderSubTypeModify +
							&quot;&apos; AND [Status]=&apos;&quot; + sStatusComplete + &quot;&apos; AND [TELCO OM Order Public Id] IS NOT NULL&quot;; //JMARQUES

		bcMLItem.SetViewMode(AllView);
		bcMLItem.ClearToQuery();
		bcMLItem.ActivateField(&quot;Order Header Id&quot;);
		bcMLItem.ActivateField(&quot;TELCO OM Order Public Id&quot;); //JMARQUES
		bcMLItem.SetSearchExpr(sMLItemSearchExpr);
		bcMLItem.SetSortSpec(&quot;Created (DESCENDING)&quot;); 
		bcMLItem.ExecuteQuery(ForwardOnly);

		bHasMLItem = bcMLItem.FirstRecord();

		while (bHasMLItem)
		{
			sOrderId = bcMLItem.GetFieldValue(&quot;Order Header Id&quot;);

			sItemSearchExpr = &quot;[Order Header Id]=&apos;&quot; + sOrderId + &quot;&apos; AND [Action Code]=&apos;&quot; + sActionDeleted +
							  &quot;&apos; AND [VF Product Group]=&apos;CAMP&apos; AND [VF Product Type]=&apos;HANDSET&apos;&quot;;

			bcItem.SetViewMode(AllView);
			bcItem.ClearToQuery();
			bcItem.ActivateField(&quot;Billing Account Id&quot;);
			bcItem.ActivateField(&quot;Created&quot;);
			bcItem.SetSearchExpr(sItemSearchExpr);
			bcItem.SetSortSpec(&quot;Created (DESCENDING)&quot;); 
			bcItem.ExecuteQuery(ForwardOnly);

			bHasItem = bcItem.FirstRecord();

			while (bHasItem)
			{
				sBillAccountId = bcItem.GetFieldValue(&quot;Billing Account Id&quot;);
				sCreated       = bcItem.GetFieldValue(&quot;Created&quot;);	

				psHandset = null;
				psHandset = TheApplication().NewPropertySet();

				psHandset.SetProperty(&quot;Billing Account Id&quot;, sBillAccountId);
				psHandset.SetProperty(&quot;Created&quot;,            sCreated);

				psHandsetList.AddChild(psHandset);

				if (psHandsetList.GetChildCount() == 2) break;

				bHasItem = bcItem.NextRecord();
			}

			if (psHandsetList.GetChildCount() == 2) break;

			bHasMLItem = bcMLItem.NextRecord();
		}

		if (psHandsetList.GetChildCount() &lt; 2)
		{
			sItemSearchExpr = &quot;[Root Service Num]=&apos;&quot; + sMSISDN + &quot;&apos; AND [Order Type]=&apos;&quot; + sOrderTypeModify +
							  &quot;&apos; AND [Order Sub Type]=&apos;&quot; + sOrderSubTypeModify +
							  &quot;&apos; AND [Action Code]=&apos;&quot; + sActionDeleted + &quot;&apos; AND [Status]=&apos;&quot; + sStatusComplete +
							  &quot;&apos; AND [VF Product Group]=&apos;CAMP&apos; AND [VF Product Type]=&apos;HANDSET&apos;&quot;;

			bcItem.SetViewMode(AllView);
			bcItem.ClearToQuery();
			bcItem.ActivateField(&quot;Billing Account Id&quot;);
			bcItem.ActivateField(&quot;Created&quot;);
			bcItem.SetSearchExpr(sItemSearchExpr);
			bcItem.SetSortSpec(&quot;Created (DESCENDING)&quot;); 
			bcItem.ExecuteQuery(ForwardOnly);

			bHasItem = bcItem.FirstRecord();

			while (bHasItem)
			{
				sBillAccountId = bcItem.GetFieldValue(&quot;Billing Account Id&quot;);
				sCreated       = bcItem.GetFieldValue(&quot;Created&quot;);	

				psHandset = null;
				psHandset = TheApplication().NewPropertySet();

				psHandset.SetProperty(&quot;Billing Account Id&quot;, sBillAccountId);
				psHandset.SetProperty(&quot;Created&quot;,            sCreated);

				psHandsetList.AddChild(psHandset);

				if (psHandsetList.GetChildCount() == 2) break;

				bHasItem = bcItem.NextRecord();
			}
		}

		if (psHandsetList.GetChildCount() &lt;= 1)
		{
			Output.SetProperty(&quot;Campaign PortOut Age&quot;, &quot;Y&quot;);
			return;
		}

		while (iHandset &lt; 2)
		{
			psHandset = psHandsetList.GetChild(0);

			sBillAccountId = psHandset.GetProperty(&quot;Billing Account Id&quot;);
			sCreated       = psHandset.GetProperty(&quot;Created&quot;);

			psFunctionIn.Reset();
			psFunctionOut.Reset();

			psFunctionIn.SetProperty(&quot;Billing Account Id&quot;, sBillAccountId);
			psFunctionIn.SetProperty(&quot;OrderCreateDate&quot;,    sCreated);
			psFunctionIn.SetProperty(&quot;MSISDN&quot;,             sMSISDN);
			psFunctionIn.SetProperty(&quot;Optin Threshold&quot;,    sThreshold);

			CampPortOutAge(psFunctionIn, psFunctionOut);

			if (iHandset == 0)
			{
				sIsOptin1 = psFunctionOut.GetProperty(&quot;Campaign PortOut Age&quot;);								
			}
			else
			{
				sIsOptin2 = psFunctionOut.GetProperty(&quot;Campaign PortOut Age&quot;);
			}
						
			iHandset = iHandset + 1;
			psHandsetList.RemoveChild(0);
		}
		
		if (sIsOptin1 == &quot;N&quot; &amp;&amp; sIsOptin2 == &quot;N&quot;)
		{	
			Output.SetProperty(&quot;Campaign PortOut Age&quot;, &quot;N&quot;); 
		}
		else
		{
			Output.SetProperty(&quot;Campaign PortOut Age&quot;, &quot;Y&quot;); 
		}
	}	
	catch(e)
	{
		throw(e);
	}
	finally
	{
		psFunctionOut = null;
		psFunctionIn  = null;
		psHandset     = null;
		psHandsetList = null;
		boItem        = null;
		bcItem        = null;
		bcMLItem      = null;
		boMLItem      = null;
	}
}"
			   SEQUENCE="1"
			   UPDATED="02/03/2016 18:30:28"
			   UPDATED_BY="SADMIN"
			   CREATED="07/17/2014 13:38:51"
			   CREATED_BY="PCASTRO">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="CampPortOutAge"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function CampPortOutAge(Inputs,Outputs)
{ 
	try
    {
   		var orderCreateDate=new Date(Inputs.GetProperty(&quot;OrderCreateDate&quot;));
   		var MSISDN = Inputs.GetProperty(&quot;MSISDN&quot;);
		var accountId  = Inputs.GetProperty(&quot;Billing Account Id&quot;);
		var optinThreshold = parseInt(Inputs.GetProperty(&quot;Optin Threshold&quot;));
        var accountBO =TheApplication().GetBusObject(&quot;Billing Account&quot;);
		var accountBC = accountBO.GetBusComp(&quot;Billing Account&quot;);
		var cDate = new Date();
		var cDay = parseInt (cDate.getUTCDate());
		var cMonth = parseInt (cDate.getMonth());
		var billCycleDate = &quot;&quot;;
		var billCycleDay = &quot;&quot;;
		var expr = &quot;([Id]=&apos;&quot;+accountId+&quot;&apos;)&quot;;
			
		with(accountBC)
		{
			SetViewMode(AllView);
			ClearToQuery();
			SetSearchExpr(expr);
			ExecuteQuery(ForwardOnly);
			if (FirstRecord())
			{
				billCycleDay = parseInt (accountBC.GetFieldValue(&quot;VF Bill Cycle&quot;));
			}
		}
		
		
		if(billCycleDay &gt; cDay)
		{
		  	
		  	billCycleDate= new Date(cDate.getFullYear(),(cMonth-(optinThreshold + 1)),billCycleDay);
		}
		else
		{
			billCycleDate= new Date(cDate.getFullYear(),(cMonth-optinThreshold),billCycleDay);	
		}
		
				
		if(billCycleDate &lt; orderCreateDate)
		{
			Outputs.SetProperty(&quot;Campaign PortOut Age&quot;,&quot;N&quot;);
		}
		else
		{
			Outputs.SetProperty(&quot;Campaign PortOut Age&quot;,&quot;Y&quot;);
		}
		
     return(ContinueOperation);
		
 	}
 	
 	catch(e)
	{
		throw(e);
	}
	
 	finally
	{	
		orderCreateDate = null;
		MSISDN = null;
		accountId = null;
		optinThreshold = null;
		accountBO	= null;
		accountBC = null;
		cDate	= null;
		cDay = null;
		cMonth = null;
		billCycleDay = null;
		billCycleDate = null;
		expr = null;		
	}
}"
			   SEQUENCE="2"
			   UPDATED="07/17/2014 13:38:51"
			   UPDATED_BY="PCASTRO"
			   CREATED="07/17/2014 13:38:51"
			   CREATED_BY="PCASTRO">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="GetCompanyAge"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function GetCompanyAge(Inputs,Outputs)
{

   try
   {
    	var obj_AssetBO = TheApplication().GetBusObject (&quot;Account&quot;);
		var estDate = Inputs.GetProperty(&quot;VF Establish Date&quot;);
		var ageThreshold = Inputs.GetProperty(&quot;AgeThreshold&quot;);

        var yearFromEstDate = estDate.substring(0,4);
        var establishYear = parseFloat(yearFromEstDate); 
        
        var monthFromEstDate = estDate.substring(4,6); //VFTRCBU-32971 - JFONSECA - Changed from (5,6) to (4,6)
        var establishMonth = parseFloat(monthFromEstDate); 
		
		var aDate = new Date();
        var currentYear = aDate.getFullYear();
        
        var diff = currentYear - establishYear;
        
       	if (diff &gt; ageThreshold) {
        	Outputs.SetProperty(&quot;VF Company Age&quot;,&quot;Y&quot;);
       	}
       	else if (diff == ageThreshold) {
          var currentMonth = aDate.getMonth()+1;
          
          if (currentMonth &gt;= establishMonth) {
               Outputs.SetProperty(&quot;VF Company Age&quot;,&quot;Y&quot;);
          }
          else {
              Outputs.SetProperty(&quot;VF Company Age&quot;,&quot;N&quot;);
          }
       	}
       	else if (diff &lt; ageThreshold){
       		Outputs.SetProperty(&quot;VF Company Age&quot;,&quot;N&quot;);
       	}
       
	}
	finally
	{	
		obj_AssetBO = null;
		estDate = null;
		ageThreshold = null;
		yearFromEstDate	= null;
		establishYear = null;
		monthFromEstDate = null;
		establishMonth	= null;
		currentYear = null;
		diff = null;
	}
}"
			   SEQUENCE="3"
			   UPDATED="08/24/2016 18:12:12"
			   UPDATED_BY="JFONSECA"
			   CREATED="05/20/2013 16:25:23"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
			<BUSINESS_SERVICE_SERVER_SCRIPT
			   INACTIVE="N"
			   NAME="Service_PreInvokeMethod"
			   PROGRAM_LANGUAGE="JS"
			   SCRIPT="function Service_PreInvokeMethod (MethodName, Inputs, Outputs)
{
    if (MethodName == &quot;GetCompanyAge&quot;)
	{
		GetCompanyAge(Inputs, Outputs);
		return (CancelOperation);
	}
	if (MethodName == &quot;CampPortOutAge&quot;)
	{
		CampPortOutAge(Inputs, Outputs);
		return (CancelOperation);
	}
	if (MethodName == &quot;CampPortInCheck&quot;)
	{
		CampPortInCheck(Inputs, Outputs);
		return (CancelOperation);
	}
	return (ContinueOperation);
}"
			   SEQUENCE="4"
			   UPDATED="07/17/2014 13:38:51"
			   UPDATED_BY="PCASTRO"
			   CREATED="05/20/2013 15:13:51"
			   CREATED_BY="SADMIN">
			</BUSINESS_SERVICE_SERVER_SCRIPT>
		</BUSINESS_SERVICE>
	</PROJECT>
</REPOSITORY>



